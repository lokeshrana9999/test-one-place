{"version":3,"sources":["components/block/BlockForm.jsx","components/block/AddBlock.jsx","components/block/EditBlock.jsx","components/profile/components/ProfileForm.jsx","components/profile/components/ProfileEditView.jsx","components/profile/containers/ProfileEdit.jsx","components/profile/ProfileOperations.jsx","components/block/BlockCard.jsx","components/block/ChooseBlockCategory.jsx"],"names":["ProfileFormContainer","styled","div","InputStylized","h1","Input","InputAreaStylized","InputArea","RenderUploadStylized","RenderUploadWithCrop","profileFormSchema","title","required","minLength","maxLength","thumbnail","link","ProfileFormWithFormik","withFormik","enableReinitialize","mapPropsToValues","blockData","price","question","media","handleSubmit","values","onSubmit","props","modifiedValues","_id","console","log","validate","displayName","withTheme","addBlockFormRef","useRef","useState","setload","errors","name","ref","onFinish","component","type","label","placeholder","value","size","justify","Item","aspect","Fragment","block","htmlType","PageHead","theme","textColor","withAddUserBlock","postBlock","history","match","a","blockCategory","params","blockCategoryId","message","loading","content","duration","sending","destroy","status","success","push","error","data","style","position","top","left","onClick","goBack","withBlockById","withEditUserBlock","putBlock","blockByUsername","UsernameInputStylized","UsernamePrefix","p","Yup","shape","userProfile","username","matches","bio","firstName","user","profileImage","lastName","socialMediaLinks","map","socialM","category","setValues","validationSchema","socialMediaCategoryList","transform","bottom","right","zIndex","width","height","borderRadius","padding","color","flex","marginLeft","render","arrayHelpers","socialVal","ghost","h2","FormWrapper","minHeight","display","placeItems","background","overflowY","maxWidth","align","src","alt","overflow","withCurrentUser","Component","mapDispatchToProps","setAccessTokene","setRefreshTokene","connect","state","accessToken","app","refreshToken","apiUrl","useContext","ApiContext","ProfileApiUrls","getSocialMediaCategories","useGet","path","requestOptions","headers","Authorization","socialMediaCategories","socialMediaCategoriesLoading","withSocialMediaCategories","currentUser","defaultApiUrl","useMutate","verb","postUserProfile","postUserProfileMutation","mutate","putUserProfile","putUserProfileMutation","withAddProfile","postSocialMediaLinks","postAddSocialMedia","postAddSocialMediaLoading","withAddSocialMedia","profileMutation","handleSocialLinksSubmission","socia","key","responseSend","socialMediaLink","promises","Promise","all","socialSending","profileValues","profileSubmissionObj","BlockCardWrapper","BlockCardTitle","BlockCardDescription","BlockCardAvatarWrapper","to","image","url","className","description","navigation","BlockApiUrls","getBlockCategory","blockCategoryList","length","blockCat"],"mappings":"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","file":"static/js/profileEditDefault.6d24b7fd.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport {\r\n  FieldAdapter as Field,\r\n  phoneNumber,\r\n  required,\r\n  minLength,\r\n  validate,\r\n  maxLength,\r\n} from \"../form\";\r\nimport { withFormik } from \"formik\";\r\nimport { FaImages, FaPhotoVideo } from \"react-icons/fa\";\r\nimport { Flex } from \"antd-mobile\";\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport { WhiteSpace } from \"../look/mobile\";\r\nimport {\r\n  Input,\r\n  Form,\r\n  Alert,\r\n  InputArea,\r\n  RenderUpload,\r\n  Button,\r\n  RenderUploadWithCrop\r\n} from \"../look/web\";\r\n\r\nconst ProfileFormContainer = styled.div`\r\n  /* color: white;\r\n  padding: 50px 26px 32px;\r\n  opacity: 0.88;\r\n  border-radius: 20px;\r\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.89);\r\n  background-color: transparent; */\r\n`;\r\n\r\nconst Heading = styled.h1`\r\n  /* font-family: CircularStdMedium;\r\n  font-size: 30px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.33;\r\n  letter-spacing: normal;\r\n  text-align: center;\r\n  color: #ffffff; */\r\n`;\r\n\r\nconst LargeHeadingComponent = styled.div`\r\n  /* font-family: CircularStd;\r\n  font-size: 36px;\r\n  font-weight: 900; */\r\n`;\r\n\r\nconst InputStylized = styled(Input)`\r\n  border: solid 2px #d8d8d8;\r\n  border-radius: 7px;\r\n  font-family: Circular Std Medium;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  height: 60px !important;\r\n  padding: 0 20px;\r\n  font-size: 15px;\r\n  /* background: transparent;\r\n  caret-color: white;\r\n  color: white;\r\n   */\r\n`;\r\n\r\nconst InputAreaStylized = styled(InputArea)`\r\n  background: white !important;\r\n  border-radius: 7px;\r\n  border: solid 2px #d8d8d8;\r\n  height: 120px !important;\r\n  font-size: 15px;\r\n  padding: 10px 20px !important;\r\n  caret-color: black;\r\n  color: black;\r\n  font-family: Circular Std Medium;\r\n  word-spacing: -3px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  :focus {\r\n    caret-color: black;\r\n    color: black;\r\n    background-color: white !important;\r\n  }\r\n  :-webkit-autofill,\r\n  :-webkit-autofill:hover,\r\n  :-webkit-autofill:focus {\r\n    transition: background-color 5000s ease-in-out 0s;\r\n    -webkit-text-fill-color: black;\r\n    caret-color: black;\r\n    color: black;\r\n    background-color: white !important;\r\n  }\r\n`;\r\n\r\nconst RenderUploadStylized = styled(RenderUploadWithCrop)`\r\n  width: 140px;\r\n  height: 140px;\r\n  border-radius: 30px;\r\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\r\n  background-color: #ebebeb;\r\n  overflow: hidden;\r\n  margin: auto;\r\n  .ant-upload-picture-card-wrapper {\r\n    width: 100%;\r\n    height: 100%;\r\n    .ant-upload-list-picture-card {\r\n      width: 100%;\r\n      height: 100%;\r\n      .ant-upload-list-picture-card-container {\r\n        margin: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: #ebebeb;\r\n        .ant-upload-list-item-done {\r\n          padding: 0 !important;\r\n          margin: 0 !important;\r\n        }\r\n      }\r\n      .ant-upload-select-picture-card {\r\n        margin: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: #ebebeb;\r\n        border: 0 !important;\r\n\r\n        .ant-upload-text {\r\n          padding: 10px;\r\n          font-family: Circular Std Medium;\r\n          font-weight: normal;\r\n          font-stretch: normal;\r\n          font-style: normal;\r\n          font-size: 20px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst profileFormSchema = {\r\n  title: [required, minLength(5), maxLength(50)],\r\n  thumbnail: [required],\r\n  // media: [required],\r\n  link: [required],\r\n};\r\n\r\nconst ProfileForm = (props) => {\r\n  const addBlockFormRef = useRef(null);\r\n  const [load, setload] = useState(false);\r\n  const { values, handleSubmit, errors } = props;\r\n\r\n  return (\r\n    <ProfileFormContainer>\r\n      <Form name=\"addBlock\" ref={addBlockFormRef} onFinish={handleSubmit}>\r\n        <Field\r\n          name=\"title\"\r\n          component={InputAreaStylized}\r\n          type=\"text\"\r\n          label={\"Name of The Block\"}\r\n          placeholder=\"Name of The Block\"\r\n          value={values.title}\r\n        />\r\n\r\n        <WhiteSpace size=\"xl\" />\r\n        <Field\r\n          name=\"link\"\r\n          component={InputStylized}\r\n          type=\"text\"\r\n          label={\"Paste a Link\"}\r\n          placeholder=\"Paste a Link\"\r\n          value={values.link}\r\n        />\r\n        <WhiteSpace size=\"xl\" />\r\n\r\n        <Flex justify=\"between\">\r\n          <Flex.Item>\r\n            <Field\r\n              name=\"thumbnail\"\r\n              component={RenderUploadStylized}\r\n              type=\"media\"\r\n              aspect={1}\r\n              setload={setload}\r\n              label={\r\n                <React.Fragment>\r\n                  <FaImages size={30} />\r\n                  <br />\r\n                  Upload Thumbnail\r\n                </React.Fragment>\r\n              }\r\n              value={values.thumbnail}\r\n            />\r\n          </Flex.Item>\r\n          {/* <Flex.Item>\r\n            <Field\r\n              name=\"media\"\r\n              component={RenderUploadStylized}\r\n              type=\"media\"\r\n              setload={setload}\r\n              label={\r\n                <React.Fragment>\r\n                  <FaPhotoVideo size={30} />\r\n                  <br />\r\n                  Upload Media\r\n                </React.Fragment>\r\n              }\r\n              value={values.media}\r\n            />\r\n          </Flex.Item> */}\r\n        </Flex>\r\n        <WhiteSpace size=\"xl\" />\r\n        <Button type=\"primary\" block size=\"large\" htmlType=\"submit\">\r\n          Go Live\r\n        </Button>\r\n      </Form>\r\n    </ProfileFormContainer>\r\n  );\r\n};\r\n\r\nconst ProfileFormWithFormik = withFormik({\r\n  enableReinitialize: true,\r\n  mapPropsToValues: ({ blockData }) => {\r\n    return {\r\n      thumbnail: (blockData && blockData.thumbnail) || null,\r\n      title: (blockData && blockData.title) || \"\",\r\n      link: (blockData && blockData.link) || \"\",\r\n      price: (blockData && blockData.price) || 0,\r\n      question: (blockData && blockData.question) || \"\",\r\n      media: (blockData && blockData.media) || null,\r\n    };\r\n  },\r\n\r\n  // handleSubmit: (values, { props: { onSubmit } }) => {\r\n  // },\r\n  handleSubmit: (values, { props: { onSubmit } }) => {\r\n    let modifiedValues = values;\r\n    modifiedValues.thumbnail = values.thumbnail && values.thumbnail._id;\r\n    modifiedValues.media = values.media && values.media._id;\r\n    console.log(\"handleSubmit\", values);\r\n    onSubmit(modifiedValues);\r\n  },\r\n  // validator:{() => ({})}\r\n  validate: (values) => validate(values, profileFormSchema),\r\n  displayName: \"ProfileForm\", // helps with React DevTools\r\n});\r\n\r\nexport default withTheme(ProfileFormWithFormik(ProfileForm));\r\n","import React, { Component } from \"react\";\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport { message } from \"antd\";\r\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\r\n\r\nimport { WhiteSpace } from \"../look/mobile\";\r\nimport PageLayout from \"../look/PageLayout\";\r\nimport BlockForm from \"./BlockForm\";\r\nimport { withAddUserBlock } from \"./BlockOperations\";\r\n\r\nconst PageHead = styled.h1`\r\n  font-family: Circular Std Black;\r\n  font-size: 22px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 0.86;\r\n  letter-spacing: normal;\r\n  text-align: center;\r\n  color: #000000;\r\n  word-spacing: -8px;\r\n  position: relative;\r\n`;\r\n\r\nconst FormWrapper = styled.div`\r\n  color: ${(props) => props.theme.textColor};\r\n  position: relative;\r\n`;\r\n\r\nconst BlockAddView = (props) => {\r\n  const { postBlock, history, match } = props;\r\n  console.log(\"blockadd\", props);\r\n  const onSubmit = async (values) => {\r\n    let modifiedValues = values;\r\n    modifiedValues.blockCategory =\r\n      match && match.params && match.params.blockCategoryId;\r\n    console.log(\"addBlock\", modifiedValues);\r\n    try {\r\n      message.loading({\r\n        content: \"Adding Card ...\",\r\n        duration: 0,\r\n      });\r\n      const sending = await postBlock(modifiedValues);\r\n      console.log(sending);\r\n      message.destroy();\r\n      if (sending.status === true) {\r\n        message.success({\r\n          duration: 2,\r\n          content: \"Card Added\",\r\n        });\r\n        history.push(\"/\");\r\n      } else {\r\n        message.error({\r\n          duration: 2,\r\n          content: sending.data.message,\r\n        });\r\n      }\r\n      return sending;\r\n    } catch (e) {\r\n      message.destroy();\r\n      console.log(\"error\", e);\r\n      if (e && e.data && e.data.message) {\r\n        message.error({\r\n          duration: 2,\r\n          content: e && e.data && e.data.message,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <PageLayout>\r\n      <WhiteSpace size=\"xl\" />\r\n      <PageHead>\r\n        <AiOutlineArrowLeft\r\n          style={{ position: \"absolute\", top: \"-3px\", left: 0 }}\r\n          onClick={history.goBack}\r\n        />\r\n        Add a new card\r\n      </PageHead>\r\n      <WhiteSpace size=\"xl\" />\r\n      <WhiteSpace size=\"xl\" />\r\n      <BlockForm onSubmit={onSubmit} />\r\n    </PageLayout>\r\n  );\r\n};\r\nexport default withAddUserBlock(withTheme(BlockAddView));\r\n","import React, { Component } from \"react\";\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport { message } from \"antd\";\r\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\r\n\r\nimport { WhiteSpace } from \"../look/mobile\";\r\nimport PageLayout from \"../look/PageLayout\";\r\nimport BlockForm from \"./BlockForm\";\r\nimport { withEditUserBlock, withBlockById } from \"./BlockOperations\";\r\n\r\nconst PageHead = styled.h1`\r\n  font-family: Circular Std Black;\r\n  font-size: 22px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 0.86;\r\n  letter-spacing: normal;\r\n  text-align: center;\r\n  color: #000000;\r\n  word-spacing: -8px;\r\n  position: relative;\r\n`;\r\n\r\nconst FormWrapper = styled.div`\r\n  color: ${(props) => props.theme.textColor};\r\n  position: relative;\r\n`;\r\n\r\nconst BlockEditView = (props) => {\r\n  const { putBlock, history, match, blockByUsername } = props;\r\n  console.log(\"blockedit\", props);\r\n  const onSubmit = async (values) => {\r\n    let modifiedValues = values;\r\n    console.log(\"editBlock\", modifiedValues);\r\n    try {\r\n      message.loading({\r\n        content: \"Editing Card ...\",\r\n        duration: 0,\r\n      });\r\n      const sending = await putBlock(modifiedValues);\r\n      console.log(sending);\r\n      message.destroy();\r\n      if (sending.status === true) {\r\n        message.success({\r\n          duration: 2,\r\n          content: \"Card Updated\",\r\n        });\r\n        history.push(\"/\");\r\n      } else {\r\n        message.error({\r\n          duration: 2,\r\n          content: sending.data.message,\r\n        });\r\n      }\r\n      return sending;\r\n    } catch (e) {\r\n      message.destroy();\r\n      console.log(\"error\", e);\r\n      if (e && e.data && e.data.message) {\r\n        message.error({\r\n          duration: 2,\r\n          content: e && e.data && e.data.message,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <PageLayout>\r\n      <WhiteSpace size=\"xl\" />\r\n      <PageHead>\r\n        <AiOutlineArrowLeft\r\n          style={{ position: \"absolute\", top: \"-3px\", left: 0 }}\r\n          onClick={history.goBack}\r\n        />\r\n        Edit card\r\n      </PageHead>\r\n      <WhiteSpace size=\"xl\" />\r\n      <WhiteSpace size=\"xl\" />\r\n      <BlockForm onSubmit={onSubmit} blockData={blockByUsername} />\r\n    </PageLayout>\r\n  );\r\n};\r\nexport default withBlockById(withEditUserBlock(withTheme(BlockEditView)));\r\n","import React, { useState } from \"react\";\r\nimport { withFormik, FieldArray } from \"formik\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { Flex } from \"antd-mobile\";\r\n// import { Persist } from 'formik-persist'\r\n\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport * as Yup from \"yup\";\r\nimport { FieldAdapter as Field } from \"../../form\";\r\nimport {\r\n  Input,\r\n  Form,\r\n  Alert,\r\n  InputArea,\r\n  RenderUpload,\r\n  Button as WebButton,\r\n  RenderDynamicFieldSocial,\r\n  RenderUploadWithCrop,\r\n} from \"../../look/web\";\r\nimport { Button, WhiteSpace } from \"../../look/mobile\";\r\n\r\nconst ProfileFormContainer = styled.div`\r\n  color: white;\r\n  padding: 50px 26px 32px;\r\n  opacity: 1;\r\n  border-radius: 20px;\r\n  /* box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.89); */\r\n  background-color: transparent;\r\n  .ant-form-item-extra {\r\n    color: white !important;\r\n  }\r\n`;\r\n\r\nconst Heading = styled.h1`\r\n  font-family: Circular Std Medium;\r\n  font-size: 30px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.33;\r\n  letter-spacing: normal;\r\n  text-align: center;\r\n  color: #ffffff;\r\n`;\r\n\r\nconst LargeHeadingComponent = styled.div`\r\n  font-family: CircularStd;\r\n  font-size: 36px;\r\n  font-weight: 900;\r\n`;\r\n\r\nconst InputStylized = styled(Input)`\r\n  background: transparent !important;\r\n  border-radius: 7px;\r\n  border: solid 2px #d8d8d8;\r\n  height: 60px !important;\r\n  font-size: 15px;\r\n  padding: 0 20px;\r\n  caret-color: white;\r\n  color: white !important;\r\n  font-family: Circular Std Medium;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  :focus {\r\n    caret-color: white;\r\n    color: white;\r\n    background-color: transparent !important;\r\n  }\r\n  :-webkit-autofill,\r\n  :-webkit-autofill:hover,\r\n  :-webkit-autofill:focus {\r\n    transition: background-color 5000s ease-in-out 0s;\r\n    -webkit-text-fill-color: white;\r\n    caret-color: white;\r\n    color: white;\r\n    background-color: transparent !important;\r\n  }\r\n`;\r\n\r\nconst UsernameInputStylized = styled(Input)`\r\n  display: inline;\r\n  background: transparent !important;\r\n  border-radius: 7px;\r\n  border: solid 2px #d8d8d8;\r\n  height: 40px !important;\r\n  font-size: 15px;\r\n  padding: 0 10px;\r\n  caret-color: white;\r\n  color: white;\r\n  font-family: Circular Std Medium;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  :focus {\r\n    caret-color: white;\r\n    color: white;\r\n    background-color: transparent !important;\r\n  }\r\n  :-webkit-autofill,\r\n  :-webkit-autofill:hover,\r\n  :-webkit-autofill:focus {\r\n    transition: background-color 5000s ease-in-out 0s;\r\n    -webkit-text-fill-color: white;\r\n    caret-color: white;\r\n    color: white;\r\n    background-color: transparent !important;\r\n  }\r\n`;\r\n\r\nconst InputAreaStylized = styled(InputArea)`\r\n  background: transparent !important;\r\n  border-radius: 7px;\r\n  border: solid 2px #d8d8d8;\r\n  height: 120px !important;\r\n  font-size: 15px;\r\n  padding: 10px 20px !important;\r\n  caret-color: white;\r\n  color: white;\r\n  font-family: Circular Std Medium;\r\n  word-spacing: -3px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  :focus {\r\n    caret-color: white;\r\n    color: white;\r\n    background-color: transparent !important;\r\n  }\r\n  :-webkit-autofill,\r\n  :-webkit-autofill:hover,\r\n  :-webkit-autofill:focus {\r\n    transition: background-color 5000s ease-in-out 0s;\r\n    -webkit-text-fill-color: white;\r\n    caret-color: white;\r\n    color: white;\r\n    background-color: transparent !important;\r\n  }\r\n`;\r\n\r\nconst RenderUploadStylized = styled(RenderUploadWithCrop)`\r\n  width: 140px;\r\n  height: 140px;\r\n  border-radius: 30px;\r\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\r\n  background-color: #ffffff;\r\n  overflow: hidden;\r\n  .ant-upload-picture-card-wrapper {\r\n    width: 100%;\r\n    height: 100%;\r\n    .ant-upload-list-picture-card {\r\n      width: 100%;\r\n      height: 100%;\r\n      .ant-upload-list-picture-card-container {\r\n        margin: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: white;\r\n        .ant-upload-list-item-list-type-picture-card {\r\n          padding: 0 !important;\r\n        }\r\n        .ant-upload-list-item-done {\r\n          padding: 0 !important;\r\n          margin: 0 !important;\r\n        }\r\n      }\r\n      .ant-upload-select-picture-card {\r\n        margin: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: white;\r\n        border: 0 !important;\r\n\r\n        .ant-upload-text {\r\n          font-family: Circular Std Medium;\r\n          font-weight: normal;\r\n          font-stretch: normal;\r\n          font-style: normal;\r\n          font-size: 15px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UsernamePrefix = styled.p`\r\n  color: white;\r\n  font-family: Circular Std Medium;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  word-spacing: -3px;\r\n  margin-top: -4px;\r\n  font-size: 15px;\r\n  text-align: right;\r\n`;\r\nconst profileFormSchema = Yup.object().shape({\r\n  userProfile: Yup.object().shape({\r\n    username: Yup.string().required(\"Required\").matches(/^[A-Za-z0-9 ]+$/, \"Can only use alphabets and numbers\"),\r\n    bio: Yup.string().required(\"Required\"),\r\n    firstName: Yup.string().required(\"Required\"),\r\n  }),\r\n});\r\n\r\nconst ProfileForm = (props) => {\r\n  const [load, setload] = useState(false);\r\n  const { values, handleSubmit, socialMediaCategoryList } = props;\r\n  console.log(\"form values:\", values, socialMediaCategoryList);\r\n  return (\r\n    <ProfileFormContainer>\r\n      <Form name=\"profile\" onFinish={handleSubmit}>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"-20px\",\r\n            left: \"50%\",\r\n            transform: \"translateX(-70px)\",\r\n          }}\r\n        >\r\n          <Field\r\n            name=\"userProfile.profileImage\"\r\n            component={RenderUploadStylized}\r\n            aspect={1}\r\n            type=\"image\"\r\n            setload={setload}\r\n            label={\"Upload Your Photo\"}\r\n            value={values.userProfile.profileImage}\r\n          >\r\n            <Button\r\n              style={{\r\n                position: \"absolute\",\r\n                bottom: \"-10px\",\r\n                right: \"-10px\",\r\n                zIndex: \"10\",\r\n                width: \"30px\",\r\n                height: \"30px\",\r\n                borderRadius: \"30px\",\r\n                padding: \"0\",\r\n                color: \"#4643D3\",\r\n              }}\r\n            >\r\n              <AiFillEdit\r\n                size=\"20\"\r\n                style={{ position: \"absolute\", top: \"4px\", left: \"4px\" }}\r\n              />\r\n            </Button>\r\n          </Field>\r\n        </div>\r\n        <WhiteSpace size=\"md\" />\r\n        <WhiteSpace size=\"md\" />\r\n        <Flex type=\"wrap\">\r\n          <Flex.Item style={{ flex: 2 }}>\r\n            {\" \"}\r\n            <UsernamePrefix> oneplace.me/</UsernamePrefix>\r\n          </Flex.Item>\r\n          <Flex.Item style={{ flex: 2, marginLeft: \"5px\" }}>\r\n            <Field\r\n              name=\"userProfile.username\"\r\n              component={UsernameInputStylized}\r\n              type=\"text\"\r\n              // prefix=\"www.oneplace.me/\"\r\n              label={\"Username\"}\r\n              placeholder=\"Username\"\r\n              value={values.userProfile.username}\r\n            />\r\n          </Flex.Item>\r\n        </Flex>\r\n\r\n        <Field\r\n          name=\"userProfile.firstName\"\r\n          component={InputStylized}\r\n          type=\"text\"\r\n          label={\"First Name\"}\r\n          placeholder=\"First Name\"\r\n          value={values.userProfile.firstName}\r\n        />\r\n\r\n        <Field\r\n          name=\"userProfile.lastName\"\r\n          component={InputStylized}\r\n          type=\"text\"\r\n          label={\"Last Name\"}\r\n          placeholder=\"Last Name\"\r\n          value={values.userProfile.lastName}\r\n        />\r\n\r\n        <Field\r\n          name=\"userProfile.bio\"\r\n          component={InputAreaStylized}\r\n          type=\"textarea\"\r\n          label={\"Tell a few words about yourself \"}\r\n          placeholder=\"Tell a few words about yourself \"\r\n          value={values.userProfile.bio}\r\n        />\r\n        <FieldArray\r\n          name=\"userProfile.socialMediaLinks\"\r\n          render={(arrayHelpers) => (\r\n            <RenderDynamicFieldSocial\r\n              // quizItem={values}\r\n              arrayHelpers={arrayHelpers}\r\n              values={values.userProfile.socialMediaLinks}\r\n              name=\"userProfile.socialMediaLinks\"\r\n              // quizId={values.id}\r\n              // addSection={addSection}\r\n              // deleteSection={deleteSection}\r\n              // submitQuestion={submitQuestion}\r\n              // deleteQuestion={deleteQuestion}\r\n              // submitSection={submitSection}\r\n              socialMediaCategoryList={socialMediaCategoryList}\r\n            />\r\n          )}\r\n          socialVal={values.userProfile.socialMediaLinks}\r\n        // handleSections={handleSections}\r\n        />\r\n        <WebButton ghost htmlType=\"submit\" size=\"large\" block>\r\n          Submit\r\n        </WebButton>\r\n        {/* <Persist name=\"profile-edit-form\" /> */}\r\n      </Form>\r\n    </ProfileFormContainer>\r\n  );\r\n};\r\n\r\nconst ProfileFormWithFormik = withFormik({\r\n  enableReinitialize: false,\r\n  mapPropsToValues: ({ user }) => {\r\n    function getSocialMediaLinks(socialM) {\r\n      return {\r\n        category: (socialM && socialM.category && socialM.category._id) || \"\",\r\n        link: socialM && socialM.link,\r\n      };\r\n    }\r\n\r\n    return {\r\n      userProfile: {\r\n        username: user && user.username,\r\n        profileImage:\r\n          (user && user.userProfile && user.userProfile.profileImage) || {},\r\n        firstName:\r\n          (user && user.userProfile && user.userProfile.firstName) || \"\",\r\n        lastName: (user && user.userProfile && user.userProfile.lastName) || \"\",\r\n        bio: (user && user.userProfile && user.userProfile.bio) || \"\",\r\n        socialMediaLinks:\r\n          (user &&\r\n            user.userProfile &&\r\n            user.userProfile.socialMediaLinks &&\r\n            user.userProfile.socialMediaLinks.map(getSocialMediaLinks)) ||\r\n          [],\r\n      },\r\n    };\r\n  },\r\n\r\n  handleSubmit(values, { props: { onSubmit, setValues } }) {\r\n    console.log(\"handleSubmit\", values);\r\n    let modifiedValues = values;\r\n    modifiedValues.userProfile.profileImage =\r\n      (values.userProfile &&\r\n        values.userProfile.profileImage &&\r\n        values.userProfile.profileImage._id) ||\r\n      null;\r\n    onSubmit(modifiedValues.userProfile);\r\n  },\r\n  validationSchema: profileFormSchema,\r\n  // validate: (values) => validate(values, profileFormSchema),\r\n  displayName: \"ProfileForm\", // helps with React DevTools\r\n});\r\n\r\nexport default withTheme(ProfileFormWithFormik(ProfileForm));\r\n","import React from \"react\";\r\n// import Avatar from \"react-avatar\";\r\n// import { Flex } from \"antd-mobile\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { message } from \"antd\";\r\n\r\nimport styled, { withTheme } from \"styled-components\";\r\n\r\n// import Loadable from \"react-loadable\";\r\n// import {\r\n//   AiFillFacebook,\r\n//   AiFillInstagram,\r\n//   AiFillLinkedin,\r\n//   AiOutlineWhatsApp,\r\n//   AiFillEdit,\r\n//   AiOutlinePlusCircle,\r\n// } from \"react-icons/ai\";\r\nimport { WhiteSpace } from \"../../look/mobile\";\r\nimport ProfileForm from \"./ProfileForm\";\r\n\r\nconst PageHead = styled.h2`\r\n  color: ${(props) => props.theme.textColor};\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-family: Circular Std Medium;\r\n  word-spacing: -3px;\r\n  /* font-weight: normal; */\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  font-size: 22px;\r\n`;\r\n\r\nconst FormWrapper = styled.div`\r\n  color: ${(props) => props.theme.textColor};\r\n  position: relative;\r\n  height: fit-content;\r\n  margin-top: 40px;\r\n  background-color: #4643d3;\r\n  overflow: hidden;\r\n  padding-top: 50px;\r\n`;\r\n\r\nconst ProfileEditView = (props) => {\r\n  const { user, onSubmit, socialMediaCategoryList } = props;\r\n  // setAccessTokene('');\r\n  console.log(\"profileedit\", props);\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: \"20px 0 0 0\",\r\n        width: \"100%\",\r\n        minHeight: \"100vh\",\r\n        position: \"relative\",\r\n        display: \"grid\",\r\n        placeItems: \"center\",\r\n        background: \"white\",\r\n        overflowY: \"scroll\",\r\n      }}\r\n    >\r\n      {\" \"}\r\n      <div\r\n        style={{\r\n          maxWidth: \"500px\",\r\n          minHeight: \"100%\",\r\n          height: \"fit-content\",\r\n          width: \"100%\",\r\n          // overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <PageHead>OnePlace Universe</PageHead>\r\n        <WhiteSpace size=\"xl\" />\r\n        <div align=\"center\">\r\n          <img\r\n            src=\"https://onelinkie.s3.ap-south-1.amazonaws.com/45d5377d-4542-44b1-b6a5-38e8df2ef207-profile_edit.png\"\r\n            width=\"80%\"\r\n            alt=\"login_banner\"\r\n          />\r\n        </div>\r\n        <WhiteSpace size=\"xl\" />\r\n        <FormWrapper>\r\n          <div\r\n            style={{\r\n              height: \"390px\",\r\n              width: \"100%\",\r\n              position: \"absolute\",\r\n              top: \"-2px\",\r\n              left: \"-5px\",\r\n              right: 0,\r\n              zIndex: \"10\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            <img\r\n              style={{\r\n                width: \"100%\",\r\n              }}\r\n              src=\"https://onelinkie.s3.ap-south-1.amazonaws.com/7b5e7196-b731-4b2c-a067-9caf4bda0d75-group-219%403x.png\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              // top: \"0\",\r\n              // left: \"0\",\r\n              position: \"relative\",\r\n              // right: \"0\",\r\n              background: \"transparent\",\r\n              padding: \"80px 20px 0\",\r\n              zIndex: \"12\",\r\n            }}\r\n          >\r\n            <ProfileForm\r\n              user={user}\r\n              onSubmit={onSubmit}\r\n              socialMediaCategoryList={socialMediaCategoryList}\r\n            />\r\n          </div>\r\n        </FormWrapper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTheme(ProfileEditView);\r\n","import React from \"react\";\r\n// import Avatar from \"react-avatar\";\r\n// import { Flex } from \"antd-mobile\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { message } from \"antd\";\r\n\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\n// import { ApiContext, ProfileApiUrls } from \"../../api\";\r\nimport { withCurrentUser } from \"../../auth/Auth\";\r\n// import { setAccessTokene, setRefreshTokene } from \"../../store/appReducer\";\r\n\r\nimport {\r\n  withAddProfile,\r\n  withSocialMediaCategories,\r\n  withAddSocialMedia,\r\n} from \"../ProfileOperations\";\r\nimport ProfileEditView from \"../components/ProfileEditView\";\r\n\r\nconst PageHead = styled.h2`\r\n  color: ${(props) => props.theme.textColor};\r\n  text-align: center;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst FormWrapper = styled.div`\r\n  color: ${(props) => props.theme.textColor};\r\n  position: relative;\r\n  height: fit-content;\r\n  margin-top: 40px;\r\n  background-color: #211e28;\r\n`;\r\n\r\nconst ProfileEdit = (props) => {\r\n  const {\r\n    history,\r\n    currentUser,\r\n    postUserProfileMutation,\r\n    putUserProfileMutation,\r\n    socialMediaCategoryList,\r\n    postAddSocialMedia,\r\n  } = props;\r\n  // setAccessTokene('');\r\n\r\n  var profileMutation;\r\n\r\n  if (currentUser && currentUser.userProfile) {\r\n    profileMutation = putUserProfileMutation;\r\n  } else {\r\n    profileMutation = postUserProfileMutation;\r\n  }\r\n  const user = currentUser;\r\n\r\n  const handleSocialLinksSubmission = async (socialMediaLinks) => {\r\n    // var socialSending = [];\r\n\r\n    const promises = await socialMediaLinks.map(async (socia, key) => {\r\n      const responseSend = await postAddSocialMedia(socia);\r\n      console.log(\"responseSocialSEnd\", responseSend);\r\n      return (\r\n        responseSend &&\r\n        responseSend.socialMediaLink &&\r\n        responseSend.socialMediaLink._id\r\n      );\r\n    });\r\n    const socialSending = await Promise.all(promises)\r\n    return socialSending;\r\n  };\r\n\r\n  const onSubmit = async (values) => {\r\n    console.log(\"updateProfile\", values);\r\n    let profileValues = values;\r\n    const socialMediaLinks = profileValues.socialMediaLinks;\r\n    console.log(\r\n      \"onSubmitProfileValues\",\r\n      profileValues,\r\n      socialMediaLinks,\r\n      values\r\n    );\r\n    try {\r\n      message.loading({\r\n        content: \"Updating Profile Info\",\r\n        duration: 0,\r\n      });\r\n      const socialSending = await handleSocialLinksSubmission(socialMediaLinks);\r\n      console.log(\"socialSendingLoop\", socialSending);\r\n      const profileSubmissionObj = {\r\n        ...profileValues,\r\n        socialMediaLinks: socialSending,\r\n      };\r\n      // const profileSubmissionObj = {\r\n      //   bio: \"I am a web developer\",\r\n      //   firstName: \"Lokesh\",\r\n      //   lastName: \"Rana\",\r\n      //   profileImage: null,\r\n      //   socialMediaLinks: [\"5fe9cab0ebe9b40017220f90\"],\r\n      //   username: \"lokeshrana9999\",\r\n      // };\r\n      // // const sending = null;\r\n      console.log(\"profileSubmissionObj\", profileSubmissionObj);\r\n      const sending = await profileMutation(profileSubmissionObj);\r\n      message.destroy();\r\n      if (sending) {\r\n        console.log(\"sendingsending\", sending);\r\n        message.success({\r\n          duration: 2,\r\n          content: \"Profile Updated\",\r\n        });\r\n        history.push(\"/\");\r\n      } else {\r\n        console.log(\"elsesocial\", socialSending);\r\n        socialSending &&\r\n          socialSending.data &&\r\n          sending &&\r\n          sending.data &&\r\n          message.error({\r\n            duration: 2,\r\n            content: `${sending.data.message}`,\r\n          });\r\n      }\r\n      return sending;\r\n    } catch (e) {\r\n      message.destroy();\r\n      console.log(\"error\", e);\r\n      e &&\r\n        e.data &&\r\n        message.error({\r\n          duration: 2,\r\n          content: e.data.message,\r\n        });\r\n    }\r\n  };\r\n\r\n  console.log(\"currentUser\", props);\r\n  return (\r\n    <ProfileEditView\r\n      onSubmit={onSubmit}\r\n      user={currentUser}\r\n      socialMediaCategoryList={socialMediaCategoryList}\r\n    />\r\n  );\r\n};\r\n\r\n// const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n// const mapStateToProps = (state /*, ownProps*/) => {\r\n//   console.log(\"mapstatetoprops\", state);\r\n//   return {\r\n//     accessToken: state.app.accessToken,\r\n//     refreshToken: state.app.refreshToken,\r\n//   };\r\n// };\r\n\r\nexport default withCurrentUser(\r\n  withSocialMediaCategories(withAddProfile(withAddSocialMedia(ProfileEdit)))\r\n);\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useGet, useMutate } from \"restful-react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { ApiContext, ProfileApiUrls } from \"../../api\";\r\nimport { PageLoader } from \"../look/mobile\";\r\nimport { setAccessTokene, setRefreshTokene } from \"../../store/appReducer\";\r\n\r\n// import authentication from '@gqlapp/authentication-client-react';\r\n\r\n// import CURRENT_USER_QUERY from '../graphql/CurrentUserQuery.graphql';\r\nconst withCurrentUserProfile = (Component) => {\r\n  const WithUserInner = ({ ...props }) => {\r\n    const { history, refreshToken, setAccessTokene, accessToken } = props;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n    const apiUrl = defaultApiUrl + ProfileApiUrls.getCurrentUserProfile;\r\n    var currentUserProfileLoading = true;\r\n\r\n    var currentUserProfileData;\r\n    const { data, loading, error } = useGet({\r\n      path: apiUrl,\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n    currentUserProfileLoading = loading;\r\n    currentUserProfileData = data && data.userProfile;\r\n    console.log(data, loading, error);\r\n\r\n    // if (\r\n    //   !currentUserProfileLoading &&\r\n    //   !currentUserProfileData &&\r\n    //   error &&\r\n    //   error.status === 401\r\n    // ) {\r\n    // }\r\n    return currentUserProfileLoading || !currentUserProfileData ? (\r\n      <PageLoader />\r\n    ) : (\r\n      <Component\r\n        {...props}\r\n        currentUserProfile={currentUserProfileData}\r\n        currentUserProfileLoading={currentUserProfileLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithUserInner);\r\n};\r\n\r\nconst withAddProfile = (Component) => {\r\n  const WithUserInner = ({ ...props }) => {\r\n    const { accessToken, currentUser } = props;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n\r\n    const {\r\n      mutate: postUserProfileMutation,\r\n      loading: postUserProfileLoading,\r\n    } = useMutate({\r\n      verb: \"POST\",\r\n      path: defaultApiUrl + ProfileApiUrls.postUserProfile,\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n    const {\r\n      mutate: putUserProfileMutation,\r\n      loading: putUserProfileLoading,\r\n    } = useMutate({\r\n      verb: \"PUT\",\r\n      path:\r\n        defaultApiUrl +\r\n        ProfileApiUrls.putUserProfile(\r\n          currentUser.userProfile && currentUser.userProfile._id\r\n        ),\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n    // if (\r\n    //   !currentUserLoading &&\r\n    //   !currentUserData &&\r\n    //   error &&\r\n    //   error.status === 401\r\n    // ) {\r\n    // }\r\n    return (\r\n      <Component\r\n        {...props}\r\n        postUserProfileMutation={postUserProfileMutation}\r\n        putUserProfileMutation={putUserProfileMutation}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithUserInner);\r\n};\r\n\r\nconst withAddSocialMedia = (Component) => {\r\n  const WithAddSocialMediaInner = ({ ...props }) => {\r\n    const { accessToken } = props;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n\r\n    const {\r\n      mutate: postAddSocialMedia,\r\n      loading: postAddSocialMediaLoading,\r\n    } = useMutate({\r\n      verb: \"POST\",\r\n      path: defaultApiUrl + ProfileApiUrls.postSocialMediaLinks,\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n    return (\r\n      <Component\r\n        {...props}\r\n        postAddSocialMedia={postAddSocialMedia}\r\n        postAddSocialMediaLoading={postAddSocialMediaLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithAddSocialMediaInner);\r\n};\r\n\r\n\r\n\r\nconst withSocialMediaCategories = (Component) => {\r\n  const WithUserInner = ({ ...props }) => {\r\n    const { history, refreshToken, setAccessTokene, accessToken } = props;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n    const apiUrl = defaultApiUrl + ProfileApiUrls.getSocialMediaCategories;\r\n    const {\r\n      data: socialMediaCategories,\r\n      loading: socialMediaCategoriesLoading,\r\n      error,\r\n    } = useGet({\r\n      path: apiUrl,\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n    const socialMediaCategoryList =\r\n      socialMediaCategories && socialMediaCategories.socialMediaCategoryList;\r\n    // if (\r\n    //   !currentUserProfileLoading &&\r\n    //   !currentUserProfileData &&\r\n    //   error &&\r\n    //   error.status === 401\r\n    // ) {\r\n    // }\r\n    return socialMediaCategoriesLoading || !socialMediaCategoryList ? (\r\n      <PageLoader />\r\n    ) : (\r\n      <Component\r\n        {...props}\r\n        socialMediaCategoryList={socialMediaCategoryList}\r\n        socialMediaCategoriesLoading={socialMediaCategoriesLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithUserInner);\r\n};\r\n\r\n// const RefreshAccessToken = ({ children,  }) => {\r\n//   const { mutate: refreshAccessToken, loading } = useMutate({\r\n//     verb: \"POST\",\r\n//     path: defaultApiUrl + AuthApiUrls.refreshAccessToken,\r\n//   });\r\n//   const refreshAccessTokenData = refreshAccessToken(refreshToken);\r\n//   console.log(\"refreshAccessToken\", refreshAccessTokenData);\r\n//   return loading && (<PageLoader> <React.Fragment>{children}</React.Fragment></PageLoader>);\r\n// };\r\n\r\n// export default RefreshAccessToken;\r\n\r\n// const hasRole = (role, currentUser) => {\r\n//   return currentUser &&\r\n//     (!role ||\r\n//       (Array.isArray(role) ? role : [role]).indexOf(currentUser.role) >= 0)\r\n//     ? true\r\n//     : false;\r\n// };\r\n\r\n// const withLoadedUser = (Component) => {\r\n//   const WithLoadedUser = ({ currentUserLoading, ...props }) =>\r\n//     currentUserLoading ? null : <Component {...props} />;\r\n\r\n//   WithLoadedUser.propTypes = {\r\n//     currentUser: PropTypes.object,\r\n//     currentUserLoading: PropTypes.bool.isRequired,\r\n//   };\r\n\r\n//   return withCurrentUser(WithLoadedUser);\r\n// };\r\n\r\n// const IfLoggedInComponent = ({\r\n//   currentUser,\r\n//   role,\r\n//   children,\r\n//   elseComponent,\r\n//   refetchCurrentUser,\r\n//   ...restProps\r\n// }) =>\r\n//   hasRole(role, currentUser)\r\n//     ? React.cloneElement(children, {\r\n//         ...restProps,\r\n//       })\r\n//     : elseComponent || null;\r\n// IfLoggedInComponent.propTypes = {\r\n//   currentUser: PropTypes.object,\r\n//   role: PropTypes.oneOfType([\r\n//     PropTypes.arrayOf(PropTypes.string),\r\n//     PropTypes.string,\r\n//   ]),\r\n//   elseComponent: PropTypes.node,\r\n//   children: PropTypes.node,\r\n// };\r\n\r\n// const IfLoggedIn = withLoadedUser(IfLoggedInComponent);\r\n\r\n// const IfNotLoggedInComponent = ({\r\n//   currentUser,\r\n//   children,\r\n//   refetchCurrentUser,\r\n//   ...restProps\r\n// }) =>\r\n//   !currentUser\r\n//     ? React.cloneElement(children, {\r\n//         ...restProps,\r\n//       })\r\n//     : null;\r\n// IfNotLoggedInComponent.propTypes = {\r\n//   currentUser: PropTypes.object,\r\n//   children: PropTypes.node,\r\n// };\r\n\r\n// const IfNotLoggedIn = withLoadedUser(IfNotLoggedInComponent);\r\n\r\n// const withLogout = (Component) =>\r\n//   withApollo(({ client, ...props }) => {\r\n//     const newProps = {\r\n//       ...props,\r\n//       logout: () => authentication.doLogout(client),\r\n//     };\r\n//     return <Component {...newProps} />;\r\n//   });\r\n\r\nexport {\r\n  withAddProfile,\r\n  withCurrentUserProfile,\r\n  withSocialMediaCategories,\r\n  withAddSocialMedia\r\n  //   hasRole,\r\n  //   withLoadedUser,\r\n  //   IfLoggedIn,\r\n  //   IfNotLoggedIn,\r\n  //   withLogout,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Flex } from \"antd-mobile\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"react-avatar\";\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport { WhiteSpace } from \"../look/mobile\";\r\n\r\nconst BlockCardWrapper = styled.div`\r\n  padding: 20px;\r\n  background-color: #2c2c2c;\r\n  height: 107px;\r\n  margin-bottom: 20px;\r\n  border-radius: 7px;\r\n  border: solid 1px #f2f2f2;\r\n  background-color: #f8f8f8;\r\n`;\r\n\r\nconst BlockCardTitle = styled.h2`\r\n  font-family: Circular Std Medium;\r\n  font-size: 17px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.41;\r\n  letter-spacing: normal;\r\n  text-align: left;\r\n  color: #000000;\r\n`;\r\n\r\nconst BlockCardDescription = styled.p`\r\n  font-family: Circular Std Medium;\r\n  font-size: 12px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.58;\r\n  letter-spacing: normal;\r\n  text-align: left;\r\n  color: #000000;\r\n`;\r\n\r\nconst BlockCardAvatarWrapper = styled.div`\r\n  height: 55px;\r\n  width: 55px;\r\n  display: grid;\r\n  place-items: center;\r\n  background: white;\r\n  border-radius: 55px;\r\n  box-shadow: 0 5px 15px 0 rgba(0, 0, 0, 0.09);\r\n`;\r\n\r\nconst BlockCard = (props) => {\r\n  const { blockCategory, key } = props;\r\n  return (\r\n    <Link key={key} to={`/block/add/${blockCategory._id}`}>\r\n      <BlockCardWrapper key={key}>\r\n        <Flex>\r\n          <Flex.Item style={{ flex: 1 }}>\r\n            <div\r\n              style={{\r\n                height: \"100%\",\r\n                width: \"fit-content\",\r\n                display: \"grid\",\r\n                placeItems: \"center\",\r\n              }}\r\n            >\r\n              <BlockCardAvatarWrapper>\r\n                <Avatar\r\n                  size=\"30\"\r\n                  src={\r\n                    blockCategory &&\r\n                    blockCategory.image &&\r\n                    blockCategory.image.url\r\n                  }\r\n                />\r\n              </BlockCardAvatarWrapper>\r\n            </div>\r\n          </Flex.Item>\r\n          <Flex.Item style={{ flex: 3 }}>\r\n            <BlockCardTitle className=\"one-line-limiter\">\r\n              {blockCategory && blockCategory.title}\r\n            </BlockCardTitle>\r\n            <WhiteSpace size=\"sm\" />\r\n            <BlockCardDescription className=\"two-line-limiter\">\r\n              {blockCategory && blockCategory.description}\r\n            </BlockCardDescription>\r\n          </Flex.Item>\r\n        </Flex>\r\n      </BlockCardWrapper>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default withTheme(BlockCard);\r\n","import React, { useContext, useState } from \"react\";\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport { useGet } from \"restful-react\";\r\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\r\n\r\nimport { WhiteSpace, Loader } from \"../look/mobile\";\r\nimport { ApiContext, BlockApiUrls } from \"../../api\";\r\nimport BlockCard from \"./BlockCard\";\r\n\r\nconst PageHead = styled.h1`\r\n  font-family: Circular Std Black;\r\n  font-size: 22px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 0.86;\r\n  letter-spacing: normal;\r\n  text-align: center;\r\n  color: #000000;\r\n  word-spacing: -8px;\r\n  position: relative;\r\n`;\r\n\r\nconst ChooseBlockCategoryView = (props) => {\r\n  const { history, navigation } = props;\r\n  console.log(\"history\", history);\r\n  const defaultApiUrl = useContext(ApiContext);\r\n  const apiUrl = defaultApiUrl + BlockApiUrls.getBlockCategory;\r\n  const { data, loading } = useGet({\r\n    path: apiUrl,\r\n  });\r\n  const blockCategoryList = data && data.blockCategoryList;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        minHeight: \"100vh\",\r\n        position: \"relative\",\r\n        display: \"grid\",\r\n        placeItems: \"center\",\r\n        background: \"white\",\r\n      }}\r\n    >\r\n      {\" \"}\r\n      <div\r\n        style={{\r\n          padding: \"15px 20px\",\r\n          maxWidth: \"500px\",\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <WhiteSpace size=\"xl\" />\r\n        <PageHead>\r\n          {\" \"}\r\n          <AiOutlineArrowLeft\r\n            style={{ position: \"absolute\", top: '-3px', left: 0 }}\r\n            onClick={history.goBack}\r\n          />\r\n          Add a new card\r\n        </PageHead>\r\n        <WhiteSpace size=\"xl\" />\r\n        {loading ? (\r\n          <Loader size=\"large\" />\r\n        ) : (\r\n          <div>\r\n            {blockCategoryList && blockCategoryList.length !== 0 ? (\r\n              <div>\r\n                {blockCategoryList.map((blockCat, key) => (\r\n                  <BlockCard blockCategory={blockCat} key={key} />\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <h3>No cards available</h3>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTheme(ChooseBlockCategoryView);\r\n"],"sourceRoot":""}