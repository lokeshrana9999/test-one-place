{"version":3,"sources":["components/form/FieldAdapter.jsx","components/form/validation.js","components/look/web/RenderUpload.jsx","components/look/web/RenderUploadWithCrop.jsx","components/look/web/Input.jsx","components/look/web/InputArea.jsx","components/look/web/Form.jsx","components/look/web/Button.jsx","components/look/web/RenderDynamicFieldSocial.jsx","components/look/web/RenderSelect.jsx","components/look/web/Option.jsx","components/look/web/Popconfirm.jsx","components/auth/Auth.jsx","components/look/PageLayout.jsx","components/block/BlockOperations.jsx"],"names":["FieldAdapter","props","onChange","e","secondArg","console","log","formik","fieldType","type","setFieldValue","name","_isAMomentObject","Array","isArray","isString","isNumber","target","value","checked","parseInt","handleChange","onBlur","setFieldTouched","onChangeText","this","component","defaultChecked","disabled","defaultValue","meta","touched","getPath","error","errors","input","React","createElement","Component","connect","required","undefined","maxLength","max","length","minLength","min","phoneNumber","test","validate","object","schema","collectedErrors","validateFormInner","values","innerSchema","collector","Object","keys","filter","v","hasOwnProperty","forEach","s","validator","result","FormItem","Form","Item","RenderUpload","onChangeHandler","file","fileList","arrayHelpers","status","setload","response","upload_obj","upload","setState","handleCancel","previewVisible","state","previewImage","label","className","children","handleBlur","aspect","uploadButton","validateStatus","grid","quality","rotate","onFocus","action","process","listType","onPreview","handlePreview","StyledADInput","styled","ADInput","withTheme","extra","ADTextArea","Input","TextArea","StyledADTextArea","Button","DrawerWrapperRenderer","div","InputStylized","AddSocialMedia","DynamicFieldSet","showDrawer","visible","onClose","socialClickHandler","id","add","obj","link","category","push","drawerOpenState","socialMediaCategoryList","formItems","availableSocialMediaCategoryList","item","find","vall","_id","getImageUrlById","idd","socObj","ss","image","url","map","indexv","key","style","marginBottom","placeholder","prefix","src","alt","width","height","marginRight","suffix","color","fontSize","onClick","remove","marginTop","align","flex","size","placement","closable","getContainer","position","overflowX","justify","socia","Select","Option","Popconfirm","withCurrentUser","mapDispatchToProps","setAccessTokene","setRefreshTokene","accessToken","app","refreshToken","currentUserLoading","currentUserData","history","apiUrl","useContext","ApiContext","UserApiUrls","getCurrentUser","useGet","path","requestOptions","headers","Authorization","data","loading","user","currentUser","withUserByUsername","match","username","params","getUserByUsername","userLoading","userData","PageLayoutContainer","PageLayoutDiv","PageLayoutContent","theme","brandSecondary","StyledTabBar","TabBar","PageLayout","selectedTab","hidden","fullScreen","componentChildren","title","icon","selectedIcon","selected","onPress","data-seed","renderContent","withUserBlocks","BlockApiUrls","getBlocksByUsername","userBlockLoading","userBlockData","blocksList","userBlock","withBlockById","blockId","getBlockById","verb","blockByUsernameLoading","blockByUsernameData","block","blockByUsername","withAddUserBlock","postBlock","useMutate","mutate","postBlockLoading","withEditUserBlock","putBlockById","putBlock","putBlockLoading","withDeleteUserBlock","deleteBlock","deleteBlockLoading"],"mappings":"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","file":"static/js/2.6a180d45.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"formik\";\r\nimport { get as getPath } from \"lodash\";\r\nimport { isString, isNumber } from \"util\";\r\n\r\nconst PLATFORM = \"m\";\r\n\r\nclass FieldAdapter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n  }\r\n  onChange = (e, secondArg) => {\r\n    console.log(\"onChange\", e, secondArg, this.props);\r\n    const { formik, onChange, type: fieldType } = this.props;\r\n    if (onChange) {\r\n      onChange(e);\r\n    }\r\n    if (fieldType === \"image\" || fieldType === \"media\") {\r\n      formik.setFieldValue(this.props.name, e);\r\n    }\r\n    else if (e._isAMomentObject && secondArg) {\r\n      this.props.formik.setFieldValue(this.props.name, secondArg);\r\n    } else if (\r\n      Array.isArray(e) &&\r\n      e[0]._isAMomentObject &&\r\n      e[1]._isAMomentObject &&\r\n      secondArg\r\n    ) {\r\n      this.props.formik.setFieldValue(this.props.name, secondArg);\r\n    } else if (isString(e)) {\r\n      // for Option Field\r\n      this.props.formik.setFieldValue(this.props.name, e);\r\n    } else if (isNumber(e)) {\r\n      this.props.formik.setFieldValue(this.props.name, e);\r\n    } else if (e && e.target && e.target.type == \"radio\") {\r\n      this.props.formik.setFieldValue(e.target.name, e.target.value);\r\n    } else if (e && e.target && e.target.checked) {\r\n      this.props.formik.setFieldValue(e.target.name, e.target.checked);\r\n    } else if (e && e.target && e.target.type == \"number\") {\r\n      this.props.formik.setFieldValue(e.target.name, parseInt(e.target.value));\r\n    } else {\r\n      formik.handleChange(e);\r\n    }\r\n  };\r\n\r\n  onBlur = (e) => {\r\n    const { formik, onBlur, name } = this.props;\r\n    if (onBlur) {\r\n      onBlur(e);\r\n    } else {\r\n      if (PLATFORM === \"mobile\") {\r\n        formik.setFieldTouched(name, true);\r\n      } else {\r\n        // console.log(name);\r\n        // formik.handleBlur(e);\r\n        formik.setFieldTouched(name, true);\r\n      }\r\n    }\r\n  };\r\n\r\n  onChangeText = (value) => {\r\n    const { formik, onChangeText, onChange, name } = this.props;\r\n    if (onChange && !onChangeText) {\r\n      onChange(value);\r\n    } else if (onChangeText) {\r\n      onChangeText(value);\r\n    } else {\r\n      formik.setFieldValue(name, value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { formik, component, name, defaultChecked, disabled } = this.props;\r\n    let { defaultValue } = this.props;\r\n    let { value, checked } = this.props;\r\n    value = value || \"\";\r\n    // const type = this.props.type;\r\n    // if (type == 'number') {\r\n    //   value = parseInt(value);\r\n    //   defaultValue = parseInt(defaultValue);\r\n    //   console.log(value);\r\n    // }\r\n\r\n    checked = checked || false;\r\n    const meta = {\r\n      touched: getPath(formik.touched, name),\r\n      error: getPath(formik.errors, name),\r\n    };\r\n    const input = {\r\n      onBlur: this.onBlur,\r\n      name,\r\n      value,\r\n      checked,\r\n      defaultValue,\r\n      defaultChecked,\r\n      disabled,\r\n    };\r\n\r\n    const changeEventHandler =\r\n      PLATFORM === \"mobile\" ? \"onChangeText\" : \"onChange\";\r\n    input[changeEventHandler] = this[changeEventHandler];\r\n\r\n    return React.createElement(component, {\r\n      ...this.props,\r\n      input,\r\n      meta,\r\n    });\r\n  }\r\n}\r\n\r\nFieldAdapter.propTypes = {\r\n  formik: PropTypes.object.isRequired,\r\n  component: PropTypes.func,\r\n  type: PropTypes.string,\r\n  onChangeText: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.any,\r\n  defaultValue: PropTypes.any,\r\n  checked: PropTypes.bool,\r\n  defaultChecked: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default connect(FieldAdapter);\r\n","/**\r\n * Validates if the value is empty.\r\n *\r\n * @param value\r\n * @return {undefined | string}\r\n */\r\nexport const required = (value) => (value ? undefined : 'Field Required');\r\n\r\n/**\r\n * Validates the maximal length of the value.\r\n * Usage: const maxLength15 = maxLength(15)\r\n *\r\n * @param max\r\n * @return {undefined | string}\r\n */\r\nexport const maxLength = (max) => (value) =>\r\n  value && value.length > max ? `Input shouldn't be bigger than ${max} characters` : undefined;\r\n\r\n/**\r\n * Validates the minimal length of the value.\r\n * Usage: export const minLength2 = minLength(2)\r\n *\r\n * @param min\r\n * @return {undefined | string}\r\n */\r\nexport const minLength = (min) => (value) =>\r\n  value && value.length < min ? `Input should be bigger than ${min} characters` : undefined;\r\n\r\n/**\r\n * Validates if the value is a number.\r\n *\r\n * @param value\r\n * @return {undefined | string}\r\n */\r\nexport const number = (value) => (value && isNaN(Number(value)) ? 'Input is not a number' : undefined);\r\n\r\n/**\r\n * Validates if the value is a string.\r\n *\r\n * @param value\r\n * @return {undefined | string}\r\n */\r\nexport const string = (value) =>\r\n  value && !(typeof value === 'string' || value instanceof String) ? 'Input is not a string' : undefined;\r\n\r\n/**\r\n * Validates the minimal value.\r\n * Usage: export const minValue18 = minValue(18);\r\n *\r\n * @param min\r\n * @return {undefined | string}\r\n */\r\nexport const minValue = (min) => (value) =>\r\n  value && value < min ? `Input should be bigger than ${min}` : undefined;\r\n\r\n/**\r\n * Validates the email.\r\n *\r\n * @param value\r\n * @return {undefined | string}\r\n */\r\nexport const email = (value) =>\r\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Input is not an email' : undefined;\r\n\r\n/**\r\n * Validates if the value is alpha-numeric.\r\n *\r\n * @param value\r\n * @return {undefined | string}\r\n */\r\nexport const alphaNumeric = (value) =>\r\n  value && /[^a-zA-Z0-9 ]/i.test(value) ? 'Input is not alpha numeric' : undefined;\r\n\r\n/**\r\n * Validates the phone number.\r\n *\r\n * @param value\r\n * @return {undefined | string}\r\n */\r\nexport const phoneNumber = (value) =>\r\n  value && !/^(\\+)?([ 0-9]){10,16}$/i.test(value) ? 'Input is not a phone number' : undefined;\r\n\r\n\r\n\r\n/**\r\n * Validates the input object according to the input schema.\r\n *\r\n * @param object\r\n * @param schema\r\n * @return object with errors\r\n */\r\nexport const validate = (object, schema) => {\r\n  const errors = {};\r\n  const validateFormInner = (\r\n    values,\r\n    innerSchema,\r\n    collector\r\n  ) => {\r\n    Object.keys(innerSchema)\r\n      .filter(v => innerSchema.hasOwnProperty(v))\r\n      .forEach(v => {\r\n        const s = innerSchema[v];\r\n\r\n        if (Array.isArray(s)) {\r\n          s.forEach(validator => {\r\n            const result = validator(values[v], values);\r\n            if (result) {\r\n              collector[v] = result;\r\n            }\r\n          });\r\n        } else {\r\n          validateFormInner(values[v], innerSchema[v], collector);\r\n        }\r\n      });\r\n\r\n    return collector;\r\n  };\r\n\r\n  const collectedErrors = validateFormInner(object, schema, errors);\r\n  return Object.keys(collectedErrors).length ? collectedErrors : undefined;\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Form, Upload, Modal } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class RenderUpload extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // To Do Fix this thing\r\n    this.state = {\r\n      previewVisible: false,\r\n      previewImage: \"\",\r\n      fileList: props.value ? [props.value] : [],\r\n    };\r\n  }\r\n\r\n  onChangeHandler = ({ file, fileList }) => {\r\n    const arrayHelpers = this.props.arrayHelpers;\r\n\r\n    if (file.status === \"uploading\") {\r\n      this.props.setload(true);\r\n    }\r\n\r\n    if (file.status == \"done\") {\r\n      this.props.setload(false);\r\n      if (file.response) {\r\n        let upload_obj = file.response && file.response.upload;\r\n        if (upload_obj) {\r\n          // console.log(upload_obj);\r\n          //set value in form\r\n          this.props.input.onChange(upload_obj);\r\n        }\r\n      }\r\n    } else if (file.status == \"removed\") {\r\n      this.props.setload(false);\r\n      // console.log(file);\r\n      //remove value in form\r\n      this.props.input.onChange(\"\");\r\n    }\r\n    this.setState({ fileList });\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  // handlePreview = file => {\r\n  //   this.setState({\r\n  //     previewImage: file.url || file.thumbUrl,\r\n  //     previewVisible: true\r\n  //   });\r\n  // };\r\n\r\n  handleChange = ({ fileList }) => this.setState({ fileList });\r\n\r\n  render() {\r\n    // { input, label, meta: { touched, error }, defaultFileList }) = this.props\r\n    // const touched = this.props.meta.touched;\r\n    // const error = this.props.meta.error;\r\n    const { label, className, children, meta, handleBlur } = this.props;\r\n    // const input = this.props.input;\r\n    // console.log(input);\r\n    // const defaultFileList = this.props.defaultFileList;\r\n\r\n    // const cloudinary_url = 'https://api.cloudinary.com/v1_1/nodejs-starter-kit/image/upload';\r\n    // const cloudinary_data = { upload_preset: 'hycdtdxe' };\r\n\r\n    // const headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\r\n    // const cloudinary_data = { upload_preset: 'nxzf2ip6' };\r\n    const imageApiUrl = process.env.REACT_APP_IMAGE_API_URL;\r\n\r\n    let validateStatus = \"\";\r\n    // if (touched && error) {\r\n    //   validateStatus = 'error';\r\n    // }\r\n    // let defaultFileList = [];\r\n    // if (this.props.values) {\r\n    //   defaultFileList = this.props.values.map((img, index) => ({\r\n    //     uid: index,\r\n    //     name: 'link',\r\n    //     status: 'done',\r\n    //     url: img.imageUrl,\r\n    //     thumbUrl: img.imageUrl\r\n    //   }));\r\n    // }\r\n\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        {/* <Icon type=\"plus\" /> */}\r\n        <div className=\"ant-upload-text\">{label}</div>\r\n      </div>\r\n    );\r\n    console.log('Meta', meta);\r\n    return (\r\n      <FormItem\r\n        validateStatus={validateStatus}\r\n        validateStatus={meta.touched && meta.error && \"error\"}\r\n        extra={meta.touched && meta.error}\r\n      >\r\n        <div className={`clearfix antd-upload-custom-wrapper ${className}`}>\r\n          <Upload\r\n            onFocus={handleBlur}\r\n            action={imageApiUrl}\r\n            listType=\"picture-card\"\r\n            fileList={fileList}\r\n            onPreview={this.handlePreview}\r\n            onChange={this.onChangeHandler}\r\n          >\r\n            {fileList.length >= 1 ? null : uploadButton}\r\n            {children}\r\n          </Upload>\r\n          {/* <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n            <img alt=\"image\" style={{ width: '100%' }} src={previewImage} />\r\n          </Modal> */}\r\n        </div>{\" \"}\r\n      </FormItem>\r\n    );\r\n  }\r\n}\r\nRenderUpload.propTypes = {\r\n  input: PropTypes.object,\r\n  label: PropTypes.string,\r\n  setload: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Form, Upload, Modal } from \"antd\";\r\nimport ImgCrop from \"antd-img-crop\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class RenderUpload extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // To Do Fix this thing\r\n    this.state = {\r\n      previewVisible: false,\r\n      previewImage: \"\",\r\n      fileList: props.value ? [props.value] : [],\r\n    };\r\n  }\r\n\r\n  onChangeHandler = ({ file, fileList }) => {\r\n    const arrayHelpers = this.props.arrayHelpers;\r\n\r\n    if (file.status === \"uploading\") {\r\n      this.props.setload(true);\r\n    }\r\n\r\n    if (file.status == \"done\") {\r\n      this.props.setload(false);\r\n      if (file.response) {\r\n        let upload_obj = file.response && file.response.upload;\r\n        if (upload_obj) {\r\n          // console.log(upload_obj);\r\n          //set value in form\r\n          this.props.input.onChange(upload_obj);\r\n        }\r\n      }\r\n    } else if (file.status == \"removed\") {\r\n      this.props.setload(false);\r\n      // console.log(file);\r\n      //remove value in form\r\n      this.props.input.onChange(\"\");\r\n    }\r\n    this.setState({ fileList });\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  // handlePreview = file => {\r\n  //   this.setState({\r\n  //     previewImage: file.url || file.thumbUrl,\r\n  //     previewVisible: true\r\n  //   });\r\n  // };\r\n\r\n  handleChange = ({ fileList }) => this.setState({ fileList });\r\n\r\n  render() {\r\n    // { input, label, meta: { touched, error }, defaultFileList }) = this.props\r\n    // const touched = this.props.meta.touched;\r\n    // const error = this.props.meta.error;\r\n    const { label, className, children, meta, handleBlur, aspect } = this.props;\r\n    // const input = this.props.input;\r\n    // console.log(input);\r\n    // const defaultFileList = this.props.defaultFileList;\r\n\r\n    // const cloudinary_url = 'https://api.cloudinary.com/v1_1/nodejs-starter-kit/image/upload';\r\n    // const cloudinary_data = { upload_preset: 'hycdtdxe' };\r\n\r\n    // const headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\r\n    // const cloudinary_data = { upload_preset: 'nxzf2ip6' };\r\n    const imageApiUrl = process.env.REACT_APP_IMAGE_API_URL;\r\n\r\n    let validateStatus = \"\";\r\n    // if (touched && error) {\r\n    //   validateStatus = 'error';\r\n    // }\r\n    // let defaultFileList = [];\r\n    // if (this.props.values) {\r\n    //   defaultFileList = this.props.values.map((img, index) => ({\r\n    //     uid: index,\r\n    //     name: 'link',\r\n    //     status: 'done',\r\n    //     url: img.imageUrl,\r\n    //     thumbUrl: img.imageUrl\r\n    //   }));\r\n    // }\r\n\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        {/* <Icon type=\"plus\" /> */}\r\n        <div className=\"ant-upload-text\">{label}</div>\r\n      </div>\r\n    );\r\n    console.log(\"Meta\", meta);\r\n    return (\r\n      <FormItem\r\n        validateStatus={validateStatus}\r\n        validateStatus={meta.touched && meta.error && \"error\"}\r\n        extra={meta.touched && meta.error}\r\n      >\r\n        <div className={`clearfix antd-upload-custom-wrapper ${className}`}>\r\n          <ImgCrop aspect={aspect} grid={true} quality={1} rotate>\r\n            <Upload\r\n              onFocus={handleBlur}\r\n              action={imageApiUrl}\r\n              listType=\"picture-card\"\r\n              fileList={fileList}\r\n              onPreview={this.handlePreview}\r\n              onChange={this.onChangeHandler}\r\n            >\r\n              {fileList.length >= 1 ? null : uploadButton}\r\n              {children}\r\n            </Upload>\r\n          </ImgCrop>\r\n          {/* <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n            <img alt=\"image\" style={{ width: '100%' }} src={previewImage} />\r\n          </Modal> */}\r\n        </div>{\" \"}\r\n      </FormItem>\r\n    );\r\n  }\r\n}\r\nRenderUpload.propTypes = {\r\n  input: PropTypes.object,\r\n  label: PropTypes.string,\r\n  setload: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Input as ADInput, Form } from \"antd\";\r\nimport styled, { withTheme } from \"styled-components\";\r\n\r\nconst StyledADInput = styled(ADInput)`\r\n  /* display:block; */\r\n`;\r\n\r\nconst Input = ({ children, ...props }) => {\r\n  const {\r\n    formik: { setFieldValue, handleBlur },\r\n    name,\r\n    meta,\r\n  } = props;\r\n  return (\r\n    <Form.Item\r\n      validateStatus={meta.touched && meta.error && \"error\"}\r\n      extra={meta.touched && meta.error}\r\n    >\r\n      <StyledADInput\r\n        onBlur={handleBlur}\r\n        {...props}\r\n        onChange={(e) => {\r\n          setFieldValue(name, e.target.value);\r\n        }}\r\n      >\r\n        {children}\r\n      </StyledADInput>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default withTheme(Input);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Input, Form } from \"antd\";\r\nimport styled, { withTheme } from \"styled-components\";\r\n\r\nconst ADTextArea = Input.TextArea;\r\n\r\nconst StyledADTextArea = styled(ADTextArea)`\r\n  /* display:block; */\r\n`;\r\n\r\nconst TextArea = ({ children, ...props }) => {\r\n  const {\r\n    formik: { setFieldValue, handleBlur },\r\n    name,\r\n    meta,\r\n  } = props;\r\n  console.log('textarea', props);\r\n  return (\r\n    <Form.Item\r\n      validateStatus={meta.touched && meta.error && \"error\"}\r\n      extra={meta.touched && meta.error}\r\n    >\r\n      <StyledADTextArea\r\n        onBlur={handleBlur}\r\n        {...props}\r\n        onChange={(e) => {\r\n          setFieldValue(name, e.target.value);\r\n        }}\r\n      >\r\n        {children}\r\n      </StyledADTextArea>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nTextArea.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default withTheme(TextArea);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form as ADForm } from 'antd';\r\n\r\nconst Form = ({ children, ...props }) => {\r\n  return <ADForm {...props}>{children}</ADForm>;\r\n};\r\n\r\nForm.propTypes = {\r\n  children: PropTypes.node,\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button as ADButton } from \"antd\";\r\n\r\nconst Button = ({ children, type, ...props }) => {\r\n  return (\r\n    <ADButton type={type} {...props}>\r\n      {children}\r\n    </ADButton>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.node,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FieldAdapter as Field } from \"../../form\";\r\nimport { Form, Drawer } from \"antd\";\r\nimport { Flex } from \"antd-mobile\";\r\nimport {\r\n  AiOutlineMinusCircle,\r\n  AiOutlinePlusCircle,\r\n  AiOutlineCloseCircle,\r\n} from \"react-icons/ai\";\r\nimport styled, { withTheme } from \"styled-components\";\r\n\r\nimport { Input, RenderSelect, Button, Option } from \"../web\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst DrawerWrapperRenderer = styled.div`\r\n  position: relative;\r\n  height: 60px;\r\n  padding: 0px 0px 0px 10px;\r\n  overflow: hidden;\r\n  /* text-align: center; */\r\n  /* display: grid;\r\n  place-items: center; */\r\n\r\n  background: transparent;\r\n  border: 1px solid #ebedf0;\r\n  border-radius: 7px;\r\n  margin-bottom: 20px;\r\n  .ant-drawer-mask {\r\n    background-color: transparent !important;\r\n  }\r\n  .ant-drawer-content-wrapper {\r\n    width: 100% !important;\r\n    .ant-drawer-content {\r\n      background: transparent !important;\r\n      .ant-drawer-wrapper-body {\r\n        .ant-drawer-body {\r\n          padding: 0;\r\n          padding-left: 10px;\r\n          background: white !important;\r\n        }\r\n        .ant-drawer-header {\r\n          .ant-drawer-title {\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst InputStylized = styled(Input)`\r\n  background: white !important;\r\n  border-radius: 7px;\r\n  border: solid 2px #d8d8d8;\r\n  height: 60px !important;\r\n  font-size: 20px;\r\n  padding: 0 10px;\r\n  caret-color:#4643D3;\r\n  color: #4643D3 !important;\r\n  font-family: Circular Std Medium;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  input {\r\n    background: transparent !important;\r\n    caret-color: white;\r\n    color: #4643D3 !important;\r\n    font-size: 15px;\r\n    word-spacing:-3px;\r\n    font-family: Circular Std Medium;\r\n    font-weight: normal;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n  }\r\n  input:focus {\r\n    caret-color: #4643D3;\r\n    color: #4643D3;\r\n    background-color: transparent !important;\r\n  }\r\n  input:-webkit-autofill,\r\n  input:-webkit-autofill:hover,\r\n  input:-webkit-autofill:focus {\r\n    transition: background-color 5000s ease-in-out 0s;\r\n    -webkit-text-fill-color: #4643D3;\r\n    caret-color: #4643D3;\r\n    color: #4643D3;\r\n    background-color: transparent !important;\r\n  }\r\n`;\r\n\r\nconst AddSocialMedia = styled.div`\r\n  color: white;\r\n  padding-left: 20px;\r\n  font-size: 15px;\r\n  word-spacing:-3px;\r\n  font-family: Circular Std Medium;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n`;\r\n\r\nclass DynamicFieldSet extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n    };\r\n  }\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  socialClickHandler = (id) => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.add(id);\r\n  };\r\n  add = (id) => {\r\n    const arrayHelpers = this.props.arrayHelpers;\r\n    let obj = {};\r\n    obj = {\r\n      link: \"\",\r\n      category: id,\r\n    };\r\n\r\n    // keys.map((k) => (obj[k.key] = \"\"));\r\n\r\n    arrayHelpers.push(obj);\r\n  };\r\n\r\n  render() {\r\n    const drawerOpenState = this.state.visible;\r\n    const { socialMediaCategoryList, name, values, arrayHelpers } = this.props;\r\n    console.log(\"renderdynamic\", socialMediaCategoryList);\r\n    let formItems = null;\r\n    const availableSocialMediaCategoryList = socialMediaCategoryList.filter(\r\n      (item) => !values.find((vall) => vall.category === item._id)\r\n    );\r\n    const getImageUrlById = (idd) => {\r\n      const socObj =\r\n        socialMediaCategoryList &&\r\n        socialMediaCategoryList.find((ss) => ss._id === idd);\r\n      return socObj && socObj.image && socObj.image.url;\r\n    };\r\n    if (values) {\r\n      formItems = values.map((v, indexv) => (\r\n        <FormItem required={false} key={indexv} style={{ marginBottom: \"0\" }}>\r\n          <Field\r\n            name={`${name}[${indexv}].link`}\r\n            component={InputStylized}\r\n            placeholder={\"Link\"}\r\n            prefix={\r\n              <img\r\n                src={getImageUrlById(v[\"category\"])}\r\n                alt=\"\"\r\n                width=\"26px\"\r\n                height=\"26px\"\r\n                style={{ marginRight: \"10px\" }}\r\n              />\r\n            }\r\n            suffix={\r\n              <AiOutlineMinusCircle\r\n                style={{\r\n                  color: \"red\",\r\n                  fontSize: \"30px\",\r\n                  width: \"40px\",\r\n                  marginRight: \"-10px\",\r\n                }}\r\n                onClick={() => arrayHelpers.remove(indexv)}\r\n              />\r\n            }\r\n            type=\"text\"\r\n            label={`Link`}\r\n            value={v[\"link\"]}\r\n            key={indexv}\r\n          />\r\n        </FormItem>\r\n      ));\r\n    }\r\n    return (\r\n      <div>\r\n        <FormItem label={this.props.label}>\r\n          {formItems}\r\n          {availableSocialMediaCategoryList &&\r\n            availableSocialMediaCategoryList.length !== 0 && (\r\n              <DrawerWrapperRenderer>\r\n                <div\r\n                  style={{ width: \"100%\", marginTop: \"15px\" }}\r\n                  align=\"left\"\r\n                  onClick={this.showDrawer}\r\n                >\r\n                  {!drawerOpenState && (\r\n                    <Flex>\r\n                      <Flex.Item style={{ width: \"fit-content\", flex: 0 }}>\r\n                        <AiOutlinePlusCircle\r\n                          size={26}\r\n                          style={{ color: \"white\" }}\r\n                        />\r\n                      </Flex.Item>\r\n                      <Flex.Item style={{ flex: 4 }}>\r\n                        <AddSocialMedia>Add Social Media</AddSocialMedia>\r\n                      </Flex.Item>\r\n                    </Flex>\r\n                  )}\r\n                </div>\r\n                <Drawer\r\n                  placement=\"left\"\r\n                  closable={false}\r\n                  onClose={this.onClose}\r\n                  visible={this.state.visible}\r\n                  getContainer={false}\r\n                  style={{ position: \"absolute\" }}\r\n                >\r\n                  <div style={{ width: \"100%\", overflowX: \"scroll\" }}>\r\n                    <Flex\r\n                      justify=\"left\"\r\n                      style={{ width: \"fit-content\", marginTop: \"13px\" }}\r\n                    >\r\n                      <AiOutlineCloseCircle\r\n                        onClick={this.onClose}\r\n                        style={{ color: \"#4643D3\", marginRight: \"10px\" }}\r\n                        size={26}\r\n                      />\r\n\r\n                      {availableSocialMediaCategoryList.map((socia, key) => (\r\n                        <img\r\n                          src={socia && socia.image && socia.image.url}\r\n                          alt=\"\"\r\n                          width=\"26px\"\r\n                          height=\"26px\"\r\n                          style={{ marginRight: \"10px\" }}\r\n                          onClick={(e) => this.socialClickHandler(socia._id)}\r\n                        />\r\n                      ))}\r\n                    </Flex>\r\n                  </div>\r\n                </Drawer>\r\n              </DrawerWrapperRenderer>\r\n            )}\r\n        </FormItem>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDynamicFieldSet.propTypes = {\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  values: PropTypes.array,\r\n  keys: PropTypes.array,\r\n  setload: PropTypes.func,\r\n  buttonText: PropTypes.string,\r\n  arrayHelpers: PropTypes.object,\r\n};\r\n\r\nexport default withTheme(DynamicFieldSet);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form } from \"antd\";\r\nimport Select from \"./Select\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst RenderSelect = (props) => {\r\n  const {\r\n    input,\r\n    label,\r\n    type,\r\n    children,\r\n    mode,\r\n    meta: { touched, error },\r\n  } = props;\r\n  let validateStatus = \"\";\r\n  if (touched && error) {\r\n    validateStatus = \"error\";\r\n  }\r\n\r\n  const onChange = (value) => {\r\n    const { formik, name } = props;\r\n    formik.handleChange({ target: { value, name } });\r\n  };\r\n\r\n  return (\r\n    <FormItem label={label} validateStatus={validateStatus} help={error}>\r\n      <div>\r\n        <Select\r\n          mode={mode}\r\n          showSearch\r\n          optionFilterProp=\"children\"\r\n          placeholder={label}\r\n          filterOption={(input, option) =>\r\n            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n            0\r\n          }\r\n          {...input}\r\n          type={type}\r\n          onChange={onChange}\r\n        >\r\n          {children}\r\n        </Select>\r\n      </div>\r\n    </FormItem>\r\n  );\r\n};\r\n\r\nRenderSelect.propTypes = {\r\n  formik: PropTypes.object.isRequired,\r\n  input: PropTypes.object,\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  meta: PropTypes.object,\r\n  name: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default RenderSelect;\r\n","import { Select } from 'antd';\r\n\r\nconst { Option: ADOption } = Select;\r\n\r\nexport default ADOption;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Popconfirm as ADPopconfirm } from \"antd\";\r\n\r\nconst Popconfirm = ({ children, ...props }) => {\r\n  return (\r\n    <ADPopconfirm {...props}>\r\n      {children}\r\n    </ADPopconfirm>\r\n  );\r\n};\r\n\r\nPopconfirm.propTypes = {\r\n  children: PropTypes.node,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default Popconfirm;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useGet, useMutate } from \"restful-react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { ApiContext, UserApiUrls, AuthApiUrls } from \"../../api\";\r\nimport { PageLoader } from \"../look/mobile\";\r\nimport { setAccessTokene, setRefreshTokene } from \"../../store/appReducer\";\r\n\r\n// import authentication from '@gqlapp/authentication-client-react';\r\n\r\n// import CURRENT_USER_QUERY from '../graphql/CurrentUserQuery.graphql';\r\n\r\nconst withCurrentUser = (Component) => {\r\n  const WithUserInner = ({ ...props }) => {\r\n    const { history, refreshToken, setAccessTokene, accessToken } = props;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n    const apiUrl = defaultApiUrl + UserApiUrls.getCurrentUser;\r\n    var currentUserLoading = true;\r\n\r\n    var currentUserData;\r\n    const { data, loading, error } = useGet({\r\n      path: apiUrl,\r\n      requestOptions:{\r\n        headers:{ Authorization: `Bearer ${accessToken}` },\r\n      }\r\n    });\r\n    currentUserLoading = loading;\r\n    currentUserData = data && data.user;\r\n    console.log(data, loading, error);\r\n\r\n    // if (\r\n    //   !currentUserLoading &&\r\n    //   !currentUserData &&\r\n    //   error &&\r\n    //   error.status === 401\r\n    // ) {\r\n    // }\r\n    return currentUserLoading || !currentUserData ? (\r\n      <PageLoader />\r\n    ) : (\r\n      <Component\r\n        {...props}\r\n        currentUser={currentUserData}\r\n        currentUserLoading={currentUserLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithUserInner);\r\n};\r\n\r\nconst withUserByUsername = (Component) => {\r\n  const WithUserInner = ({ ...props }) => {\r\n    const { history, refreshToken, setAccessTokene, accessToken, match } = props;\r\n    const username = match && match.params && match.params.username;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n    const apiUrl = defaultApiUrl + UserApiUrls.getUserByUsername(username);\r\n\r\n    const { data, loading:userLoading, error } = useGet({\r\n      path: apiUrl,\r\n      requestOptions:{\r\n        headers:{ Authorization: `Bearer ${accessToken}` },\r\n      }\r\n    });\r\n    const userData = data && data.user;\r\n\r\n    // if (\r\n    //   !currentUserLoading &&\r\n    //   !currentUserData &&\r\n    //   error &&\r\n    //   error.status === 401\r\n    // ) {\r\n    // }\r\n    return userLoading  ? (\r\n      <PageLoader />\r\n    ) : (\r\n      <Component\r\n        {...props}\r\n        user={userData}\r\n        userLoading={userLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithUserInner);\r\n};\r\n\r\n// const RefreshAccessToken = ({ children,  }) => {\r\n//   const { mutate: refreshAccessToken, loading } = useMutate({\r\n//     verb: \"POST\",\r\n//     path: defaultApiUrl + AuthApiUrls.refreshAccessToken,\r\n//   });\r\n//   const refreshAccessTokenData = refreshAccessToken(refreshToken);\r\n//   console.log(\"refreshAccessToken\", refreshAccessTokenData);\r\n//   return loading && (<PageLoader> <React.Fragment>{children}</React.Fragment></PageLoader>);\r\n// };\r\n\r\n// export default RefreshAccessToken;\r\n\r\n// const hasRole = (role, currentUser) => {\r\n//   return currentUser &&\r\n//     (!role ||\r\n//       (Array.isArray(role) ? role : [role]).indexOf(currentUser.role) >= 0)\r\n//     ? true\r\n//     : false;\r\n// };\r\n\r\n// const withLoadedUser = (Component) => {\r\n//   const WithLoadedUser = ({ currentUserLoading, ...props }) =>\r\n//     currentUserLoading ? null : <Component {...props} />;\r\n\r\n//   WithLoadedUser.propTypes = {\r\n//     currentUser: PropTypes.object,\r\n//     currentUserLoading: PropTypes.bool.isRequired,\r\n//   };\r\n\r\n//   return withCurrentUser(WithLoadedUser);\r\n// };\r\n\r\n// const IfLoggedInComponent = ({\r\n//   currentUser,\r\n//   role,\r\n//   children,\r\n//   elseComponent,\r\n//   refetchCurrentUser,\r\n//   ...restProps\r\n// }) =>\r\n//   hasRole(role, currentUser)\r\n//     ? React.cloneElement(children, {\r\n//         ...restProps,\r\n//       })\r\n//     : elseComponent || null;\r\n// IfLoggedInComponent.propTypes = {\r\n//   currentUser: PropTypes.object,\r\n//   role: PropTypes.oneOfType([\r\n//     PropTypes.arrayOf(PropTypes.string),\r\n//     PropTypes.string,\r\n//   ]),\r\n//   elseComponent: PropTypes.node,\r\n//   children: PropTypes.node,\r\n// };\r\n\r\n// const IfLoggedIn = withLoadedUser(IfLoggedInComponent);\r\n\r\n// const IfNotLoggedInComponent = ({\r\n//   currentUser,\r\n//   children,\r\n//   refetchCurrentUser,\r\n//   ...restProps\r\n// }) =>\r\n//   !currentUser\r\n//     ? React.cloneElement(children, {\r\n//         ...restProps,\r\n//       })\r\n//     : null;\r\n// IfNotLoggedInComponent.propTypes = {\r\n//   currentUser: PropTypes.object,\r\n//   children: PropTypes.node,\r\n// };\r\n\r\n// const IfNotLoggedIn = withLoadedUser(IfNotLoggedInComponent);\r\n\r\n// const withLogout = (Component) =>\r\n//   withApollo(({ client, ...props }) => {\r\n//     const newProps = {\r\n//       ...props,\r\n//       logout: () => authentication.doLogout(client),\r\n//     };\r\n//     return <Component {...newProps} />;\r\n//   });\r\n\r\nexport {\r\n  withCurrentUser,\r\n  withUserByUsername\r\n  //   hasRole,\r\n  //   withLoadedUser,\r\n  //   IfLoggedIn,\r\n  //   IfNotLoggedIn,\r\n  //   withLogout,\r\n};\r\n","import React, { useState, Component } from \"react\";\r\nimport { IoMailOutline, IoMailSharp } from \"react-icons/io5\";\r\nimport { FiBarChart } from \"react-icons/fi\";\r\nimport { FaCompass, FaChartBar } from \"react-icons/fa\";\r\nimport { CgSignal } from \"react-icons/cg\";\r\n\r\nimport { IoPulse, IoBarChartOutline } from \"react-icons/io5\";\r\n\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport TabBar from \"./mobile/TabBar\";\r\nimport TabBarItem from \"./mobile/TabBarItem\";\r\n\r\nconst PageLayoutContainer = styled.div`\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  overflow: hidden;\r\n  bottom: 0;\r\n  margin: auto;\r\n  max-width: 500px;\r\n`;\r\n\r\nconst PageLayoutDiv = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst PageLayoutContent = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  background: ${(props) => props.theme.brandSecondary} !important;\r\n  padding: 15px;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst StyledTabBar = styled(TabBar)`\r\n  .am-tabs-tab-bar-wrap {\r\n    width: 414px;\r\n    height: 83px;\r\n    margin: 95px 0 0;\r\n    padding: 12px 45px 18px 49px;\r\n    background-color: #141414;\r\n  }\r\n`;\r\n\r\nclass PageLayout extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedTab: \"redTab\",\r\n      hidden: false,\r\n      fullScreen: false,\r\n    };\r\n  }\r\n\r\n  renderContent(componentChildren) {\r\n    return (\r\n      <PageLayoutDiv>\r\n        <PageLayoutContent>{componentChildren}</PageLayoutContent>\r\n      </PageLayoutDiv>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n      <PageLayoutContainer>\r\n        <StyledTabBar style={{ height: \"83px\" }} hidden={this.state.hidden}>\r\n          <TabBarItem\r\n            title=\"Stats\"\r\n            key=\"Stats\"\r\n            icon={<IoBarChartOutline size={30} />}\r\n            selectedIcon={<IoBarChartOutline size={30} />}\r\n            selected={this.state.selectedTab === \"blueTab\"}\r\n            // badge={1}\r\n            onPress={() => {\r\n              this.setState({\r\n                selectedTab: \"blueTab\",\r\n              });\r\n            }}\r\n            data-seed=\"logId\"\r\n          >\r\n            {this.renderContent(this.props.children)}\r\n          </TabBarItem>\r\n          <TabBarItem\r\n            icon={<FaCompass size={30} />}\r\n            selectedIcon={<FaCompass size={30} />}\r\n            title=\"OnePlace\"\r\n            key=\"OnePlace\"\r\n            // badge={\"new\"}\r\n            selected={this.state.selectedTab === \"redTab\"}\r\n            onPress={() => {\r\n              this.setState({\r\n                selectedTab: \"redTab\",\r\n              });\r\n            }}\r\n            data-seed=\"logId1\"\r\n          >\r\n            {this.renderContent(this.props.children)}\r\n          </TabBarItem>\r\n          <TabBarItem\r\n            icon={<IoPulse size={30} />}\r\n            selectedIcon={<IoPulse size={30} />}\r\n            title=\"Orders\"\r\n            key=\"Orders\"\r\n            // dot\r\n            selected={this.state.selectedTab === \"greenTab\"}\r\n            onPress={() => {\r\n              this.setState({\r\n                selectedTab: \"greenTab\",\r\n              });\r\n            }}\r\n          >\r\n            {this.renderContent(this.props.children)}\r\n          </TabBarItem>\r\n        </StyledTabBar>\r\n      </PageLayoutContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(PageLayout);\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useGet, useMutate } from \"restful-react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { ApiContext, BlockApiUrls } from \"../../api\";\r\nimport { PageLoader } from \"../look/mobile\";\r\nimport { setAccessTokene, setRefreshTokene } from \"../../store/appReducer\";\r\n\r\n// import authentication from '@gqlapp/authentication-client-react';\r\n\r\n// import CURRENT_USER_QUERY from '../graphql/CurrentUserQuery.graphql';\r\n\r\nconst withUserBlocks = (Component) => {\r\n  const WithUserBlocksInner = ({ ...props }) => {\r\n    const {\r\n      history,\r\n      refreshToken,\r\n      setAccessTokene,\r\n      accessToken,\r\n      username,\r\n    } = props;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n    const apiUrl = defaultApiUrl + BlockApiUrls.getBlocksByUsername(username);\r\n    const { data, loading: userBlockLoading, error } = useGet({\r\n      path: apiUrl,\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n    const userBlockData = data && data.blocksList;\r\n\r\n    // if (\r\n    //   !currentUserLoading &&\r\n    //   !currentUserData &&\r\n    //   error &&\r\n    //   error.status === 401\r\n    // ) {\r\n    // }\r\n    return (\r\n      <Component\r\n        {...props}\r\n        userBlock={userBlockData}\r\n        userBlockLoading={userBlockLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithUserBlocksInner);\r\n};\r\n\r\nconst withBlockById = (Component) => {\r\n  const WithBlockByIdInner = ({ ...props }) => {\r\n    const {\r\n      history,\r\n      refreshToken,\r\n      setAccessTokene,\r\n      accessToken,\r\n      match,\r\n    } = props;\r\n    const blockId = match && match.params && match.params.blockId;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n    const apiUrl = defaultApiUrl + BlockApiUrls.getBlockById(blockId);\r\n    console.log(\"apiurl\", apiUrl);\r\n    const { data, loading: blockByUsernameLoading, error } = useGet({\r\n      verb: \"GET\",\r\n      path: apiUrl,\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n    const blockByUsernameData = data && data.block;\r\n    console.log(\"blockbyid\", error);\r\n\r\n    return blockByUsernameLoading ? (\r\n      <PageLoader />\r\n    ) : (\r\n      <Component\r\n        {...props}\r\n        blockByUsername={blockByUsernameData}\r\n        blockByUsernameLoading={blockByUsernameLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithBlockByIdInner);\r\n};\r\n\r\nconst withAddUserBlock = (Component) => {\r\n  const WithAddBlockInner = ({ ...props }) => {\r\n    const { history, refreshToken, setAccessTokene, accessToken } = props;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n    const apiUrl = defaultApiUrl + BlockApiUrls.postBlock;\r\n\r\n    const { mutate: postBlock, loading: postBlockLoading, error } = useMutate({\r\n      verb: \"POST\",\r\n      path: apiUrl,\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n    console.log(\"adduserblock\", error);\r\n    return (\r\n      <Component\r\n        {...props}\r\n        postBlock={postBlock}\r\n        postBlockLoading={postBlockLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithAddBlockInner);\r\n};\r\n\r\nconst withEditUserBlock = (Component) => {\r\n  const WithEditBlockInner = ({ ...props }) => {\r\n    const {\r\n      history,\r\n      refreshToken,\r\n      setAccessTokene,\r\n      accessToken,\r\n      match,\r\n    } = props;\r\n    const blockId = match && match.params && match.params.blockId;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n    const apiUrl = defaultApiUrl + BlockApiUrls.putBlockById(blockId);\r\n    const { mutate: putBlock, loading: putBlockLoading, error } = useMutate({\r\n      verb: \"PUT\",\r\n      path: apiUrl,\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n    console.log(\"edituserblock\", error);\r\n    return (\r\n      <Component\r\n        {...props}\r\n        putBlock={putBlock}\r\n        putBlockLoading={putBlockLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithEditBlockInner);\r\n};\r\n\r\nconst withDeleteUserBlock = (Component) => {\r\n  const WithDeleteBlockInner = ({ ...props }) => {\r\n    const { accessToken } = props;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n    const apiUrl = defaultApiUrl + BlockApiUrls.deleteBlock;\r\n    console.log(\"apiUrl\", apiUrl);\r\n    const {\r\n      mutate: deleteBlock,\r\n      loading: deleteBlockLoading,\r\n      error,\r\n    } = useMutate({\r\n      verb: \"DELETE\",\r\n      path: apiUrl,\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n\r\n\r\n    return (\r\n      <Component\r\n        {...props}\r\n        deleteBlock={deleteBlock}\r\n        deleteBlockLoading={deleteBlockLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithDeleteBlockInner);\r\n};\r\n\r\n// const RefreshAccessToken = ({ children,  }) => {\r\n//   const { mutate: refreshAccessToken, loading } = useMutate({\r\n//     verb: \"POST\",\r\n//     path: defaultApiUrl + AuthApiUrls.refreshAccessToken,\r\n//   });\r\n//   const refreshAccessTokenData = refreshAccessToken(refreshToken);\r\n//   console.log(\"refreshAccessToken\", refreshAccessTokenData);\r\n//   return loading && (<PageLoader> <React.Fragment>{children}</React.Fragment></PageLoader>);\r\n// };\r\n\r\n// export default RefreshAccessToken;\r\n\r\n// const hasRole = (role, currentUser) => {\r\n//   return currentUser &&\r\n//     (!role ||\r\n//       (Array.isArray(role) ? role : [role]).indexOf(currentUser.role) >= 0)\r\n//     ? true\r\n//     : false;\r\n// };\r\n\r\n// const withLoadedUser = (Component) => {\r\n//   const WithLoadedUser = ({ currentUserLoading, ...props }) =>\r\n//     currentUserLoading ? null : <Component {...props} />;\r\n\r\n//   WithLoadedUser.propTypes = {\r\n//     currentUser: PropTypes.object,\r\n//     currentUserLoading: PropTypes.bool.isRequired,\r\n//   };\r\n\r\n//   return withCurrentUser(WithLoadedUser);\r\n// };\r\n\r\n// const IfLoggedInComponent = ({\r\n//   currentUser,\r\n//   role,\r\n//   children,\r\n//   elseComponent,\r\n//   refetchCurrentUser,\r\n//   ...restProps\r\n// }) =>\r\n//   hasRole(role, currentUser)\r\n//     ? React.cloneElement(children, {\r\n//         ...restProps,\r\n//       })\r\n//     : elseComponent || null;\r\n// IfLoggedInComponent.propTypes = {\r\n//   currentUser: PropTypes.object,\r\n//   role: PropTypes.oneOfType([\r\n//     PropTypes.arrayOf(PropTypes.string),\r\n//     PropTypes.string,\r\n//   ]),\r\n//   elseComponent: PropTypes.node,\r\n//   children: PropTypes.node,\r\n// };\r\n\r\n// const IfLoggedIn = withLoadedUser(IfLoggedInComponent);\r\n\r\n// const IfNotLoggedInComponent = ({\r\n//   currentUser,\r\n//   children,\r\n//   refetchCurrentUser,\r\n//   ...restProps\r\n// }) =>\r\n//   !currentUser\r\n//     ? React.cloneElement(children, {\r\n//         ...restProps,\r\n//       })\r\n//     : null;\r\n// IfNotLoggedInComponent.propTypes = {\r\n//   currentUser: PropTypes.object,\r\n//   children: PropTypes.node,\r\n// };\r\n\r\n// const IfNotLoggedIn = withLoadedUser(IfNotLoggedInComponent);\r\n\r\n// const withLogout = (Component) =>\r\n//   withApollo(({ client, ...props }) => {\r\n//     const newProps = {\r\n//       ...props,\r\n//       logout: () => authentication.doLogout(client),\r\n//     };\r\n//     return <Component {...newProps} />;\r\n//   });\r\n\r\nexport {\r\n  withUserBlocks,\r\n  withAddUserBlock,\r\n  withEditUserBlock,\r\n  withBlockById,\r\n  withDeleteUserBlock,\r\n  //   hasRole,\r\n  //   withLoadedUser,\r\n  //   IfLoggedIn,\r\n  //   IfNotLoggedIn,\r\n  //   withLogout,\r\n};\r\n"],"sourceRoot":""}