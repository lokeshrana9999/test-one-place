{"version":3,"sources":["index.js"],"names":["configureStore","window","__REDUX_STATE__","store","persistor","AppBundle","loading","appType","onload","Loadable","preloadReady","then","ReactDOM","hydrate","document","getElementById"],"mappings":"oKAAA,+G,EAW6BA,YAAeC,OAAOC,iBAAmB,IAA9DC,E,EAAAA,MAAOC,E,EAAAA,UAGTC,EACJ,kBAAC,IAAD,CAAeF,MAAOA,GACpB,kBAAC,IAAD,CAAaG,QAAS,KAAMF,UAAWA,GACrC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKG,QAAQ,eAMrBN,OAAOO,OAAS,WACdC,IAASC,eAAeC,MAAK,WAC3BC,IAASC,QAAQR,EAAWS,SAASC,eAAe,e","file":"static/js/index.b05201a7.8a54dfbb.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Loadable from \"react-loadable\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport \"./styles/index.less\";\nimport App from \"./App\";\nimport configureStore from \"./store/configureStore\";\n// import registerServiceWorker from './registerServiceWorker';\nconst { store, persistor } = configureStore(window.__REDUX_STATE__ || {});\n\n\nconst AppBundle = (\n  <ReduxProvider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App appType='private' />\n      </BrowserRouter>\n    </PersistGate>\n  </ReduxProvider>\n);\n\nwindow.onload = () => {\n  Loadable.preloadReady().then(() => {\n    ReactDOM.hydrate(AppBundle, document.getElementById(\"root\"));\n  });\n};\n\n// registerServiceWorker();\n"],"sourceRoot":""}