{"version":3,"sources":["components/form/FieldAdapter.jsx","components/form/validation.js","components/look/web/RenderUpload.jsx","components/look/web/RenderUploadWithCrop.jsx","components/look/web/Input.jsx","components/look/web/InputArea.jsx","components/look/web/Form.jsx","components/look/web/Button.jsx","components/look/web/RenderDynamicFieldSocial.jsx","components/look/web/RenderSelect.jsx","components/look/web/Option.jsx","components/look/web/Popconfirm.jsx","components/auth/Auth.jsx","components/look/PageLayout.jsx","components/block/BlockOperations.jsx"],"names":["FieldAdapter","props","onChange","e","secondArg","console","log","formik","fieldType","type","setFieldValue","name","_isAMomentObject","Array","isArray","isString","isNumber","target","value","checked","parseInt","handleChange","onBlur","setFieldTouched","onChangeText","this","component","defaultChecked","disabled","defaultValue","meta","touched","getPath","error","errors","input","React","createElement","Component","connect","required","undefined","maxLength","max","length","minLength","min","phoneNumber","test","validate","object","schema","collectedErrors","validateFormInner","values","innerSchema","collector","Object","keys","filter","v","hasOwnProperty","forEach","s","validator","result","FormItem","Form","Item","RenderUpload","onChangeHandler","file","fileList","arrayHelpers","status","setload","response","upload_obj","upload","setState","handleCancel","previewVisible","state","previewImage","label","className","children","handleBlur","aspect","uploadButton","validateStatus","grid","quality","rotate","onFocus","action","process","listType","onPreview","handlePreview","StyledADInput","styled","ADInput","withTheme","extra","ADTextArea","Input","TextArea","StyledADTextArea","Button","DrawerWrapperRenderer","div","InputStylized","AddSocialMedia","DynamicFieldSet","showDrawer","visible","onClose","socialClickHandler","id","add","obj","link","category","push","drawerOpenState","socialMediaCategoryList","formItems","availableSocialMediaCategoryList","item","find","vall","_id","getImageUrlById","idd","socObj","ss","image","url","map","indexv","key","style","marginBottom","placeholder","prefix","src","alt","width","height","marginRight","suffix","color","fontSize","onClick","remove","marginTop","align","flex","size","placement","closable","getContainer","position","overflowX","justify","socia","Select","Option","Popconfirm","withCurrentUser","mapDispatchToProps","setAccessTokene","setRefreshTokene","accessToken","app","refreshToken","currentUserLoading","currentUserData","history","apiUrl","useContext","ApiContext","UserApiUrls","getCurrentUser","useGet","path","requestOptions","headers","Authorization","data","loading","user","currentUser","withUserByUsername","match","username","params","getUserByUsername","userLoading","userData","PageLayoutContainer","PageLayoutDiv","PageLayoutContent","theme","brandSecondary","StyledTabBar","TabBar","PageLayout","selectedTab","hidden","fullScreen","componentChildren","title","icon","selectedIcon","selected","onPress","data-seed","renderContent","withUserBlocks","BlockApiUrls","getBlocksByUsername","userBlockLoading","userBlockData","blocksList","userBlock","withBlockById","blockId","getBlockById","verb","blockByUsernameLoading","blockByUsernameData","block","blockByUsername","withAddUserBlock","postBlock","useMutate","mutate","postBlockLoading","withEditUserBlock","putBlockById","putBlock","putBlockLoading","withDeleteUserBlock","deleteBlockById","deleteBlock","deleteBlockLoading"],"mappings":"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","file":"static/js/2.df9a409f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"formik\";\nimport { get as getPath } from \"lodash\";\nimport { isString, isNumber } from \"util\";\n\nconst PLATFORM = \"m\";\n\nclass FieldAdapter extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n  }\n  onChange = (e, secondArg) => {\n    console.log(\"onChange\", e, secondArg, this.props);\n    const { formik, onChange, type: fieldType } = this.props;\n    if (onChange) {\n      onChange(e);\n    }\n    if (fieldType === \"image\" || fieldType === \"media\") {\n      formik.setFieldValue(this.props.name, e);\n    }\n    else if (e._isAMomentObject && secondArg) {\n      this.props.formik.setFieldValue(this.props.name, secondArg);\n    } else if (\n      Array.isArray(e) &&\n      e[0]._isAMomentObject &&\n      e[1]._isAMomentObject &&\n      secondArg\n    ) {\n      this.props.formik.setFieldValue(this.props.name, secondArg);\n    } else if (isString(e)) {\n      // for Option Field\n      this.props.formik.setFieldValue(this.props.name, e);\n    } else if (isNumber(e)) {\n      this.props.formik.setFieldValue(this.props.name, e);\n    } else if (e && e.target && e.target.type == \"radio\") {\n      this.props.formik.setFieldValue(e.target.name, e.target.value);\n    } else if (e && e.target && e.target.checked) {\n      this.props.formik.setFieldValue(e.target.name, e.target.checked);\n    } else if (e && e.target && e.target.type == \"number\") {\n      this.props.formik.setFieldValue(e.target.name, parseInt(e.target.value));\n    } else {\n      formik.handleChange(e);\n    }\n  };\n\n  onBlur = (e) => {\n    const { formik, onBlur, name } = this.props;\n    if (onBlur) {\n      onBlur(e);\n    } else {\n      if (PLATFORM === \"mobile\") {\n        formik.setFieldTouched(name, true);\n      } else {\n        // console.log(name);\n        // formik.handleBlur(e);\n        formik.setFieldTouched(name, true);\n      }\n    }\n  };\n\n  onChangeText = (value) => {\n    const { formik, onChangeText, onChange, name } = this.props;\n    if (onChange && !onChangeText) {\n      onChange(value);\n    } else if (onChangeText) {\n      onChangeText(value);\n    } else {\n      formik.setFieldValue(name, value);\n    }\n  };\n\n  render() {\n    const { formik, component, name, defaultChecked, disabled } = this.props;\n    let { defaultValue } = this.props;\n    let { value, checked } = this.props;\n    value = value || \"\";\n    // const type = this.props.type;\n    // if (type == 'number') {\n    //   value = parseInt(value);\n    //   defaultValue = parseInt(defaultValue);\n    //   console.log(value);\n    // }\n\n    checked = checked || false;\n    const meta = {\n      touched: getPath(formik.touched, name),\n      error: getPath(formik.errors, name),\n    };\n    const input = {\n      onBlur: this.onBlur,\n      name,\n      value,\n      checked,\n      defaultValue,\n      defaultChecked,\n      disabled,\n    };\n\n    const changeEventHandler =\n      PLATFORM === \"mobile\" ? \"onChangeText\" : \"onChange\";\n    input[changeEventHandler] = this[changeEventHandler];\n\n    return React.createElement(component, {\n      ...this.props,\n      input,\n      meta,\n    });\n  }\n}\n\nFieldAdapter.propTypes = {\n  formik: PropTypes.object.isRequired,\n  component: PropTypes.func,\n  type: PropTypes.string,\n  onChangeText: PropTypes.func,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.any,\n  defaultValue: PropTypes.any,\n  checked: PropTypes.bool,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nexport default connect(FieldAdapter);\n","/**\n * Validates if the value is empty.\n *\n * @param value\n * @return {undefined | string}\n */\nexport const required = (value) => (value ? undefined : 'Field Required');\n\n/**\n * Validates the maximal length of the value.\n * Usage: const maxLength15 = maxLength(15)\n *\n * @param max\n * @return {undefined | string}\n */\nexport const maxLength = (max) => (value) =>\n  value && value.length > max ? `Input shouldn't be bigger than ${max} characters` : undefined;\n\n/**\n * Validates the minimal length of the value.\n * Usage: export const minLength2 = minLength(2)\n *\n * @param min\n * @return {undefined | string}\n */\nexport const minLength = (min) => (value) =>\n  value && value.length < min ? `Input should be bigger than ${min} characters` : undefined;\n\n/**\n * Validates if the value is a number.\n *\n * @param value\n * @return {undefined | string}\n */\nexport const number = (value) => (value && isNaN(Number(value)) ? 'Input is not a number' : undefined);\n\n/**\n * Validates if the value is a string.\n *\n * @param value\n * @return {undefined | string}\n */\nexport const string = (value) =>\n  value && !(typeof value === 'string' || value instanceof String) ? 'Input is not a string' : undefined;\n\n/**\n * Validates the minimal value.\n * Usage: export const minValue18 = minValue(18);\n *\n * @param min\n * @return {undefined | string}\n */\nexport const minValue = (min) => (value) =>\n  value && value < min ? `Input should be bigger than ${min}` : undefined;\n\n/**\n * Validates the email.\n *\n * @param value\n * @return {undefined | string}\n */\nexport const email = (value) =>\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Input is not an email' : undefined;\n\n/**\n * Validates if the value is alpha-numeric.\n *\n * @param value\n * @return {undefined | string}\n */\nexport const alphaNumeric = (value) =>\n  value && /[^a-zA-Z0-9 ]/i.test(value) ? 'Input is not alpha numeric' : undefined;\n\n/**\n * Validates the phone number.\n *\n * @param value\n * @return {undefined | string}\n */\nexport const phoneNumber = (value) =>\n  value && !/^(\\+)?([ 0-9]){10,16}$/i.test(value) ? 'Input is not a phone number' : undefined;\n\n\n\n/**\n * Validates the input object according to the input schema.\n *\n * @param object\n * @param schema\n * @return object with errors\n */\nexport const validate = (object, schema) => {\n  const errors = {};\n  const validateFormInner = (\n    values,\n    innerSchema,\n    collector\n  ) => {\n    Object.keys(innerSchema)\n      .filter(v => innerSchema.hasOwnProperty(v))\n      .forEach(v => {\n        const s = innerSchema[v];\n\n        if (Array.isArray(s)) {\n          s.forEach(validator => {\n            const result = validator(values[v], values);\n            if (result) {\n              collector[v] = result;\n            }\n          });\n        } else {\n          validateFormInner(values[v], innerSchema[v], collector);\n        }\n      });\n\n    return collector;\n  };\n\n  const collectedErrors = validateFormInner(object, schema, errors);\n  return Object.keys(collectedErrors).length ? collectedErrors : undefined;\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Form, Upload, Modal } from \"antd\";\n\nconst FormItem = Form.Item;\n\nexport default class RenderUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // To Do Fix this thing\n    this.state = {\n      previewVisible: false,\n      previewImage: \"\",\n      fileList: props.value ? [props.value] : [],\n    };\n  }\n\n  onChangeHandler = ({ file, fileList }) => {\n    const arrayHelpers = this.props.arrayHelpers;\n\n    if (file.status === \"uploading\") {\n      this.props.setload(true);\n    }\n\n    if (file.status == \"done\") {\n      this.props.setload(false);\n      if (file.response) {\n        let upload_obj = file.response && file.response.upload;\n        if (upload_obj) {\n          // console.log(upload_obj);\n          //set value in form\n          this.props.input.onChange(upload_obj);\n        }\n      }\n    } else if (file.status == \"removed\") {\n      this.props.setload(false);\n      // console.log(file);\n      //remove value in form\n      this.props.input.onChange(\"\");\n    }\n    this.setState({ fileList });\n  };\n\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  // handlePreview = file => {\n  //   this.setState({\n  //     previewImage: file.url || file.thumbUrl,\n  //     previewVisible: true\n  //   });\n  // };\n\n  handleChange = ({ fileList }) => this.setState({ fileList });\n\n  render() {\n    // { input, label, meta: { touched, error }, defaultFileList }) = this.props\n    // const touched = this.props.meta.touched;\n    // const error = this.props.meta.error;\n    const { label, className, children, meta, handleBlur } = this.props;\n    // const input = this.props.input;\n    // console.log(input);\n    // const defaultFileList = this.props.defaultFileList;\n\n    // const cloudinary_url = 'https://api.cloudinary.com/v1_1/nodejs-starter-kit/image/upload';\n    // const cloudinary_data = { upload_preset: 'hycdtdxe' };\n\n    // const headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\n    // const cloudinary_data = { upload_preset: 'nxzf2ip6' };\n    const imageApiUrl = process.env.REACT_APP_IMAGE_API_URL;\n\n    let validateStatus = \"\";\n    // if (touched && error) {\n    //   validateStatus = 'error';\n    // }\n    // let defaultFileList = [];\n    // if (this.props.values) {\n    //   defaultFileList = this.props.values.map((img, index) => ({\n    //     uid: index,\n    //     name: 'link',\n    //     status: 'done',\n    //     url: img.imageUrl,\n    //     thumbUrl: img.imageUrl\n    //   }));\n    // }\n\n    const { previewVisible, previewImage, fileList } = this.state;\n    const uploadButton = (\n      <div>\n        {/* <Icon type=\"plus\" /> */}\n        <div className=\"ant-upload-text\">{label}</div>\n      </div>\n    );\n    console.log('Meta', meta);\n    return (\n      <FormItem\n        validateStatus={validateStatus}\n        validateStatus={meta.touched && meta.error && \"error\"}\n        extra={meta.touched && meta.error}\n      >\n        <div className={`clearfix antd-upload-custom-wrapper ${className}`}>\n          <Upload\n            onFocus={handleBlur}\n            action={imageApiUrl}\n            listType=\"picture-card\"\n            fileList={fileList}\n            onPreview={this.handlePreview}\n            onChange={this.onChangeHandler}\n          >\n            {fileList.length >= 1 ? null : uploadButton}\n            {children}\n          </Upload>\n          {/* <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n            <img alt=\"image\" style={{ width: '100%' }} src={previewImage} />\n          </Modal> */}\n        </div>{\" \"}\n      </FormItem>\n    );\n  }\n}\nRenderUpload.propTypes = {\n  input: PropTypes.object,\n  label: PropTypes.string,\n  setload: PropTypes.func,\n  value: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Form, Upload, Modal } from \"antd\";\nimport ImgCrop from \"antd-img-crop\";\n\nconst FormItem = Form.Item;\n\nexport default class RenderUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // To Do Fix this thing\n    this.state = {\n      previewVisible: false,\n      previewImage: \"\",\n      fileList: props.value ? [props.value] : [],\n    };\n  }\n\n  onChangeHandler = ({ file, fileList }) => {\n    const arrayHelpers = this.props.arrayHelpers;\n\n    if (file.status === \"uploading\") {\n      this.props.setload(true);\n    }\n\n    if (file.status == \"done\") {\n      this.props.setload(false);\n      if (file.response) {\n        let upload_obj = file.response && file.response.upload;\n        if (upload_obj) {\n          // console.log(upload_obj);\n          //set value in form\n          this.props.input.onChange(upload_obj);\n        }\n      }\n    } else if (file.status == \"removed\") {\n      this.props.setload(false);\n      // console.log(file);\n      //remove value in form\n      this.props.input.onChange(\"\");\n    }\n    this.setState({ fileList });\n  };\n\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  // handlePreview = file => {\n  //   this.setState({\n  //     previewImage: file.url || file.thumbUrl,\n  //     previewVisible: true\n  //   });\n  // };\n\n  handleChange = ({ fileList }) => this.setState({ fileList });\n\n  render() {\n    // { input, label, meta: { touched, error }, defaultFileList }) = this.props\n    // const touched = this.props.meta.touched;\n    // const error = this.props.meta.error;\n    const { label, className, children, meta, handleBlur, aspect } = this.props;\n    // const input = this.props.input;\n    // console.log(input);\n    // const defaultFileList = this.props.defaultFileList;\n\n    // const cloudinary_url = 'https://api.cloudinary.com/v1_1/nodejs-starter-kit/image/upload';\n    // const cloudinary_data = { upload_preset: 'hycdtdxe' };\n\n    // const headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\n    // const cloudinary_data = { upload_preset: 'nxzf2ip6' };\n    const imageApiUrl = process.env.REACT_APP_IMAGE_API_URL;\n\n    let validateStatus = \"\";\n    // if (touched && error) {\n    //   validateStatus = 'error';\n    // }\n    // let defaultFileList = [];\n    // if (this.props.values) {\n    //   defaultFileList = this.props.values.map((img, index) => ({\n    //     uid: index,\n    //     name: 'link',\n    //     status: 'done',\n    //     url: img.imageUrl,\n    //     thumbUrl: img.imageUrl\n    //   }));\n    // }\n\n    const { previewVisible, previewImage, fileList } = this.state;\n    const uploadButton = (\n      <div>\n        {/* <Icon type=\"plus\" /> */}\n        <div className=\"ant-upload-text\">{label}</div>\n      </div>\n    );\n    console.log(\"Meta\", meta);\n    return (\n      <FormItem\n        validateStatus={validateStatus}\n        validateStatus={meta.touched && meta.error && \"error\"}\n        extra={meta.touched && meta.error}\n      >\n        <div className={`clearfix antd-upload-custom-wrapper ${className}`}>\n          <ImgCrop aspect={aspect} grid={true} quality={1} rotate>\n            <Upload\n              onFocus={handleBlur}\n              action={imageApiUrl}\n              listType=\"picture-card\"\n              fileList={fileList}\n              onPreview={this.handlePreview}\n              onChange={this.onChangeHandler}\n            >\n              {fileList.length >= 1 ? null : uploadButton}\n              {children}\n            </Upload>\n          </ImgCrop>\n          {/* <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n            <img alt=\"image\" style={{ width: '100%' }} src={previewImage} />\n          </Modal> */}\n        </div>{\" \"}\n      </FormItem>\n    );\n  }\n}\nRenderUpload.propTypes = {\n  input: PropTypes.object,\n  label: PropTypes.string,\n  setload: PropTypes.func,\n  value: PropTypes.string,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input as ADInput, Form } from \"antd\";\nimport styled, { withTheme } from \"styled-components\";\n\nconst StyledADInput = styled(ADInput)`\n  /* display:block; */\n`;\n\nconst Input = ({ children, ...props }) => {\n  const {\n    formik: { setFieldValue, handleBlur },\n    name,\n    meta,\n  } = props;\n  return (\n    <Form.Item\n      validateStatus={meta.touched && meta.error && \"error\"}\n      extra={meta.touched && meta.error}\n    >\n      <StyledADInput\n        onBlur={handleBlur}\n        {...props}\n        onChange={(e) => {\n          setFieldValue(name, e.target.value);\n        }}\n      >\n        {children}\n      </StyledADInput>\n    </Form.Item>\n  );\n};\n\nInput.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default withTheme(Input);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input, Form } from \"antd\";\nimport styled, { withTheme } from \"styled-components\";\n\nconst ADTextArea = Input.TextArea;\n\nconst StyledADTextArea = styled(ADTextArea)`\n  /* display:block; */\n`;\n\nconst TextArea = ({ children, ...props }) => {\n  const {\n    formik: { setFieldValue, handleBlur },\n    name,\n    meta,\n  } = props;\n  console.log('textarea', props);\n  return (\n    <Form.Item\n      validateStatus={meta.touched && meta.error && \"error\"}\n      extra={meta.touched && meta.error}\n    >\n      <StyledADTextArea\n        onBlur={handleBlur}\n        {...props}\n        onChange={(e) => {\n          setFieldValue(name, e.target.value);\n        }}\n      >\n        {children}\n      </StyledADTextArea>\n    </Form.Item>\n  );\n};\n\nTextArea.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default withTheme(TextArea);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form as ADForm } from 'antd';\n\nconst Form = ({ children, ...props }) => {\n  return <ADForm {...props}>{children}</ADForm>;\n};\n\nForm.propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string\n};\n\nexport default Form;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button as ADButton } from \"antd\";\n\nconst Button = ({ children, type, ...props }) => {\n  return (\n    <ADButton type={type} {...props}>\n      {children}\n    </ADButton>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FieldAdapter as Field } from \"../../form\";\nimport { Form, Drawer } from \"antd\";\nimport { Flex } from \"antd-mobile\";\nimport {\n  AiOutlineMinusCircle,\n  AiOutlinePlusCircle,\n  AiOutlineCloseCircle,\n} from \"react-icons/ai\";\nimport styled, { withTheme } from \"styled-components\";\n\nimport { Input, RenderSelect, Button, Option } from \"../web\";\n\nconst FormItem = Form.Item;\n\nconst DrawerWrapperRenderer = styled.div`\n  position: relative;\n  height: 60px;\n  padding: 0px 0px 0px 10px;\n  overflow: hidden;\n  /* text-align: center; */\n  /* display: grid;\n  place-items: center; */\n\n  background: transparent;\n  border: 1px solid #ebedf0;\n  border-radius: 7px;\n  margin-bottom: 20px;\n  .ant-drawer-mask {\n    background-color: transparent !important;\n  }\n  .ant-drawer-content-wrapper {\n    width: 100% !important;\n    .ant-drawer-content {\n      background: transparent !important;\n      .ant-drawer-wrapper-body {\n        .ant-drawer-body {\n          padding: 0;\n          padding-left: 10px;\n          background: white !important;\n        }\n        .ant-drawer-header {\n          .ant-drawer-title {\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst InputStylized = styled(Input)`\n  background: white !important;\n  border-radius: 7px;\n  border: solid 2px #d8d8d8;\n  height: 60px !important;\n  font-size: 20px;\n  padding: 0 10px;\n  caret-color:#4643D3;\n  color: #4643D3 !important;\n  font-family: Circular Std Medium;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  input {\n    background: transparent !important;\n    caret-color: white;\n    color: #4643D3 !important;\n    font-size: 15px;\n    word-spacing:-3px;\n    font-family: Circular Std Medium;\n    font-weight: normal;\n    font-stretch: normal;\n    font-style: normal;\n  }\n  input:focus {\n    caret-color: #4643D3;\n    color: #4643D3;\n    background-color: transparent !important;\n  }\n  input:-webkit-autofill,\n  input:-webkit-autofill:hover,\n  input:-webkit-autofill:focus {\n    transition: background-color 5000s ease-in-out 0s;\n    -webkit-text-fill-color: #4643D3;\n    caret-color: #4643D3;\n    color: #4643D3;\n    background-color: transparent !important;\n  }\n`;\n\nconst AddSocialMedia = styled.div`\n  color: white;\n  padding-left: 20px;\n  font-size: 15px;\n  word-spacing:-3px;\n  font-family: Circular Std Medium;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n`;\n\nclass DynamicFieldSet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n    };\n  }\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  socialClickHandler = (id) => {\n    this.setState({\n      visible: false,\n    });\n    this.add(id);\n  };\n  add = (id) => {\n    const arrayHelpers = this.props.arrayHelpers;\n    let obj = {};\n    obj = {\n      link: \"\",\n      category: id,\n    };\n\n    // keys.map((k) => (obj[k.key] = \"\"));\n\n    arrayHelpers.push(obj);\n  };\n\n  render() {\n    const drawerOpenState = this.state.visible;\n    const { socialMediaCategoryList, name, values, arrayHelpers } = this.props;\n    console.log(\"renderdynamic\", socialMediaCategoryList);\n    let formItems = null;\n    const availableSocialMediaCategoryList = socialMediaCategoryList.filter(\n      (item) => !values.find((vall) => vall.category === item._id)\n    );\n    const getImageUrlById = (idd) => {\n      const socObj =\n        socialMediaCategoryList &&\n        socialMediaCategoryList.find((ss) => ss._id === idd);\n      return socObj && socObj.image && socObj.image.url;\n    };\n    if (values) {\n      formItems = values.map((v, indexv) => (\n        <FormItem required={false} key={indexv} style={{ marginBottom: \"0\" }}>\n          <Field\n            name={`${name}[${indexv}].link`}\n            component={InputStylized}\n            placeholder={\"Link\"}\n            prefix={\n              <img\n                src={getImageUrlById(v[\"category\"])}\n                alt=\"\"\n                width=\"26px\"\n                height=\"26px\"\n                style={{ marginRight: \"10px\" }}\n              />\n            }\n            suffix={\n              <AiOutlineMinusCircle\n                style={{\n                  color: \"red\",\n                  fontSize: \"30px\",\n                  width: \"40px\",\n                  marginRight: \"-10px\",\n                }}\n                onClick={() => arrayHelpers.remove(indexv)}\n              />\n            }\n            type=\"text\"\n            label={`Link`}\n            value={v[\"link\"]}\n            key={indexv}\n          />\n        </FormItem>\n      ));\n    }\n    return (\n      <div>\n        <FormItem label={this.props.label}>\n          {formItems}\n          {availableSocialMediaCategoryList &&\n            availableSocialMediaCategoryList.length !== 0 && (\n              <DrawerWrapperRenderer>\n                <div\n                  style={{ width: \"100%\", marginTop: \"15px\" }}\n                  align=\"left\"\n                  onClick={this.showDrawer}\n                >\n                  {!drawerOpenState && (\n                    <Flex>\n                      <Flex.Item style={{ width: \"fit-content\", flex: 0 }}>\n                        <AiOutlinePlusCircle\n                          size={26}\n                          style={{ color: \"white\" }}\n                        />\n                      </Flex.Item>\n                      <Flex.Item style={{ flex: 4 }}>\n                        <AddSocialMedia>Add Social Media</AddSocialMedia>\n                      </Flex.Item>\n                    </Flex>\n                  )}\n                </div>\n                <Drawer\n                  placement=\"left\"\n                  closable={false}\n                  onClose={this.onClose}\n                  visible={this.state.visible}\n                  getContainer={false}\n                  style={{ position: \"absolute\" }}\n                >\n                  <div style={{ width: \"100%\", overflowX: \"scroll\" }}>\n                    <Flex\n                      justify=\"left\"\n                      style={{ width: \"fit-content\", marginTop: \"13px\" }}\n                    >\n                      <AiOutlineCloseCircle\n                        onClick={this.onClose}\n                        style={{ color: \"#4643D3\", marginRight: \"10px\" }}\n                        size={26}\n                      />\n\n                      {availableSocialMediaCategoryList.map((socia, key) => (\n                        <img\n                          src={socia && socia.image && socia.image.url}\n                          alt=\"\"\n                          width=\"26px\"\n                          height=\"26px\"\n                          style={{ marginRight: \"10px\" }}\n                          onClick={(e) => this.socialClickHandler(socia._id)}\n                        />\n                      ))}\n                    </Flex>\n                  </div>\n                </Drawer>\n              </DrawerWrapperRenderer>\n            )}\n        </FormItem>\n      </div>\n    );\n  }\n}\n\nDynamicFieldSet.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  values: PropTypes.array,\n  keys: PropTypes.array,\n  setload: PropTypes.func,\n  buttonText: PropTypes.string,\n  arrayHelpers: PropTypes.object,\n};\n\nexport default withTheme(DynamicFieldSet);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"antd\";\nimport Select from \"./Select\";\n\nconst FormItem = Form.Item;\n\nconst RenderSelect = (props) => {\n  const {\n    input,\n    label,\n    type,\n    children,\n    mode,\n    meta: { touched, error },\n  } = props;\n  let validateStatus = \"\";\n  if (touched && error) {\n    validateStatus = \"error\";\n  }\n\n  const onChange = (value) => {\n    const { formik, name } = props;\n    formik.handleChange({ target: { value, name } });\n  };\n\n  return (\n    <FormItem label={label} validateStatus={validateStatus} help={error}>\n      <div>\n        <Select\n          mode={mode}\n          showSearch\n          optionFilterProp=\"children\"\n          placeholder={label}\n          filterOption={(input, option) =>\n            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >=\n            0\n          }\n          {...input}\n          type={type}\n          onChange={onChange}\n        >\n          {children}\n        </Select>\n      </div>\n    </FormItem>\n  );\n};\n\nRenderSelect.propTypes = {\n  formik: PropTypes.object.isRequired,\n  input: PropTypes.object,\n  label: PropTypes.string,\n  type: PropTypes.string,\n  meta: PropTypes.object,\n  name: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default RenderSelect;\n","import { Select } from 'antd';\n\nconst { Option: ADOption } = Select;\n\nexport default ADOption;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Popconfirm as ADPopconfirm } from \"antd\";\n\nconst Popconfirm = ({ children, ...props }) => {\n  return (\n    <ADPopconfirm {...props}>\n      {children}\n    </ADPopconfirm>\n  );\n};\n\nPopconfirm.propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n};\n\nexport default Popconfirm;\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useGet, useMutate } from \"restful-react\";\n\nimport { connect } from \"react-redux\";\nimport { ApiContext, UserApiUrls, AuthApiUrls } from \"../../api\";\nimport { PageLoader } from \"../look/mobile\";\nimport { setAccessTokene, setRefreshTokene } from \"../../store/appReducer\";\n\n// import authentication from '@gqlapp/authentication-client-react';\n\n// import CURRENT_USER_QUERY from '../graphql/CurrentUserQuery.graphql';\n\nconst withCurrentUser = (Component) => {\n  const WithUserInner = ({ ...props }) => {\n    const { history, refreshToken, setAccessTokene, accessToken } = props;\n    const defaultApiUrl = useContext(ApiContext);\n    const apiUrl = defaultApiUrl + UserApiUrls.getCurrentUser;\n    var currentUserLoading = true;\n\n    var currentUserData;\n    const { data, loading, error } = useGet({\n      path: apiUrl,\n      requestOptions:{\n        headers:{ Authorization: `Bearer ${accessToken}` },\n      }\n    });\n    currentUserLoading = loading;\n    currentUserData = data && data.user;\n    console.log(data, loading, error);\n\n    // if (\n    //   !currentUserLoading &&\n    //   !currentUserData &&\n    //   error &&\n    //   error.status === 401\n    // ) {\n    // }\n    return currentUserLoading || !currentUserData ? (\n      <PageLoader />\n    ) : (\n      <Component\n        {...props}\n        currentUser={currentUserData}\n        currentUserLoading={currentUserLoading}\n      />\n    );\n  };\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\n  const mapStateToProps = (state /*, ownProps*/) => {\n    console.log(\"mapstatetoprops\", state);\n    return {\n      accessToken: state.app.accessToken,\n      refreshToken: state.app.refreshToken,\n    };\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(WithUserInner);\n};\n\nconst withUserByUsername = (Component) => {\n  const WithUserInner = ({ ...props }) => {\n    const { history, refreshToken, setAccessTokene, accessToken, match } = props;\n    const username = match && match.params && match.params.username;\n    const defaultApiUrl = useContext(ApiContext);\n    const apiUrl = defaultApiUrl + UserApiUrls.getUserByUsername(username);\n\n    const { data, loading:userLoading, error } = useGet({\n      path: apiUrl,\n      requestOptions:{\n        headers:{ Authorization: `Bearer ${accessToken}` },\n      }\n    });\n    const userData = data && data.user;\n\n    // if (\n    //   !currentUserLoading &&\n    //   !currentUserData &&\n    //   error &&\n    //   error.status === 401\n    // ) {\n    // }\n    return userLoading  ? (\n      <PageLoader />\n    ) : (\n      <Component\n        {...props}\n        user={userData}\n        userLoading={userLoading}\n      />\n    );\n  };\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\n  const mapStateToProps = (state /*, ownProps*/) => {\n    console.log(\"mapstatetoprops\", state);\n    return {\n      accessToken: state.app.accessToken,\n      refreshToken: state.app.refreshToken,\n    };\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(WithUserInner);\n};\n\n// const RefreshAccessToken = ({ children,  }) => {\n//   const { mutate: refreshAccessToken, loading } = useMutate({\n//     verb: \"POST\",\n//     path: defaultApiUrl + AuthApiUrls.refreshAccessToken,\n//   });\n//   const refreshAccessTokenData = refreshAccessToken(refreshToken);\n//   console.log(\"refreshAccessToken\", refreshAccessTokenData);\n//   return loading && (<PageLoader> <React.Fragment>{children}</React.Fragment></PageLoader>);\n// };\n\n// export default RefreshAccessToken;\n\n// const hasRole = (role, currentUser) => {\n//   return currentUser &&\n//     (!role ||\n//       (Array.isArray(role) ? role : [role]).indexOf(currentUser.role) >= 0)\n//     ? true\n//     : false;\n// };\n\n// const withLoadedUser = (Component) => {\n//   const WithLoadedUser = ({ currentUserLoading, ...props }) =>\n//     currentUserLoading ? null : <Component {...props} />;\n\n//   WithLoadedUser.propTypes = {\n//     currentUser: PropTypes.object,\n//     currentUserLoading: PropTypes.bool.isRequired,\n//   };\n\n//   return withCurrentUser(WithLoadedUser);\n// };\n\n// const IfLoggedInComponent = ({\n//   currentUser,\n//   role,\n//   children,\n//   elseComponent,\n//   refetchCurrentUser,\n//   ...restProps\n// }) =>\n//   hasRole(role, currentUser)\n//     ? React.cloneElement(children, {\n//         ...restProps,\n//       })\n//     : elseComponent || null;\n// IfLoggedInComponent.propTypes = {\n//   currentUser: PropTypes.object,\n//   role: PropTypes.oneOfType([\n//     PropTypes.arrayOf(PropTypes.string),\n//     PropTypes.string,\n//   ]),\n//   elseComponent: PropTypes.node,\n//   children: PropTypes.node,\n// };\n\n// const IfLoggedIn = withLoadedUser(IfLoggedInComponent);\n\n// const IfNotLoggedInComponent = ({\n//   currentUser,\n//   children,\n//   refetchCurrentUser,\n//   ...restProps\n// }) =>\n//   !currentUser\n//     ? React.cloneElement(children, {\n//         ...restProps,\n//       })\n//     : null;\n// IfNotLoggedInComponent.propTypes = {\n//   currentUser: PropTypes.object,\n//   children: PropTypes.node,\n// };\n\n// const IfNotLoggedIn = withLoadedUser(IfNotLoggedInComponent);\n\n// const withLogout = (Component) =>\n//   withApollo(({ client, ...props }) => {\n//     const newProps = {\n//       ...props,\n//       logout: () => authentication.doLogout(client),\n//     };\n//     return <Component {...newProps} />;\n//   });\n\nexport {\n  withCurrentUser,\n  withUserByUsername\n  //   hasRole,\n  //   withLoadedUser,\n  //   IfLoggedIn,\n  //   IfNotLoggedIn,\n  //   withLogout,\n};\n","import React, { useState, Component } from \"react\";\nimport { IoMailOutline, IoMailSharp } from \"react-icons/io5\";\nimport { FiBarChart } from \"react-icons/fi\";\nimport { FaCompass, FaChartBar } from \"react-icons/fa\";\nimport { CgSignal } from \"react-icons/cg\";\n\nimport { IoPulse, IoBarChartOutline } from \"react-icons/io5\";\n\nimport styled, { withTheme } from \"styled-components\";\nimport TabBar from \"./mobile/TabBar\";\nimport TabBarItem from \"./mobile/TabBarItem\";\n\nconst PageLayoutContainer = styled.div`\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n  bottom: 0;\n  margin: auto;\n  max-width: 500px;\n`;\n\nconst PageLayoutDiv = styled.div`\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n`;\n\nconst PageLayoutContent = styled.div`\n  height: 100%;\n  width: 100%;\n  background: ${(props) => props.theme.brandSecondary} !important;\n  padding: 15px;\n  overflow-y: scroll;\n`;\n\nconst StyledTabBar = styled(TabBar)`\n  .am-tabs-tab-bar-wrap {\n    width: 414px;\n    height: 83px;\n    margin: 95px 0 0;\n    padding: 12px 45px 18px 49px;\n    background-color: #141414;\n  }\n`;\n\nclass PageLayout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTab: \"redTab\",\n      hidden: false,\n      fullScreen: false,\n    };\n  }\n\n  renderContent(componentChildren) {\n    return (\n      <PageLayoutDiv>\n        <PageLayoutContent>{componentChildren}</PageLayoutContent>\n      </PageLayoutDiv>\n    );\n  }\n\n  render() {\n    return (\n      <div >\n      <PageLayoutContainer>\n        <StyledTabBar style={{ height: \"83px\" }} hidden={this.state.hidden}>\n          <TabBarItem\n            title=\"Stats\"\n            key=\"Stats\"\n            icon={<IoBarChartOutline size={30} />}\n            selectedIcon={<IoBarChartOutline size={30} />}\n            selected={this.state.selectedTab === \"blueTab\"}\n            // badge={1}\n            onPress={() => {\n              this.setState({\n                selectedTab: \"blueTab\",\n              });\n            }}\n            data-seed=\"logId\"\n          >\n            {this.renderContent(this.props.children)}\n          </TabBarItem>\n          <TabBarItem\n            icon={<FaCompass size={30} />}\n            selectedIcon={<FaCompass size={30} />}\n            title=\"OnePlace\"\n            key=\"OnePlace\"\n            // badge={\"new\"}\n            selected={this.state.selectedTab === \"redTab\"}\n            onPress={() => {\n              this.setState({\n                selectedTab: \"redTab\",\n              });\n            }}\n            data-seed=\"logId1\"\n          >\n            {this.renderContent(this.props.children)}\n          </TabBarItem>\n          <TabBarItem\n            icon={<IoPulse size={30} />}\n            selectedIcon={<IoPulse size={30} />}\n            title=\"Orders\"\n            key=\"Orders\"\n            // dot\n            selected={this.state.selectedTab === \"greenTab\"}\n            onPress={() => {\n              this.setState({\n                selectedTab: \"greenTab\",\n              });\n            }}\n          >\n            {this.renderContent(this.props.children)}\n          </TabBarItem>\n        </StyledTabBar>\n      </PageLayoutContainer>\n      </div>\n    );\n  }\n}\n\nexport default withTheme(PageLayout);\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useGet, useMutate } from \"restful-react\";\n\nimport { connect } from \"react-redux\";\nimport { ApiContext, BlockApiUrls } from \"../../api\";\nimport { PageLoader } from \"../look/mobile\";\nimport { setAccessTokene, setRefreshTokene } from \"../../store/appReducer\";\n\n// import authentication from '@gqlapp/authentication-client-react';\n\n// import CURRENT_USER_QUERY from '../graphql/CurrentUserQuery.graphql';\n\nconst withUserBlocks = (Component) => {\n  const WithUserBlocksInner = ({ ...props }) => {\n    const {\n      history,\n      refreshToken,\n      setAccessTokene,\n      accessToken,\n      username,\n    } = props;\n    const defaultApiUrl = useContext(ApiContext);\n    const apiUrl = defaultApiUrl + BlockApiUrls.getBlocksByUsername(username);\n    const { data, loading: userBlockLoading, error } = useGet({\n      path: apiUrl,\n      requestOptions: {\n        headers: { Authorization: `Bearer ${accessToken}` },\n      },\n    });\n    const userBlockData = data && data.blocksList;\n\n    // if (\n    //   !currentUserLoading &&\n    //   !currentUserData &&\n    //   error &&\n    //   error.status === 401\n    // ) {\n    // }\n    return (\n      <Component\n        {...props}\n        userBlock={userBlockData}\n        userBlockLoading={userBlockLoading}\n      />\n    );\n  };\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\n  const mapStateToProps = (state /*, ownProps*/) => {\n    console.log(\"mapstatetoprops\", state);\n    return {\n      accessToken: state.app.accessToken,\n      refreshToken: state.app.refreshToken,\n    };\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(WithUserBlocksInner);\n};\n\nconst withBlockById = (Component) => {\n  const WithBlockByIdInner = ({ ...props }) => {\n    const {\n      history,\n      refreshToken,\n      setAccessTokene,\n      accessToken,\n      match,\n    } = props;\n    const blockId = match && match.params && match.params.blockId;\n    const defaultApiUrl = useContext(ApiContext);\n    const apiUrl = defaultApiUrl + BlockApiUrls.getBlockById(blockId);\n    console.log(\"apiurl\", apiUrl);\n    const { data, loading: blockByUsernameLoading, error } = useGet({\n      verb: \"GET\",\n      path: apiUrl,\n      requestOptions: {\n        headers: { Authorization: `Bearer ${accessToken}` },\n      },\n    });\n    const blockByUsernameData = data && data.block;\n    console.log(\"blockbyid\", error);\n\n    return blockByUsernameLoading ? (\n      <PageLoader />\n    ) : (\n      <Component\n        {...props}\n        blockByUsername={blockByUsernameData}\n        blockByUsernameLoading={blockByUsernameLoading}\n      />\n    );\n  };\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\n  const mapStateToProps = (state /*, ownProps*/) => {\n    console.log(\"mapstatetoprops\", state);\n    return {\n      accessToken: state.app.accessToken,\n      refreshToken: state.app.refreshToken,\n    };\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(WithBlockByIdInner);\n};\n\nconst withAddUserBlock = (Component) => {\n  const WithAddBlockInner = ({ ...props }) => {\n    const { history, refreshToken, setAccessTokene, accessToken } = props;\n    const defaultApiUrl = useContext(ApiContext);\n    const apiUrl = defaultApiUrl + BlockApiUrls.postBlock;\n\n    const { mutate: postBlock, loading: postBlockLoading, error } = useMutate({\n      verb: \"POST\",\n      path: apiUrl,\n      requestOptions: {\n        headers: { Authorization: `Bearer ${accessToken}` },\n      },\n    });\n    console.log(\"adduserblock\", error);\n    return (\n      <Component\n        {...props}\n        postBlock={postBlock}\n        postBlockLoading={postBlockLoading}\n      />\n    );\n  };\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\n  const mapStateToProps = (state /*, ownProps*/) => {\n    console.log(\"mapstatetoprops\", state);\n    return {\n      accessToken: state.app.accessToken,\n      refreshToken: state.app.refreshToken,\n    };\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(WithAddBlockInner);\n};\n\nconst withEditUserBlock = (Component) => {\n  const WithEditBlockInner = ({ ...props }) => {\n    const {\n      history,\n      refreshToken,\n      setAccessTokene,\n      accessToken,\n      match\n    } = props;\n    const blockId = match && match.params && match.params.blockId;\n    const defaultApiUrl = useContext(ApiContext);\n    const apiUrl = defaultApiUrl + BlockApiUrls.putBlockById(blockId);\n    const { mutate: putBlock, loading: putBlockLoading, error } = useMutate({\n      verb: \"PUT\",\n      path: apiUrl,\n      requestOptions: {\n        headers: { Authorization: `Bearer ${accessToken}` },\n      },\n    });\n    console.log(\"edituserblock\", error);\n    return (\n      <Component\n        {...props}\n        putBlock={putBlock}\n        putBlockLoading={putBlockLoading}\n      />\n    );\n  };\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\n  const mapStateToProps = (state /*, ownProps*/) => {\n    console.log(\"mapstatetoprops\", state);\n    return {\n      accessToken: state.app.accessToken,\n      refreshToken: state.app.refreshToken,\n    };\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(WithEditBlockInner);\n};\n\n\nconst withDeleteUserBlock = (Component) => {\n  const WithDeleteBlockInner = ({ ...props }) => {\n    const {\n      history,\n      refreshToken,\n      setAccessTokene,\n      accessToken,\n      match\n    } = props;\n    const blockId = match && match.params && match.params.blockId;\n    const defaultApiUrl = useContext(ApiContext);\n    const apiUrl = defaultApiUrl + BlockApiUrls.deleteBlockById;\n    const { mutate: deleteBlock, loading: deleteBlockLoading, error } = useMutate({\n      verb: \"DELETE\",\n      path: apiUrl,\n      requestOptions: {\n        headers: { Authorization: `Bearer ${accessToken}` },\n      },\n    });\n    console.log(\"edituserblock\", error);\n    return (\n      <Component\n        {...props}\n        deleteBlock={deleteBlock}\n        deleteBlockLoading={deleteBlockLoading}\n      />\n    );\n  };\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\n  const mapStateToProps = (state /*, ownProps*/) => {\n    console.log(\"mapstatetoprops\", state);\n    return {\n      accessToken: state.app.accessToken,\n      refreshToken: state.app.refreshToken,\n    };\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(WithDeleteBlockInner);\n};\n\n// const RefreshAccessToken = ({ children,  }) => {\n//   const { mutate: refreshAccessToken, loading } = useMutate({\n//     verb: \"POST\",\n//     path: defaultApiUrl + AuthApiUrls.refreshAccessToken,\n//   });\n//   const refreshAccessTokenData = refreshAccessToken(refreshToken);\n//   console.log(\"refreshAccessToken\", refreshAccessTokenData);\n//   return loading && (<PageLoader> <React.Fragment>{children}</React.Fragment></PageLoader>);\n// };\n\n// export default RefreshAccessToken;\n\n// const hasRole = (role, currentUser) => {\n//   return currentUser &&\n//     (!role ||\n//       (Array.isArray(role) ? role : [role]).indexOf(currentUser.role) >= 0)\n//     ? true\n//     : false;\n// };\n\n// const withLoadedUser = (Component) => {\n//   const WithLoadedUser = ({ currentUserLoading, ...props }) =>\n//     currentUserLoading ? null : <Component {...props} />;\n\n//   WithLoadedUser.propTypes = {\n//     currentUser: PropTypes.object,\n//     currentUserLoading: PropTypes.bool.isRequired,\n//   };\n\n//   return withCurrentUser(WithLoadedUser);\n// };\n\n// const IfLoggedInComponent = ({\n//   currentUser,\n//   role,\n//   children,\n//   elseComponent,\n//   refetchCurrentUser,\n//   ...restProps\n// }) =>\n//   hasRole(role, currentUser)\n//     ? React.cloneElement(children, {\n//         ...restProps,\n//       })\n//     : elseComponent || null;\n// IfLoggedInComponent.propTypes = {\n//   currentUser: PropTypes.object,\n//   role: PropTypes.oneOfType([\n//     PropTypes.arrayOf(PropTypes.string),\n//     PropTypes.string,\n//   ]),\n//   elseComponent: PropTypes.node,\n//   children: PropTypes.node,\n// };\n\n// const IfLoggedIn = withLoadedUser(IfLoggedInComponent);\n\n// const IfNotLoggedInComponent = ({\n//   currentUser,\n//   children,\n//   refetchCurrentUser,\n//   ...restProps\n// }) =>\n//   !currentUser\n//     ? React.cloneElement(children, {\n//         ...restProps,\n//       })\n//     : null;\n// IfNotLoggedInComponent.propTypes = {\n//   currentUser: PropTypes.object,\n//   children: PropTypes.node,\n// };\n\n// const IfNotLoggedIn = withLoadedUser(IfNotLoggedInComponent);\n\n// const withLogout = (Component) =>\n//   withApollo(({ client, ...props }) => {\n//     const newProps = {\n//       ...props,\n//       logout: () => authentication.doLogout(client),\n//     };\n//     return <Component {...newProps} />;\n//   });\n\nexport {\n  withUserBlocks,\n  withAddUserBlock,\n  withEditUserBlock,\n  withBlockById,\n  withDeleteUserBlock\n  //   hasRole,\n  //   withLoadedUser,\n  //   IfLoggedIn,\n  //   IfNotLoggedIn,\n  //   withLogout,\n};\n"],"sourceRoot":""}