{"version":3,"sources":["components/form/FieldAdapter.jsx","components/form/validation.js","components/auth/Auth.jsx","components/look/PageLayout.jsx","components/block/BlockOperations.jsx","components/look/web/RenderUpload.jsx","components/look/web/Input.jsx","components/look/web/InputArea.jsx","components/look/web/Form.jsx","components/look/web/Button.jsx","components/look/web/RenderDynamicFieldSocial.jsx","components/look/web/RenderSelect.jsx","components/look/web/Option.jsx","components/block/BlockForm.jsx","components/block/AddBlock.jsx","components/block/EditBlock.jsx","components/profile/components/ProfileForm.jsx","components/profile/components/ProfileEditView.jsx","components/profile/containers/ProfileEdit.jsx","components/profile/ProfileOperations.jsx","components/block/BlockCard.jsx","components/block/ChooseBlockCategory.jsx"],"names":["FieldAdapter","props","onChange","e","secondArg","console","log","formik","fieldType","type","setFieldValue","name","_isAMomentObject","Array","isArray","isString","isNumber","target","value","checked","parseInt","handleChange","onBlur","setFieldTouched","onChangeText","this","component","defaultChecked","disabled","defaultValue","meta","touched","getPath","error","errors","input","React","createElement","Component","connect","required","undefined","maxLength","max","length","minLength","min","phoneNumber","test","validate","object","schema","collectedErrors","validateFormInner","values","innerSchema","collector","Object","keys","filter","v","hasOwnProperty","forEach","s","validator","result","withCurrentUser","mapDispatchToProps","setAccessTokene","setRefreshTokene","state","accessToken","app","refreshToken","currentUserLoading","currentUserData","history","apiUrl","useContext","ApiContext","UserApiUrls","getCurrentUser","useGet","path","requestOptions","headers","Authorization","data","loading","user","currentUser","withUserByUsername","match","username","params","getUserByUsername","userLoading","userData","PageLayoutContainer","styled","div","PageLayoutDiv","PageLayoutContent","theme","brandSecondary","StyledTabBar","TabBar","PageLayout","selectedTab","hidden","fullScreen","componentChildren","style","height","title","key","icon","size","selectedIcon","selected","onPress","setState","data-seed","renderContent","children","withTheme","withUserBlocks","BlockApiUrls","getBlocksByUsername","userBlockLoading","userBlockData","blocksList","userBlock","withBlockById","blockId","getBlockById","verb","blockByUsernameLoading","blockByUsernameData","block","blockByUsername","withAddUserBlock","postBlock","useMutate","mutate","postBlockLoading","withEditUserBlock","putBlockById","putBlock","putBlockLoading","FormItem","Form","Item","RenderUpload","onChangeHandler","file","fileList","arrayHelpers","status","setload","response","upload_obj","upload","handleCancel","previewVisible","previewImage","label","className","handleBlur","uploadButton","validateStatus","onFocus","action","process","listType","onPreview","handlePreview","StyledADInput","ADInput","extra","ADTextArea","Input","TextArea","StyledADTextArea","Button","DrawerWrapperRenderer","InputStylized","AddSocialMedia","DynamicFieldSet","showDrawer","visible","onClose","socialClickHandler","id","add","obj","link","category","push","drawerOpenState","socialMediaCategoryList","formItems","availableSocialMediaCategoryList","item","find","vall","_id","getImageUrlById","idd","socObj","ss","image","url","map","indexv","marginBottom","placeholder","prefix","src","alt","width","marginRight","suffix","color","fontSize","onClick","remove","marginTop","align","flex","placement","closable","getContainer","position","overflowX","justify","socia","Select","Option","ProfileFormContainer","h1","InputAreaStylized","InputArea","RenderUploadStylized","profileFormSchema","thumbnail","ProfileFormWithFormik","withFormik","enableReinitialize","mapPropsToValues","blockData","price","question","media","handleSubmit","onSubmit","modifiedValues","displayName","addBlockFormRef","useRef","useState","ref","onFinish","Fragment","htmlType","PageHead","textColor","a","blockCategory","blockCategoryId","message","content","duration","sending","destroy","success","UsernameInputStylized","UsernamePrefix","p","Yup","shape","userProfile","bio","firstName","profileImage","lastName","socialMediaLinks","socialM","setValues","validationSchema","top","left","transform","bottom","right","zIndex","borderRadius","padding","marginLeft","render","socialVal","ghost","h2","FormWrapper","minHeight","display","placeItems","background","overflowY","maxWidth","ProfileApiUrls","getSocialMediaCategories","socialMediaCategories","socialMediaCategoriesLoading","withSocialMediaCategories","defaultApiUrl","postUserProfile","postUserProfileMutation","putUserProfile","putUserProfileMutation","withAddProfile","postSocialMediaLinks","postAddSocialMedia","postAddSocialMediaLoading","withAddSocialMedia","profileMutation","handleSocialLinksSubmission","responseSend","socialMediaLink","promises","Promise","all","socialSending","profileValues","profileSubmissionObj","BlockCardWrapper","BlockCardTitle","BlockCardDescription","BlockCardAvatarWrapper","to","description","getBlockCategory","blockCategoryList","overflow","blockCat"],"mappings":"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","file":"static/js/profileEditDefault.c7e66142.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"formik\";\r\nimport { get as getPath } from \"lodash\";\r\nimport { isString, isNumber } from \"util\";\r\n\r\nconst PLATFORM = \"m\";\r\n\r\nclass FieldAdapter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n  }\r\n  onChange = (e, secondArg) => {\r\n    console.log(\"onChange\", e, secondArg, this.props);\r\n    const { formik, onChange, type: fieldType } = this.props;\r\n    if (onChange) {\r\n      onChange(e);\r\n    }\r\n    if (fieldType === \"image\" || fieldType === \"media\") {\r\n      formik.setFieldValue(this.props.name, e);\r\n    }\r\n    else if (e._isAMomentObject && secondArg) {\r\n      this.props.formik.setFieldValue(this.props.name, secondArg);\r\n    } else if (\r\n      Array.isArray(e) &&\r\n      e[0]._isAMomentObject &&\r\n      e[1]._isAMomentObject &&\r\n      secondArg\r\n    ) {\r\n      this.props.formik.setFieldValue(this.props.name, secondArg);\r\n    } else if (isString(e)) {\r\n      // for Option Field\r\n      this.props.formik.setFieldValue(this.props.name, e);\r\n    } else if (isNumber(e)) {\r\n      this.props.formik.setFieldValue(this.props.name, e);\r\n    } else if (e && e.target && e.target.type == \"radio\") {\r\n      this.props.formik.setFieldValue(e.target.name, e.target.value);\r\n    } else if (e && e.target && e.target.checked) {\r\n      this.props.formik.setFieldValue(e.target.name, e.target.checked);\r\n    } else if (e && e.target && e.target.type == \"number\") {\r\n      this.props.formik.setFieldValue(e.target.name, parseInt(e.target.value));\r\n    } else {\r\n      formik.handleChange(e);\r\n    }\r\n  };\r\n\r\n  onBlur = (e) => {\r\n    const { formik, onBlur, name } = this.props;\r\n    if (onBlur) {\r\n      onBlur(e);\r\n    } else {\r\n      if (PLATFORM === \"mobile\") {\r\n        formik.setFieldTouched(name, true);\r\n      } else {\r\n        // console.log(name);\r\n        // formik.handleBlur(e);\r\n        formik.setFieldTouched(name, true);\r\n      }\r\n    }\r\n  };\r\n\r\n  onChangeText = (value) => {\r\n    const { formik, onChangeText, onChange, name } = this.props;\r\n    if (onChange && !onChangeText) {\r\n      onChange(value);\r\n    } else if (onChangeText) {\r\n      onChangeText(value);\r\n    } else {\r\n      formik.setFieldValue(name, value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { formik, component, name, defaultChecked, disabled } = this.props;\r\n    let { defaultValue } = this.props;\r\n    let { value, checked } = this.props;\r\n    value = value || \"\";\r\n    // const type = this.props.type;\r\n    // if (type == 'number') {\r\n    //   value = parseInt(value);\r\n    //   defaultValue = parseInt(defaultValue);\r\n    //   console.log(value);\r\n    // }\r\n\r\n    checked = checked || false;\r\n    const meta = {\r\n      touched: getPath(formik.touched, name),\r\n      error: getPath(formik.errors, name),\r\n    };\r\n    const input = {\r\n      onBlur: this.onBlur,\r\n      name,\r\n      value,\r\n      checked,\r\n      defaultValue,\r\n      defaultChecked,\r\n      disabled,\r\n    };\r\n\r\n    const changeEventHandler =\r\n      PLATFORM === \"mobile\" ? \"onChangeText\" : \"onChange\";\r\n    input[changeEventHandler] = this[changeEventHandler];\r\n\r\n    return React.createElement(component, {\r\n      ...this.props,\r\n      input,\r\n      meta,\r\n    });\r\n  }\r\n}\r\n\r\nFieldAdapter.propTypes = {\r\n  formik: PropTypes.object.isRequired,\r\n  component: PropTypes.func,\r\n  type: PropTypes.string,\r\n  onChangeText: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.any,\r\n  defaultValue: PropTypes.any,\r\n  checked: PropTypes.bool,\r\n  defaultChecked: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default connect(FieldAdapter);\r\n","/**\r\n * Validates if the value is empty.\r\n *\r\n * @param value\r\n * @return {undefined | string}\r\n */\r\nexport const required = (value) => (value ? undefined : 'Field Required');\r\n\r\n/**\r\n * Validates the maximal length of the value.\r\n * Usage: const maxLength15 = maxLength(15)\r\n *\r\n * @param max\r\n * @return {undefined | string}\r\n */\r\nexport const maxLength = (max) => (value) =>\r\n  value && value.length > max ? `Input shouldn't be bigger than ${max} characters` : undefined;\r\n\r\n/**\r\n * Validates the minimal length of the value.\r\n * Usage: export const minLength2 = minLength(2)\r\n *\r\n * @param min\r\n * @return {undefined | string}\r\n */\r\nexport const minLength = (min) => (value) =>\r\n  value && value.length < min ? `Input should be bigger than ${min} characters` : undefined;\r\n\r\n/**\r\n * Validates if the value is a number.\r\n *\r\n * @param value\r\n * @return {undefined | string}\r\n */\r\nexport const number = (value) => (value && isNaN(Number(value)) ? 'Input is not a number' : undefined);\r\n\r\n/**\r\n * Validates if the value is a string.\r\n *\r\n * @param value\r\n * @return {undefined | string}\r\n */\r\nexport const string = (value) =>\r\n  value && !(typeof value === 'string' || value instanceof String) ? 'Input is not a string' : undefined;\r\n\r\n/**\r\n * Validates the minimal value.\r\n * Usage: export const minValue18 = minValue(18);\r\n *\r\n * @param min\r\n * @return {undefined | string}\r\n */\r\nexport const minValue = (min) => (value) =>\r\n  value && value < min ? `Input should be bigger than ${min}` : undefined;\r\n\r\n/**\r\n * Validates the email.\r\n *\r\n * @param value\r\n * @return {undefined | string}\r\n */\r\nexport const email = (value) =>\r\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Input is not an email' : undefined;\r\n\r\n/**\r\n * Validates if the value is alpha-numeric.\r\n *\r\n * @param value\r\n * @return {undefined | string}\r\n */\r\nexport const alphaNumeric = (value) =>\r\n  value && /[^a-zA-Z0-9 ]/i.test(value) ? 'Input is not alpha numeric' : undefined;\r\n\r\n/**\r\n * Validates the phone number.\r\n *\r\n * @param value\r\n * @return {undefined | string}\r\n */\r\nexport const phoneNumber = (value) =>\r\n  value && !/^(\\+)?([ 0-9]){10,16}$/i.test(value) ? 'Input is not a phone number' : undefined;\r\n\r\n\r\n\r\n/**\r\n * Validates the input object according to the input schema.\r\n *\r\n * @param object\r\n * @param schema\r\n * @return object with errors\r\n */\r\nexport const validate = (object, schema) => {\r\n  const errors = {};\r\n  const validateFormInner = (\r\n    values,\r\n    innerSchema,\r\n    collector\r\n  ) => {\r\n    Object.keys(innerSchema)\r\n      .filter(v => innerSchema.hasOwnProperty(v))\r\n      .forEach(v => {\r\n        const s = innerSchema[v];\r\n\r\n        if (Array.isArray(s)) {\r\n          s.forEach(validator => {\r\n            const result = validator(values[v], values);\r\n            if (result) {\r\n              collector[v] = result;\r\n            }\r\n          });\r\n        } else {\r\n          validateFormInner(values[v], innerSchema[v], collector);\r\n        }\r\n      });\r\n\r\n    return collector;\r\n  };\r\n\r\n  const collectedErrors = validateFormInner(object, schema, errors);\r\n  return Object.keys(collectedErrors).length ? collectedErrors : undefined;\r\n};","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useGet, useMutate } from \"restful-react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { ApiContext, UserApiUrls, AuthApiUrls } from \"../../api\";\r\nimport { PageLoader } from \"../look/mobile\";\r\nimport { setAccessTokene, setRefreshTokene } from \"../../store/appReducer\";\r\n\r\n// import authentication from '@gqlapp/authentication-client-react';\r\n\r\n// import CURRENT_USER_QUERY from '../graphql/CurrentUserQuery.graphql';\r\n\r\nconst withCurrentUser = (Component) => {\r\n  const WithUserInner = ({ ...props }) => {\r\n    const { history, refreshToken, setAccessTokene, accessToken } = props;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n    const apiUrl = defaultApiUrl + UserApiUrls.getCurrentUser;\r\n    var currentUserLoading = true;\r\n\r\n    var currentUserData;\r\n    const { data, loading, error } = useGet({\r\n      path: apiUrl,\r\n      requestOptions:{\r\n        headers:{ Authorization: `Bearer ${accessToken}` },\r\n      }\r\n    });\r\n    currentUserLoading = loading;\r\n    currentUserData = data && data.user;\r\n    console.log(data, loading, error);\r\n\r\n    // if (\r\n    //   !currentUserLoading &&\r\n    //   !currentUserData &&\r\n    //   error &&\r\n    //   error.status === 401\r\n    // ) {\r\n    // }\r\n    return currentUserLoading || !currentUserData ? (\r\n      <PageLoader />\r\n    ) : (\r\n      <Component\r\n        {...props}\r\n        currentUser={currentUserData}\r\n        currentUserLoading={currentUserLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithUserInner);\r\n};\r\n\r\nconst withUserByUsername = (Component) => {\r\n  const WithUserInner = ({ ...props }) => {\r\n    const { history, refreshToken, setAccessTokene, accessToken, match } = props;\r\n    const username = match && match.params && match.params.username;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n    const apiUrl = defaultApiUrl + UserApiUrls.getUserByUsername(username);\r\n\r\n    const { data, loading:userLoading, error } = useGet({\r\n      path: apiUrl,\r\n      requestOptions:{\r\n        headers:{ Authorization: `Bearer ${accessToken}` },\r\n      }\r\n    });\r\n    const userData = data && data.user;\r\n\r\n    // if (\r\n    //   !currentUserLoading &&\r\n    //   !currentUserData &&\r\n    //   error &&\r\n    //   error.status === 401\r\n    // ) {\r\n    // }\r\n    return userLoading  ? (\r\n      <PageLoader />\r\n    ) : (\r\n      <Component\r\n        {...props}\r\n        user={userData}\r\n        userLoading={userLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithUserInner);\r\n};\r\n\r\n// const RefreshAccessToken = ({ children,  }) => {\r\n//   const { mutate: refreshAccessToken, loading } = useMutate({\r\n//     verb: \"POST\",\r\n//     path: defaultApiUrl + AuthApiUrls.refreshAccessToken,\r\n//   });\r\n//   const refreshAccessTokenData = refreshAccessToken(refreshToken);\r\n//   console.log(\"refreshAccessToken\", refreshAccessTokenData);\r\n//   return loading && (<PageLoader> <React.Fragment>{children}</React.Fragment></PageLoader>);\r\n// };\r\n\r\n// export default RefreshAccessToken;\r\n\r\n// const hasRole = (role, currentUser) => {\r\n//   return currentUser &&\r\n//     (!role ||\r\n//       (Array.isArray(role) ? role : [role]).indexOf(currentUser.role) >= 0)\r\n//     ? true\r\n//     : false;\r\n// };\r\n\r\n// const withLoadedUser = (Component) => {\r\n//   const WithLoadedUser = ({ currentUserLoading, ...props }) =>\r\n//     currentUserLoading ? null : <Component {...props} />;\r\n\r\n//   WithLoadedUser.propTypes = {\r\n//     currentUser: PropTypes.object,\r\n//     currentUserLoading: PropTypes.bool.isRequired,\r\n//   };\r\n\r\n//   return withCurrentUser(WithLoadedUser);\r\n// };\r\n\r\n// const IfLoggedInComponent = ({\r\n//   currentUser,\r\n//   role,\r\n//   children,\r\n//   elseComponent,\r\n//   refetchCurrentUser,\r\n//   ...restProps\r\n// }) =>\r\n//   hasRole(role, currentUser)\r\n//     ? React.cloneElement(children, {\r\n//         ...restProps,\r\n//       })\r\n//     : elseComponent || null;\r\n// IfLoggedInComponent.propTypes = {\r\n//   currentUser: PropTypes.object,\r\n//   role: PropTypes.oneOfType([\r\n//     PropTypes.arrayOf(PropTypes.string),\r\n//     PropTypes.string,\r\n//   ]),\r\n//   elseComponent: PropTypes.node,\r\n//   children: PropTypes.node,\r\n// };\r\n\r\n// const IfLoggedIn = withLoadedUser(IfLoggedInComponent);\r\n\r\n// const IfNotLoggedInComponent = ({\r\n//   currentUser,\r\n//   children,\r\n//   refetchCurrentUser,\r\n//   ...restProps\r\n// }) =>\r\n//   !currentUser\r\n//     ? React.cloneElement(children, {\r\n//         ...restProps,\r\n//       })\r\n//     : null;\r\n// IfNotLoggedInComponent.propTypes = {\r\n//   currentUser: PropTypes.object,\r\n//   children: PropTypes.node,\r\n// };\r\n\r\n// const IfNotLoggedIn = withLoadedUser(IfNotLoggedInComponent);\r\n\r\n// const withLogout = (Component) =>\r\n//   withApollo(({ client, ...props }) => {\r\n//     const newProps = {\r\n//       ...props,\r\n//       logout: () => authentication.doLogout(client),\r\n//     };\r\n//     return <Component {...newProps} />;\r\n//   });\r\n\r\nexport {\r\n  withCurrentUser,\r\n  withUserByUsername\r\n  //   hasRole,\r\n  //   withLoadedUser,\r\n  //   IfLoggedIn,\r\n  //   IfNotLoggedIn,\r\n  //   withLogout,\r\n};\r\n","import React, { useState, Component } from \"react\";\r\nimport { IoMailOutline, IoMailSharp } from \"react-icons/io5\";\r\nimport { FiBarChart } from \"react-icons/fi\";\r\nimport { FaCompass, FaChartBar } from \"react-icons/fa\";\r\nimport { CgSignal } from \"react-icons/cg\";\r\n\r\nimport { IoPulse, IoBarChartOutline } from \"react-icons/io5\";\r\n\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport TabBar from \"./mobile/TabBar\";\r\nimport TabBarItem from \"./mobile/TabBarItem\";\r\n\r\nconst PageLayoutContainer = styled.div`\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  overflow: hidden;\r\n  bottom: 0;\r\n  margin: auto;\r\n  max-width: 500px;\r\n`;\r\n\r\nconst PageLayoutDiv = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst PageLayoutContent = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  background: ${(props) => props.theme.brandSecondary} !important;\r\n  padding: 15px;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst StyledTabBar = styled(TabBar)`\r\n  .am-tabs-tab-bar-wrap {\r\n    width: 414px;\r\n    height: 83px;\r\n    margin: 95px 0 0;\r\n    padding: 12px 45px 18px 49px;\r\n    background-color: #141414;\r\n  }\r\n`;\r\n\r\nclass PageLayout extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedTab: \"redTab\",\r\n      hidden: false,\r\n      fullScreen: false,\r\n    };\r\n  }\r\n\r\n  renderContent(componentChildren) {\r\n    return (\r\n      <PageLayoutDiv>\r\n        <PageLayoutContent>{componentChildren}</PageLayoutContent>\r\n      </PageLayoutDiv>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n      <PageLayoutContainer>\r\n        <StyledTabBar style={{ height: \"83px\" }} hidden={this.state.hidden}>\r\n          <TabBarItem\r\n            title=\"Stats\"\r\n            key=\"Stats\"\r\n            icon={<IoBarChartOutline size={30} />}\r\n            selectedIcon={<IoBarChartOutline size={30} />}\r\n            selected={this.state.selectedTab === \"blueTab\"}\r\n            // badge={1}\r\n            onPress={() => {\r\n              this.setState({\r\n                selectedTab: \"blueTab\",\r\n              });\r\n            }}\r\n            data-seed=\"logId\"\r\n          >\r\n            {this.renderContent(this.props.children)}\r\n          </TabBarItem>\r\n          <TabBarItem\r\n            icon={<FaCompass size={30} />}\r\n            selectedIcon={<FaCompass size={30} />}\r\n            title=\"OnePlace\"\r\n            key=\"OnePlace\"\r\n            // badge={\"new\"}\r\n            selected={this.state.selectedTab === \"redTab\"}\r\n            onPress={() => {\r\n              this.setState({\r\n                selectedTab: \"redTab\",\r\n              });\r\n            }}\r\n            data-seed=\"logId1\"\r\n          >\r\n            {this.renderContent(this.props.children)}\r\n          </TabBarItem>\r\n          <TabBarItem\r\n            icon={<IoPulse size={30} />}\r\n            selectedIcon={<IoPulse size={30} />}\r\n            title=\"Orders\"\r\n            key=\"Orders\"\r\n            // dot\r\n            selected={this.state.selectedTab === \"greenTab\"}\r\n            onPress={() => {\r\n              this.setState({\r\n                selectedTab: \"greenTab\",\r\n              });\r\n            }}\r\n          >\r\n            {this.renderContent(this.props.children)}\r\n          </TabBarItem>\r\n        </StyledTabBar>\r\n      </PageLayoutContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(PageLayout);\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useGet, useMutate } from \"restful-react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { ApiContext, BlockApiUrls } from \"../../api\";\r\nimport { PageLoader } from \"../look/mobile\";\r\nimport { setAccessTokene, setRefreshTokene } from \"../../store/appReducer\";\r\n\r\n// import authentication from '@gqlapp/authentication-client-react';\r\n\r\n// import CURRENT_USER_QUERY from '../graphql/CurrentUserQuery.graphql';\r\n\r\nconst withUserBlocks = (Component) => {\r\n  const WithUserBlocksInner = ({ ...props }) => {\r\n    const {\r\n      history,\r\n      refreshToken,\r\n      setAccessTokene,\r\n      accessToken,\r\n      username,\r\n    } = props;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n    const apiUrl = defaultApiUrl + BlockApiUrls.getBlocksByUsername(username);\r\n    const { data, loading: userBlockLoading, error } = useGet({\r\n      path: apiUrl,\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n    const userBlockData = data && data.blocksList;\r\n\r\n    // if (\r\n    //   !currentUserLoading &&\r\n    //   !currentUserData &&\r\n    //   error &&\r\n    //   error.status === 401\r\n    // ) {\r\n    // }\r\n    return (\r\n      <Component\r\n        {...props}\r\n        userBlock={userBlockData}\r\n        userBlockLoading={userBlockLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithUserBlocksInner);\r\n};\r\n\r\nconst withBlockById = (Component) => {\r\n  const WithBlockByIdInner = ({ ...props }) => {\r\n    const {\r\n      history,\r\n      refreshToken,\r\n      setAccessTokene,\r\n      accessToken,\r\n      match,\r\n    } = props;\r\n    const blockId = match && match.params && match.params.blockId;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n    const apiUrl = defaultApiUrl + BlockApiUrls.getBlockById(blockId);\r\n    console.log(\"apiurl\", apiUrl);\r\n    const { data, loading: blockByUsernameLoading, error } = useGet({\r\n      verb: \"GET\",\r\n      path: apiUrl,\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n    const blockByUsernameData = data && data.block;\r\n    console.log(\"blockbyid\", error);\r\n\r\n    return blockByUsernameLoading ? (\r\n      <PageLoader />\r\n    ) : (\r\n      <Component\r\n        {...props}\r\n        blockByUsername={blockByUsernameData}\r\n        blockByUsernameLoading={blockByUsernameLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithBlockByIdInner);\r\n};\r\n\r\nconst withAddUserBlock = (Component) => {\r\n  const WithAddBlockInner = ({ ...props }) => {\r\n    const { history, refreshToken, setAccessTokene, accessToken } = props;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n    const apiUrl = defaultApiUrl + BlockApiUrls.postBlock;\r\n\r\n    const { mutate: postBlock, loading: postBlockLoading, error } = useMutate({\r\n      verb: \"POST\",\r\n      path: apiUrl,\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n    console.log(\"adduserblock\", error);\r\n    return (\r\n      <Component\r\n        {...props}\r\n        postBlock={postBlock}\r\n        postBlockLoading={postBlockLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithAddBlockInner);\r\n};\r\n\r\nconst withEditUserBlock = (Component) => {\r\n  const WithEditBlockInner = ({ ...props }) => {\r\n    const {\r\n      history,\r\n      refreshToken,\r\n      setAccessTokene,\r\n      accessToken,\r\n      match\r\n    } = props;\r\n    const blockId = match && match.params && match.params.blockId;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n    const apiUrl = defaultApiUrl + BlockApiUrls.putBlockById(blockId);\r\n    const { mutate: putBlock, loading: putBlockLoading, error } = useMutate({\r\n      verb: \"PUT\",\r\n      path: apiUrl,\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n    console.log(\"edituserblock\", error);\r\n    return (\r\n      <Component\r\n        {...props}\r\n        putBlock={putBlock}\r\n        putBlockLoading={putBlockLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithEditBlockInner);\r\n};\r\n\r\n// const RefreshAccessToken = ({ children,  }) => {\r\n//   const { mutate: refreshAccessToken, loading } = useMutate({\r\n//     verb: \"POST\",\r\n//     path: defaultApiUrl + AuthApiUrls.refreshAccessToken,\r\n//   });\r\n//   const refreshAccessTokenData = refreshAccessToken(refreshToken);\r\n//   console.log(\"refreshAccessToken\", refreshAccessTokenData);\r\n//   return loading && (<PageLoader> <React.Fragment>{children}</React.Fragment></PageLoader>);\r\n// };\r\n\r\n// export default RefreshAccessToken;\r\n\r\n// const hasRole = (role, currentUser) => {\r\n//   return currentUser &&\r\n//     (!role ||\r\n//       (Array.isArray(role) ? role : [role]).indexOf(currentUser.role) >= 0)\r\n//     ? true\r\n//     : false;\r\n// };\r\n\r\n// const withLoadedUser = (Component) => {\r\n//   const WithLoadedUser = ({ currentUserLoading, ...props }) =>\r\n//     currentUserLoading ? null : <Component {...props} />;\r\n\r\n//   WithLoadedUser.propTypes = {\r\n//     currentUser: PropTypes.object,\r\n//     currentUserLoading: PropTypes.bool.isRequired,\r\n//   };\r\n\r\n//   return withCurrentUser(WithLoadedUser);\r\n// };\r\n\r\n// const IfLoggedInComponent = ({\r\n//   currentUser,\r\n//   role,\r\n//   children,\r\n//   elseComponent,\r\n//   refetchCurrentUser,\r\n//   ...restProps\r\n// }) =>\r\n//   hasRole(role, currentUser)\r\n//     ? React.cloneElement(children, {\r\n//         ...restProps,\r\n//       })\r\n//     : elseComponent || null;\r\n// IfLoggedInComponent.propTypes = {\r\n//   currentUser: PropTypes.object,\r\n//   role: PropTypes.oneOfType([\r\n//     PropTypes.arrayOf(PropTypes.string),\r\n//     PropTypes.string,\r\n//   ]),\r\n//   elseComponent: PropTypes.node,\r\n//   children: PropTypes.node,\r\n// };\r\n\r\n// const IfLoggedIn = withLoadedUser(IfLoggedInComponent);\r\n\r\n// const IfNotLoggedInComponent = ({\r\n//   currentUser,\r\n//   children,\r\n//   refetchCurrentUser,\r\n//   ...restProps\r\n// }) =>\r\n//   !currentUser\r\n//     ? React.cloneElement(children, {\r\n//         ...restProps,\r\n//       })\r\n//     : null;\r\n// IfNotLoggedInComponent.propTypes = {\r\n//   currentUser: PropTypes.object,\r\n//   children: PropTypes.node,\r\n// };\r\n\r\n// const IfNotLoggedIn = withLoadedUser(IfNotLoggedInComponent);\r\n\r\n// const withLogout = (Component) =>\r\n//   withApollo(({ client, ...props }) => {\r\n//     const newProps = {\r\n//       ...props,\r\n//       logout: () => authentication.doLogout(client),\r\n//     };\r\n//     return <Component {...newProps} />;\r\n//   });\r\n\r\nexport {\r\n  withUserBlocks,\r\n  withAddUserBlock,\r\n  withEditUserBlock,\r\n  withBlockById,\r\n  //   hasRole,\r\n  //   withLoadedUser,\r\n  //   IfLoggedIn,\r\n  //   IfNotLoggedIn,\r\n  //   withLogout,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Form, Upload, Modal } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class RenderUpload extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // To Do Fix this thing\r\n    this.state = {\r\n      previewVisible: false,\r\n      previewImage: \"\",\r\n      fileList: props.value ? [props.value] : [],\r\n    };\r\n  }\r\n\r\n  onChangeHandler = ({ file, fileList }) => {\r\n    const arrayHelpers = this.props.arrayHelpers;\r\n\r\n    if (file.status === \"uploading\") {\r\n      this.props.setload(true);\r\n    }\r\n\r\n    if (file.status == \"done\") {\r\n      this.props.setload(false);\r\n      if (file.response) {\r\n        let upload_obj = file.response && file.response.upload;\r\n        if (upload_obj) {\r\n          // console.log(upload_obj);\r\n          //set value in form\r\n          this.props.input.onChange(upload_obj);\r\n        }\r\n      }\r\n    } else if (file.status == \"removed\") {\r\n      this.props.setload(false);\r\n      // console.log(file);\r\n      //remove value in form\r\n      this.props.input.onChange(\"\");\r\n    }\r\n    this.setState({ fileList });\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  // handlePreview = file => {\r\n  //   this.setState({\r\n  //     previewImage: file.url || file.thumbUrl,\r\n  //     previewVisible: true\r\n  //   });\r\n  // };\r\n\r\n  handleChange = ({ fileList }) => this.setState({ fileList });\r\n\r\n  render() {\r\n    // { input, label, meta: { touched, error }, defaultFileList }) = this.props\r\n    // const touched = this.props.meta.touched;\r\n    // const error = this.props.meta.error;\r\n    const { label, className, children, meta, handleBlur } = this.props;\r\n    // const input = this.props.input;\r\n    // console.log(input);\r\n    // const defaultFileList = this.props.defaultFileList;\r\n\r\n    // const cloudinary_url = 'https://api.cloudinary.com/v1_1/nodejs-starter-kit/image/upload';\r\n    // const cloudinary_data = { upload_preset: 'hycdtdxe' };\r\n\r\n    // const headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\r\n    // const cloudinary_data = { upload_preset: 'nxzf2ip6' };\r\n    const imageApiUrl = process.env.REACT_APP_IMAGE_API_URL;\r\n\r\n    let validateStatus = \"\";\r\n    // if (touched && error) {\r\n    //   validateStatus = 'error';\r\n    // }\r\n    // let defaultFileList = [];\r\n    // if (this.props.values) {\r\n    //   defaultFileList = this.props.values.map((img, index) => ({\r\n    //     uid: index,\r\n    //     name: 'link',\r\n    //     status: 'done',\r\n    //     url: img.imageUrl,\r\n    //     thumbUrl: img.imageUrl\r\n    //   }));\r\n    // }\r\n\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        {/* <Icon type=\"plus\" /> */}\r\n        <div className=\"ant-upload-text\">{label}</div>\r\n      </div>\r\n    );\r\n    console.log('Meta', meta);\r\n    return (\r\n      <FormItem\r\n        validateStatus={validateStatus}\r\n        validateStatus={meta.touched && meta.error && \"error\"}\r\n        extra={meta.touched && meta.error}\r\n      >\r\n        <div className={`clearfix antd-upload-custom-wrapper ${className}`}>\r\n          <Upload\r\n            onFocus={handleBlur}\r\n            action={imageApiUrl}\r\n            listType=\"picture-card\"\r\n            fileList={fileList}\r\n            onPreview={this.handlePreview}\r\n            onChange={this.onChangeHandler}\r\n          >\r\n            {fileList.length >= 1 ? null : uploadButton}\r\n            {children}\r\n          </Upload>\r\n          {/* <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n            <img alt=\"image\" style={{ width: '100%' }} src={previewImage} />\r\n          </Modal> */}\r\n        </div>{\" \"}\r\n      </FormItem>\r\n    );\r\n  }\r\n}\r\nRenderUpload.propTypes = {\r\n  input: PropTypes.object,\r\n  label: PropTypes.string,\r\n  setload: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Input as ADInput, Form } from \"antd\";\r\nimport styled, { withTheme } from \"styled-components\";\r\n\r\nconst StyledADInput = styled(ADInput)`\r\n  /* display:block; */\r\n`;\r\n\r\nconst Input = ({ children, ...props }) => {\r\n  const {\r\n    formik: { setFieldValue, handleBlur },\r\n    name,\r\n    meta,\r\n  } = props;\r\n  return (\r\n    <Form.Item\r\n      validateStatus={meta.touched && meta.error && \"error\"}\r\n      extra={meta.touched && meta.error}\r\n    >\r\n      <StyledADInput\r\n        onBlur={handleBlur}\r\n        {...props}\r\n        onChange={(e) => {\r\n          setFieldValue(name, e.target.value);\r\n        }}\r\n      >\r\n        {children}\r\n      </StyledADInput>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default withTheme(Input);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Input, Form } from \"antd\";\r\nimport styled, { withTheme } from \"styled-components\";\r\n\r\nconst ADTextArea = Input.TextArea;\r\n\r\nconst StyledADTextArea = styled(ADTextArea)`\r\n  /* display:block; */\r\n`;\r\n\r\nconst TextArea = ({ children, ...props }) => {\r\n  const {\r\n    formik: { setFieldValue, handleBlur },\r\n    name,\r\n    meta,\r\n  } = props;\r\n  console.log('textarea', props);\r\n  return (\r\n    <Form.Item\r\n      validateStatus={meta.touched && meta.error && \"error\"}\r\n      extra={meta.touched && meta.error}\r\n    >\r\n      <StyledADTextArea\r\n        onBlur={handleBlur}\r\n        {...props}\r\n        onChange={(e) => {\r\n          setFieldValue(name, e.target.value);\r\n        }}\r\n      >\r\n        {children}\r\n      </StyledADTextArea>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nTextArea.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default withTheme(TextArea);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form as ADForm } from 'antd';\r\n\r\nconst Form = ({ children, ...props }) => {\r\n  return <ADForm {...props}>{children}</ADForm>;\r\n};\r\n\r\nForm.propTypes = {\r\n  children: PropTypes.node,\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button as ADButton } from \"antd\";\r\n\r\nconst Button = ({ children, type, ...props }) => {\r\n  return (\r\n    <ADButton type={type} {...props}>\r\n      {children}\r\n    </ADButton>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.node,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FieldAdapter as Field } from \"../../form\";\r\nimport { Form, Drawer } from \"antd\";\r\nimport { Flex } from \"antd-mobile\";\r\nimport {\r\n  AiOutlineMinusCircle,\r\n  AiOutlinePlusCircle,\r\n  AiOutlineCloseCircle,\r\n} from \"react-icons/ai\";\r\nimport styled, { withTheme } from \"styled-components\";\r\n\r\nimport { Input, RenderSelect, Button, Option } from \"../web\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst DrawerWrapperRenderer = styled.div`\r\n  position: relative;\r\n  height: 60px;\r\n  padding: 0px 0px 0px 10px;\r\n  overflow: hidden;\r\n  /* text-align: center; */\r\n  /* display: grid;\r\n  place-items: center; */\r\n\r\n  background: transparent;\r\n  border: 1px solid #ebedf0;\r\n  border-radius: 7px;\r\n  margin-bottom: 20px;\r\n  .ant-drawer-mask {\r\n    background-color: transparent !important;\r\n  }\r\n  .ant-drawer-content-wrapper {\r\n    width: 100% !important;\r\n    .ant-drawer-content {\r\n      background: transparent !important;\r\n      .ant-drawer-wrapper-body {\r\n        .ant-drawer-body {\r\n          padding: 0;\r\n          padding-left: 10px;\r\n          background: white !important;\r\n        }\r\n        .ant-drawer-header {\r\n          .ant-drawer-title {\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst InputStylized = styled(Input)`\r\n  background: white !important;\r\n  border-radius: 7px;\r\n  border: solid 2px #d8d8d8;\r\n  height: 60px !important;\r\n  font-size: 20px;\r\n  padding: 0 10px;\r\n  caret-color:#4643D3;\r\n  color: #4643D3 !important;\r\n  font-family: Circular Std Medium;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  input {\r\n    background: transparent !important;\r\n    caret-color: white;\r\n    color: #4643D3 !important;\r\n    font-size: 15px;\r\n    word-spacing:-3px;\r\n    font-family: Circular Std Medium;\r\n    font-weight: normal;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n  }\r\n  input:focus {\r\n    caret-color: #4643D3;\r\n    color: #4643D3;\r\n    background-color: transparent !important;\r\n  }\r\n  input:-webkit-autofill,\r\n  input:-webkit-autofill:hover,\r\n  input:-webkit-autofill:focus {\r\n    transition: background-color 5000s ease-in-out 0s;\r\n    -webkit-text-fill-color: #4643D3;\r\n    caret-color: #4643D3;\r\n    color: #4643D3;\r\n    background-color: transparent !important;\r\n  }\r\n`;\r\n\r\nconst AddSocialMedia = styled.div`\r\n  color: white;\r\n  padding-left: 20px;\r\n  font-size: 15px;\r\n  word-spacing:-3px;\r\n  font-family: Circular Std Medium;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n`;\r\n\r\nclass DynamicFieldSet extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n    };\r\n  }\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  socialClickHandler = (id) => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.add(id);\r\n  };\r\n  add = (id) => {\r\n    const arrayHelpers = this.props.arrayHelpers;\r\n    let obj = {};\r\n    obj = {\r\n      link: \"\",\r\n      category: id,\r\n    };\r\n\r\n    // keys.map((k) => (obj[k.key] = \"\"));\r\n\r\n    arrayHelpers.push(obj);\r\n  };\r\n\r\n  render() {\r\n    const drawerOpenState = this.state.visible;\r\n    const { socialMediaCategoryList, name, values, arrayHelpers } = this.props;\r\n    console.log(\"renderdynamic\", socialMediaCategoryList);\r\n    let formItems = null;\r\n    const availableSocialMediaCategoryList = socialMediaCategoryList.filter(\r\n      (item) => !values.find((vall) => vall.category === item._id)\r\n    );\r\n    const getImageUrlById = (idd) => {\r\n      const socObj =\r\n        socialMediaCategoryList &&\r\n        socialMediaCategoryList.find((ss) => ss._id === idd);\r\n      return socObj && socObj.image && socObj.image.url;\r\n    };\r\n    if (values) {\r\n      formItems = values.map((v, indexv) => (\r\n        <FormItem required={false} key={indexv} style={{ marginBottom: \"0\" }}>\r\n          <Field\r\n            name={`${name}[${indexv}].link`}\r\n            component={InputStylized}\r\n            placeholder={\"Link\"}\r\n            prefix={\r\n              <img\r\n                src={getImageUrlById(v[\"category\"])}\r\n                alt=\"\"\r\n                width=\"26px\"\r\n                height=\"26px\"\r\n                style={{ marginRight: \"10px\" }}\r\n              />\r\n            }\r\n            suffix={\r\n              <AiOutlineMinusCircle\r\n                style={{\r\n                  color: \"red\",\r\n                  fontSize: \"30px\",\r\n                  width: \"40px\",\r\n                  marginRight: \"-10px\",\r\n                }}\r\n                onClick={() => arrayHelpers.remove(indexv)}\r\n              />\r\n            }\r\n            type=\"text\"\r\n            label={`Link`}\r\n            value={v[\"link\"]}\r\n            key={indexv}\r\n          />\r\n        </FormItem>\r\n      ));\r\n    }\r\n    return (\r\n      <div>\r\n        <FormItem label={this.props.label}>\r\n          {formItems}\r\n          {availableSocialMediaCategoryList &&\r\n            availableSocialMediaCategoryList.length !== 0 && (\r\n              <DrawerWrapperRenderer>\r\n                <div\r\n                  style={{ width: \"100%\", marginTop: \"15px\" }}\r\n                  align=\"left\"\r\n                  onClick={this.showDrawer}\r\n                >\r\n                  {!drawerOpenState && (\r\n                    <Flex>\r\n                      <Flex.Item style={{ width: \"fit-content\", flex: 0 }}>\r\n                        <AiOutlinePlusCircle\r\n                          size={26}\r\n                          style={{ color: \"white\" }}\r\n                        />\r\n                      </Flex.Item>\r\n                      <Flex.Item style={{ flex: 4 }}>\r\n                        <AddSocialMedia>Add Social Media</AddSocialMedia>\r\n                      </Flex.Item>\r\n                    </Flex>\r\n                  )}\r\n                </div>\r\n                <Drawer\r\n                  placement=\"left\"\r\n                  closable={false}\r\n                  onClose={this.onClose}\r\n                  visible={this.state.visible}\r\n                  getContainer={false}\r\n                  style={{ position: \"absolute\" }}\r\n                >\r\n                  <div style={{ width: \"100%\", overflowX: \"scroll\" }}>\r\n                    <Flex\r\n                      justify=\"left\"\r\n                      style={{ width: \"fit-content\", marginTop: \"13px\" }}\r\n                    >\r\n                      <AiOutlineCloseCircle\r\n                        onClick={this.onClose}\r\n                        style={{ color: \"#4643D3\", marginRight: \"10px\" }}\r\n                        size={26}\r\n                      />\r\n\r\n                      {availableSocialMediaCategoryList.map((socia, key) => (\r\n                        <img\r\n                          src={socia && socia.image && socia.image.url}\r\n                          alt=\"\"\r\n                          width=\"26px\"\r\n                          height=\"26px\"\r\n                          style={{ marginRight: \"10px\" }}\r\n                          onClick={(e) => this.socialClickHandler(socia._id)}\r\n                        />\r\n                      ))}\r\n                    </Flex>\r\n                  </div>\r\n                </Drawer>\r\n              </DrawerWrapperRenderer>\r\n            )}\r\n        </FormItem>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDynamicFieldSet.propTypes = {\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  values: PropTypes.array,\r\n  keys: PropTypes.array,\r\n  setload: PropTypes.func,\r\n  buttonText: PropTypes.string,\r\n  arrayHelpers: PropTypes.object,\r\n};\r\n\r\nexport default withTheme(DynamicFieldSet);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form } from \"antd\";\r\nimport Select from \"./Select\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst RenderSelect = (props) => {\r\n  const {\r\n    input,\r\n    label,\r\n    type,\r\n    children,\r\n    mode,\r\n    meta: { touched, error },\r\n  } = props;\r\n  let validateStatus = \"\";\r\n  if (touched && error) {\r\n    validateStatus = \"error\";\r\n  }\r\n\r\n  const onChange = (value) => {\r\n    const { formik, name } = props;\r\n    formik.handleChange({ target: { value, name } });\r\n  };\r\n\r\n  return (\r\n    <FormItem label={label} validateStatus={validateStatus} help={error}>\r\n      <div>\r\n        <Select\r\n          mode={mode}\r\n          showSearch\r\n          optionFilterProp=\"children\"\r\n          placeholder={label}\r\n          filterOption={(input, option) =>\r\n            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n            0\r\n          }\r\n          {...input}\r\n          type={type}\r\n          onChange={onChange}\r\n        >\r\n          {children}\r\n        </Select>\r\n      </div>\r\n    </FormItem>\r\n  );\r\n};\r\n\r\nRenderSelect.propTypes = {\r\n  formik: PropTypes.object.isRequired,\r\n  input: PropTypes.object,\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  meta: PropTypes.object,\r\n  name: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default RenderSelect;\r\n","import { Select } from 'antd';\r\n\r\nconst { Option: ADOption } = Select;\r\n\r\nexport default ADOption;\r\n","import React, { useState, useRef } from \"react\";\r\nimport {\r\n  FieldAdapter as Field,\r\n  phoneNumber,\r\n  required,\r\n  minLength,\r\n  validate,\r\n  maxLength,\r\n} from \"../form\";\r\nimport { withFormik } from \"formik\";\r\nimport { FaImages, FaPhotoVideo } from \"react-icons/fa\";\r\nimport { Flex } from \"antd-mobile\";\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport { WhiteSpace } from \"../look/mobile\";\r\nimport {\r\n  Input,\r\n  Form,\r\n  Alert,\r\n  InputArea,\r\n  RenderUpload,\r\n  Button,\r\n} from \"../look/web\";\r\n\r\nconst ProfileFormContainer = styled.div`\r\n  /* color: white;\r\n  padding: 50px 26px 32px;\r\n  opacity: 0.88;\r\n  border-radius: 20px;\r\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.89);\r\n  background-color: transparent; */\r\n`;\r\n\r\nconst Heading = styled.h1`\r\n  /* font-family: CircularStdMedium;\r\n  font-size: 30px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.33;\r\n  letter-spacing: normal;\r\n  text-align: center;\r\n  color: #ffffff; */\r\n`;\r\n\r\nconst LargeHeadingComponent = styled.div`\r\n  /* font-family: CircularStd;\r\n  font-size: 36px;\r\n  font-weight: 900; */\r\n`;\r\n\r\nconst InputStylized = styled(Input)`\r\n  border: solid 2px #d8d8d8;\r\n  border-radius: 7px;\r\n  font-family: Circular Std Medium;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  height: 60px !important;\r\n  padding: 0 20px;\r\n  font-size: 15px;\r\n  /* background: transparent;\r\n  caret-color: white;\r\n  color: white;\r\n   */\r\n`;\r\n\r\nconst InputAreaStylized = styled(InputArea)`\r\n  background: white !important;\r\n  border-radius: 7px;\r\n  border: solid 2px #d8d8d8;\r\n  height: 120px !important;\r\n  font-size: 15px;\r\n  padding: 10px 20px !important;\r\n  caret-color: black;\r\n  color: black;\r\n  font-family: Circular Std Medium;\r\n  word-spacing: -3px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  :focus {\r\n    caret-color: black;\r\n    color: black;\r\n    background-color: white !important;\r\n  }\r\n  :-webkit-autofill,\r\n  :-webkit-autofill:hover,\r\n  :-webkit-autofill:focus {\r\n    transition: background-color 5000s ease-in-out 0s;\r\n    -webkit-text-fill-color: black;\r\n    caret-color: black;\r\n    color: black;\r\n    background-color: white !important;\r\n  }\r\n`;\r\n\r\nconst RenderUploadStylized = styled(RenderUpload)`\r\n  width: 140px;\r\n  height: 140px;\r\n  border-radius: 30px;\r\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\r\n  background-color: #ebebeb;\r\n  overflow: hidden;\r\n  margin: auto;\r\n  .ant-upload-picture-card-wrapper {\r\n    width: 100%;\r\n    height: 100%;\r\n    .ant-upload-list-picture-card {\r\n      width: 100%;\r\n      height: 100%;\r\n      .ant-upload-list-picture-card-container {\r\n        margin: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: #ebebeb;\r\n        .ant-upload-list-item-done {\r\n          padding: 0 !important;\r\n          margin: 0 !important;\r\n        }\r\n      }\r\n      .ant-upload-select-picture-card {\r\n        margin: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: #ebebeb;\r\n        border: 0 !important;\r\n\r\n        .ant-upload-text {\r\n          padding: 10px;\r\n          font-family: Circular Std Medium;\r\n          font-weight: normal;\r\n          font-stretch: normal;\r\n          font-style: normal;\r\n          font-size: 20px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst profileFormSchema = {\r\n  title: [required, minLength(5), maxLength(50)],\r\n  thumbnail: [required],\r\n  // media: [required],\r\n  link: [required],\r\n};\r\n\r\nconst ProfileForm = (props) => {\r\n  const addBlockFormRef = useRef(null);\r\n  const [load, setload] = useState(false);\r\n  const { values, handleSubmit, errors } = props;\r\n\r\n  return (\r\n    <ProfileFormContainer>\r\n      <Form name=\"addBlock\" ref={addBlockFormRef} onFinish={handleSubmit}>\r\n        <Field\r\n          name=\"title\"\r\n          component={InputAreaStylized}\r\n          type=\"text\"\r\n          label={\"Name of The Block\"}\r\n          placeholder=\"Name of The Block\"\r\n          value={values.title}\r\n        />\r\n\r\n        <WhiteSpace size=\"xl\" />\r\n        <Field\r\n          name=\"link\"\r\n          component={InputStylized}\r\n          type=\"text\"\r\n          label={\"Paste a Link\"}\r\n          placeholder=\"Paste a Link\"\r\n          value={values.link}\r\n        />\r\n        <WhiteSpace size=\"xl\" />\r\n\r\n        <Flex justify=\"between\">\r\n          <Flex.Item>\r\n            <Field\r\n              name=\"thumbnail\"\r\n              component={RenderUploadStylized}\r\n              type=\"media\"\r\n              setload={setload}\r\n              label={\r\n                <React.Fragment>\r\n                  <FaImages size={30} />\r\n                  <br />\r\n                  Upload Thumbnail\r\n                </React.Fragment>\r\n              }\r\n              value={values.thumbnail}\r\n            />\r\n          </Flex.Item>\r\n          {/* <Flex.Item>\r\n            <Field\r\n              name=\"media\"\r\n              component={RenderUploadStylized}\r\n              type=\"media\"\r\n              setload={setload}\r\n              label={\r\n                <React.Fragment>\r\n                  <FaPhotoVideo size={30} />\r\n                  <br />\r\n                  Upload Media\r\n                </React.Fragment>\r\n              }\r\n              value={values.media}\r\n            />\r\n          </Flex.Item> */}\r\n        </Flex>\r\n        <WhiteSpace size=\"xl\" />\r\n        <Button type=\"primary\" block size=\"large\" htmlType=\"submit\">\r\n          Go Live\r\n        </Button>\r\n      </Form>\r\n    </ProfileFormContainer>\r\n  );\r\n};\r\n\r\nconst ProfileFormWithFormik = withFormik({\r\n  enableReinitialize: true,\r\n  mapPropsToValues: ({ blockData }) => {\r\n    return {\r\n      thumbnail: (blockData && blockData.thumbnail) || null,\r\n      title: (blockData && blockData.title) || \"\",\r\n      link: (blockData && blockData.link) || \"\",\r\n      price: (blockData && blockData.price) || 0,\r\n      question: (blockData && blockData.question) || \"\",\r\n      media: (blockData && blockData.media) || null,\r\n    };\r\n  },\r\n\r\n  // handleSubmit: (values, { props: { onSubmit } }) => {\r\n  // },\r\n  handleSubmit: (values, { props: { onSubmit } }) => {\r\n    let modifiedValues = values;\r\n    modifiedValues.thumbnail = values.thumbnail && values.thumbnail._id;\r\n    modifiedValues.media = values.media && values.media._id;\r\n    console.log(\"handleSubmit\", values);\r\n    onSubmit(modifiedValues);\r\n  },\r\n  // validator:{() => ({})}\r\n  validate: (values) => validate(values, profileFormSchema),\r\n  displayName: \"ProfileForm\", // helps with React DevTools\r\n});\r\n\r\nexport default withTheme(ProfileFormWithFormik(ProfileForm));\r\n","import React, { Component } from \"react\";\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport { message } from \"antd\";\r\nimport { WhiteSpace } from \"../look/mobile\";\r\nimport PageLayout from \"../look/PageLayout\";\r\nimport BlockForm from \"./BlockForm\";\r\nimport { withAddUserBlock } from \"./BlockOperations\";\r\n\r\nconst PageHead = styled.h1`\r\n  font-family: Circular Std Black;\r\n  font-size: 22px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 0.86;\r\n  letter-spacing: normal;\r\n  text-align: center;\r\n  color: #000000;\r\n  word-spacing: -8px;\r\n`;\r\n\r\nconst FormWrapper = styled.div`\r\n  color: ${(props) => props.theme.textColor};\r\n  position: relative;\r\n`;\r\n\r\nconst BlockAddView = (props) => {\r\n  const { postBlock, history, match } = props;\r\n  console.log(\"blockadd\", props);\r\n  const onSubmit = async (values) => {\r\n    let modifiedValues = values;\r\n    modifiedValues.blockCategory =\r\n      match && match.params && match.params.blockCategoryId;\r\n    console.log(\"addBlock\", modifiedValues);\r\n    try {\r\n      message.loading({\r\n        content: \"Adding Card ...\",\r\n        duration: 0,\r\n      });\r\n      const sending = await postBlock(modifiedValues);\r\n      console.log(sending);\r\n      message.destroy();\r\n      if (sending.status === true) {\r\n        message.success({\r\n          duration: 2,\r\n          content: \"Card Added\",\r\n        });\r\n        history.push(\"/\");\r\n      } else {\r\n        message.error({\r\n          duration: 2,\r\n          content: sending.data.message,\r\n        });\r\n      }\r\n      return sending;\r\n    } catch (e) {\r\n      message.destroy();\r\n      console.log(\"error\", e);\r\n      if (e && e.data && e.data.message) {\r\n        message.error({\r\n          duration: 2,\r\n          content: e && e.data && e.data.message,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <PageLayout>\r\n      <WhiteSpace size=\"xl\" />\r\n      <PageHead>Add a new card</PageHead>\r\n      <WhiteSpace size=\"xl\" />\r\n      <WhiteSpace size=\"xl\" />\r\n      <BlockForm onSubmit={onSubmit} />\r\n    </PageLayout>\r\n  );\r\n};\r\nexport default withAddUserBlock(withTheme(BlockAddView));\r\n","import React, { Component } from \"react\";\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport { message } from \"antd\";\r\nimport { WhiteSpace } from \"../look/mobile\";\r\nimport PageLayout from \"../look/PageLayout\";\r\nimport BlockForm from \"./BlockForm\";\r\nimport { withEditUserBlock, withBlockById } from \"./BlockOperations\";\r\n\r\nconst PageHead = styled.h1`\r\n  font-family: Circular Std Black;\r\n  font-size: 22px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 0.86;\r\n  letter-spacing: normal;\r\n  text-align: center;\r\n  color: #000000;\r\n  word-spacing: -8px;\r\n`;\r\n\r\nconst FormWrapper = styled.div`\r\n  color: ${(props) => props.theme.textColor};\r\n  position: relative;\r\n`;\r\n\r\nconst BlockEditView = (props) => {\r\n  const { putBlock, history, match, blockByUsername } = props;\r\n  console.log(\"blockedit\", props);\r\n  const onSubmit = async (values) => {\r\n    let modifiedValues = values;\r\n    console.log(\"editBlock\", modifiedValues);\r\n    try {\r\n      message.loading({\r\n        content: \"Editing Card ...\",\r\n        duration: 0,\r\n      });\r\n      const sending = await putBlock(modifiedValues);\r\n      console.log(sending);\r\n      message.destroy();\r\n      if (sending.status === true) {\r\n        message.success({\r\n          duration: 2,\r\n          content: \"Card Updated\",\r\n        });\r\n        history.push(\"/\");\r\n      } else {\r\n        message.error({\r\n          duration: 2,\r\n          content: sending.data.message,\r\n        });\r\n      }\r\n      return sending;\r\n    } catch (e) {\r\n      message.destroy();\r\n      console.log(\"error\", e);\r\n      if (e && e.data && e.data.message) {\r\n        message.error({\r\n          duration: 2,\r\n          content: e && e.data && e.data.message,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <PageLayout>\r\n      <WhiteSpace size=\"xl\" />\r\n      <PageHead>Add a new card</PageHead>\r\n      <WhiteSpace size=\"xl\" />\r\n      <WhiteSpace size=\"xl\" />\r\n      <BlockForm onSubmit={onSubmit} blockData={blockByUsername} />\r\n    </PageLayout>\r\n  );\r\n};\r\nexport default withBlockById(withEditUserBlock(withTheme(BlockEditView)));\r\n","import React, { useState } from \"react\";\r\nimport { withFormik, FieldArray } from \"formik\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { Flex } from \"antd-mobile\";\r\n// import { Persist } from 'formik-persist'\r\n\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport * as Yup from \"yup\";\r\nimport { FieldAdapter as Field } from \"../../form\";\r\nimport {\r\n  Input,\r\n  Form,\r\n  Alert,\r\n  InputArea,\r\n  RenderUpload,\r\n  Button as WebButton,\r\n  RenderDynamicFieldSocial,\r\n} from \"../../look/web\";\r\nimport { Button, WhiteSpace } from \"../../look/mobile\";\r\n\r\nconst ProfileFormContainer = styled.div`\r\n  color: white;\r\n  padding: 50px 26px 32px;\r\n  opacity: 1;\r\n  border-radius: 20px;\r\n  /* box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.89); */\r\n  background-color: transparent;\r\n  .ant-form-item-extra {\r\n    color: white !important;\r\n  }\r\n`;\r\n\r\nconst Heading = styled.h1`\r\n  font-family: Circular Std Medium;\r\n  font-size: 30px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.33;\r\n  letter-spacing: normal;\r\n  text-align: center;\r\n  color: #ffffff;\r\n`;\r\n\r\nconst LargeHeadingComponent = styled.div`\r\n  font-family: CircularStd;\r\n  font-size: 36px;\r\n  font-weight: 900;\r\n`;\r\n\r\nconst InputStylized = styled(Input)`\r\n  background: transparent !important;\r\n  border-radius: 7px;\r\n  border: solid 2px #d8d8d8;\r\n  height: 60px !important;\r\n  font-size: 15px;\r\n  padding: 0 20px;\r\n  caret-color: white;\r\n  color: white !important;\r\n  font-family: Circular Std Medium;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  :focus {\r\n    caret-color: white;\r\n    color: white;\r\n    background-color: transparent !important;\r\n  }\r\n  :-webkit-autofill,\r\n  :-webkit-autofill:hover,\r\n  :-webkit-autofill:focus {\r\n    transition: background-color 5000s ease-in-out 0s;\r\n    -webkit-text-fill-color: white;\r\n    caret-color: white;\r\n    color: white;\r\n    background-color: transparent !important;\r\n  }\r\n`;\r\n\r\nconst UsernameInputStylized = styled(Input)`\r\n  display: inline;\r\n  background: transparent !important;\r\n  border-radius: 7px;\r\n  border: solid 2px #d8d8d8;\r\n  height: 40px !important;\r\n  font-size: 15px;\r\n  padding: 0 10px;\r\n  caret-color: white;\r\n  color: white;\r\n  font-family: Circular Std Medium;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  :focus {\r\n    caret-color: white;\r\n    color: white;\r\n    background-color: transparent !important;\r\n  }\r\n  :-webkit-autofill,\r\n  :-webkit-autofill:hover,\r\n  :-webkit-autofill:focus {\r\n    transition: background-color 5000s ease-in-out 0s;\r\n    -webkit-text-fill-color: white;\r\n    caret-color: white;\r\n    color: white;\r\n    background-color: transparent !important;\r\n  }\r\n`;\r\n\r\nconst InputAreaStylized = styled(InputArea)`\r\n  background: transparent !important;\r\n  border-radius: 7px;\r\n  border: solid 2px #d8d8d8;\r\n  height: 120px !important;\r\n  font-size: 15px;\r\n  padding: 10px 20px !important;\r\n  caret-color: white;\r\n  color: white;\r\n  font-family: Circular Std Medium;\r\n  word-spacing: -3px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  :focus {\r\n    caret-color: white;\r\n    color: white;\r\n    background-color: transparent !important;\r\n  }\r\n  :-webkit-autofill,\r\n  :-webkit-autofill:hover,\r\n  :-webkit-autofill:focus {\r\n    transition: background-color 5000s ease-in-out 0s;\r\n    -webkit-text-fill-color: white;\r\n    caret-color: white;\r\n    color: white;\r\n    background-color: transparent !important;\r\n  }\r\n`;\r\n\r\nconst RenderUploadStylized = styled(RenderUpload)`\r\n  width: 140px;\r\n  height: 140px;\r\n  border-radius: 30px;\r\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\r\n  background-color: #ffffff;\r\n  overflow: hidden;\r\n  .ant-upload-picture-card-wrapper {\r\n    width: 100%;\r\n    height: 100%;\r\n    .ant-upload-list-picture-card {\r\n      width: 100%;\r\n      height: 100%;\r\n      .ant-upload-list-picture-card-container {\r\n        margin: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: white;\r\n        .ant-upload-list-item-list-type-picture-card{\r\n          padding:0 !important;\r\n        }\r\n        .ant-upload-list-item-done {\r\n          padding: 0 !important;\r\n          margin: 0 !important;\r\n        }\r\n      }\r\n      .ant-upload-select-picture-card {\r\n        margin: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: white;\r\n        border: 0 !important;\r\n\r\n        .ant-upload-text {\r\n          font-family: Circular Std Medium;\r\n          font-weight: normal;\r\n          font-stretch: normal;\r\n          font-style: normal;\r\n          font-size: 15px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UsernamePrefix = styled.p`\r\n  color: white;\r\n  font-family: Circular Std Medium;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  word-spacing: -3px;\r\n  margin-top:-4px;\r\n  font-size:15px;\r\n  text-align:right;\r\n`;\r\nconst profileFormSchema = Yup.object().shape({\r\n  userProfile: Yup.object().shape({\r\n    username: Yup.string().required(\"Required\"),\r\n    bio: Yup.string().required(\"Required\"),\r\n    firstName: Yup.string().required(\"Required\"),\r\n  }),\r\n});\r\n\r\nconst ProfileForm = (props) => {\r\n  const [load, setload] = useState(false);\r\n  const { values, handleSubmit, socialMediaCategoryList } = props;\r\n  console.log(\"form values:\", values, socialMediaCategoryList);\r\n  return (\r\n    <ProfileFormContainer>\r\n      <Form name=\"profile\" onFinish={handleSubmit}>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"-20px\",\r\n            left: \"50%\",\r\n            transform: \"translateX(-70px)\",\r\n          }}\r\n        >\r\n          <Field\r\n            name=\"userProfile.profileImage\"\r\n            component={RenderUploadStylized}\r\n            type=\"image\"\r\n            setload={setload}\r\n            label={\"Upload Your Photo\"}\r\n            value={values.userProfile.profileImage}\r\n          >\r\n            <Button\r\n              style={{\r\n                position: \"absolute\",\r\n                bottom: \"-10px\",\r\n                right: \"-10px\",\r\n                zIndex: \"10\",\r\n                width: \"30px\",\r\n                height: \"30px\",\r\n                borderRadius: \"30px\",\r\n                padding: \"0\",\r\n                color:'#4643D3'\r\n              }}\r\n            >\r\n              <AiFillEdit\r\n                size=\"20\"\r\n                style={{ position: \"absolute\", top: \"4px\", left: \"4px\" }}\r\n              />\r\n            </Button>\r\n          </Field>\r\n        </div>\r\n        <WhiteSpace size=\"md\" />\r\n        <WhiteSpace size=\"md\" />\r\n        <Flex type=\"wrap\">\r\n          <Flex.Item style={{ flex: 2 }}>\r\n            {\" \"}\r\n            <UsernamePrefix> oneplace.com/</UsernamePrefix>\r\n          </Flex.Item>\r\n          <Flex.Item style={{ flex: 2, marginLeft:'5px' }}>\r\n            <Field\r\n              name=\"userProfile.username\"\r\n              component={UsernameInputStylized}\r\n              type=\"text\"\r\n              // prefix=\"www.oneplace.me/\"\r\n              label={\"Username\"}\r\n              placeholder=\"Username\"\r\n              value={values.userProfile.username}\r\n            />\r\n          </Flex.Item>\r\n        </Flex>\r\n\r\n        <Field\r\n          name=\"userProfile.firstName\"\r\n          component={InputStylized}\r\n          type=\"text\"\r\n          label={\"First Name\"}\r\n          placeholder=\"First Name\"\r\n          value={values.userProfile.firstName}\r\n        />\r\n\r\n        <Field\r\n          name=\"userProfile.lastName\"\r\n          component={InputStylized}\r\n          type=\"text\"\r\n          label={\"Last Name\"}\r\n          placeholder=\"Last Name\"\r\n          value={values.userProfile.lastName}\r\n        />\r\n\r\n        <Field\r\n          name=\"userProfile.bio\"\r\n          component={InputAreaStylized}\r\n          type=\"textarea\"\r\n          label={\"Tell a few words about yourself \"}\r\n          placeholder=\"Tell a few words about yourself \"\r\n          value={values.userProfile.bio}\r\n        />\r\n        <FieldArray\r\n          name=\"userProfile.socialMediaLinks\"\r\n          render={(arrayHelpers) => (\r\n            <RenderDynamicFieldSocial\r\n              // quizItem={values}\r\n              arrayHelpers={arrayHelpers}\r\n              values={values.userProfile.socialMediaLinks}\r\n              name=\"userProfile.socialMediaLinks\"\r\n              // quizId={values.id}\r\n              // addSection={addSection}\r\n              // deleteSection={deleteSection}\r\n              // submitQuestion={submitQuestion}\r\n              // deleteQuestion={deleteQuestion}\r\n              // submitSection={submitSection}\r\n              socialMediaCategoryList={socialMediaCategoryList}\r\n            />\r\n          )}\r\n          socialVal={values.userProfile.socialMediaLinks}\r\n          // handleSections={handleSections}\r\n        />\r\n        <WebButton ghost htmlType=\"submit\" size=\"large\" block>\r\n          Submit\r\n        </WebButton>\r\n        {/* <Persist name=\"profile-edit-form\" /> */}\r\n      </Form>\r\n    </ProfileFormContainer>\r\n  );\r\n};\r\n\r\nconst ProfileFormWithFormik = withFormik({\r\n  enableReinitialize: false,\r\n  mapPropsToValues: ({ user }) => {\r\n    function getSocialMediaLinks(socialM) {\r\n      return {\r\n        category: (socialM && socialM.category && socialM.category._id) || \"\",\r\n        link: socialM && socialM.link,\r\n      };\r\n    }\r\n\r\n    return {\r\n      userProfile: {\r\n        username: user && user.username,\r\n        profileImage:\r\n          (user && user.userProfile && user.userProfile.profileImage) || {},\r\n        firstName:\r\n          (user && user.userProfile && user.userProfile.firstName) || \"\",\r\n        lastName: (user && user.userProfile && user.userProfile.lastName) || \"\",\r\n        bio: (user && user.userProfile && user.userProfile.bio) || \"\",\r\n        socialMediaLinks:\r\n          (user &&\r\n            user.userProfile &&\r\n            user.userProfile.socialMediaLinks &&\r\n            user.userProfile.socialMediaLinks.map(getSocialMediaLinks)) ||\r\n          [],\r\n      },\r\n    };\r\n  },\r\n\r\n  handleSubmit(values, { props: { onSubmit, setValues } }) {\r\n    console.log(\"handleSubmit\", values);\r\n    let modifiedValues = values;\r\n    modifiedValues.userProfile.profileImage =\r\n      (values.userProfile &&\r\n        values.userProfile.profileImage &&\r\n        values.userProfile.profileImage._id) ||\r\n      null;\r\n    onSubmit(modifiedValues.userProfile);\r\n  },\r\n  validationSchema: profileFormSchema,\r\n  // validate: (values) => validate(values, profileFormSchema),\r\n  displayName: \"ProfileForm\", // helps with React DevTools\r\n});\r\n\r\nexport default withTheme(ProfileFormWithFormik(ProfileForm));\r\n","import React from \"react\";\r\n// import Avatar from \"react-avatar\";\r\n// import { Flex } from \"antd-mobile\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { message } from \"antd\";\r\n\r\nimport styled, { withTheme } from \"styled-components\";\r\n\r\n// import Loadable from \"react-loadable\";\r\n// import {\r\n//   AiFillFacebook,\r\n//   AiFillInstagram,\r\n//   AiFillLinkedin,\r\n//   AiOutlineWhatsApp,\r\n//   AiFillEdit,\r\n//   AiOutlinePlusCircle,\r\n// } from \"react-icons/ai\";\r\nimport { WhiteSpace } from \"../../look/mobile\";\r\nimport ProfileForm from \"./ProfileForm\";\r\n\r\nconst PageHead = styled.h2`\r\n  color: ${(props) => props.theme.textColor};\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-family: Circular Std Medium;\r\n  word-spacing: -3px;\r\n  /* font-weight: normal; */\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  font-size:22px;\r\n`;\r\n\r\nconst FormWrapper = styled.div`\r\n  color: ${(props) => props.theme.textColor};\r\n  position: relative;\r\n  height: fit-content;\r\n  margin-top: 40px;\r\n  background-color: #4643D3;\r\n`;\r\n\r\nconst ProfileEditView = (props) => {\r\n  const { user, onSubmit, socialMediaCategoryList } = props;\r\n  // setAccessTokene('');\r\n  console.log('profileedit', props);\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: \"20px 0 0 0\",\r\n        width: \"100%\",\r\n        minHeight: \"100vh\",\r\n        position: \"relative\",\r\n        display: \"grid\",\r\n        placeItems: \"center\",\r\n        background: \"white\",\r\n        overflowY: \"scroll\",\r\n      }}\r\n    >\r\n      {\" \"}\r\n      <div\r\n        style={{\r\n          maxWidth: \"500px\",\r\n          minHeight: \"100%\",\r\n          height: \"fit-content\",\r\n          width: \"100%\",\r\n          // overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <PageHead>OnePlace Universe</PageHead>\r\n        <WhiteSpace size=\"xl\" />\r\n        <div align=\"center\">\r\n          <img\r\n            src=\"https://onelinkie.s3.ap-south-1.amazonaws.com/45d5377d-4542-44b1-b6a5-38e8df2ef207-profile_edit.png\"\r\n            width=\"80%\"\r\n            alt=\"login_banner\"\r\n          />\r\n        </div>\r\n        <WhiteSpace size=\"xl\" />\r\n        <FormWrapper>\r\n          <img\r\n            style={{\r\n              width: \"100%\",\r\n              position: \"absolute\",\r\n              top: \"-14px\",\r\n              left: 0,\r\n              right: 0,\r\n              zIndex: \"10\",\r\n            }}\r\n            src=\"https://onelinkie.s3.ap-south-1.amazonaws.com/7b5e7196-b731-4b2c-a067-9caf4bda0d75-group-219%403x.png\"\r\n            alt=\"\"\r\n          />\r\n          <div\r\n            style={{\r\n              // top: \"0\",\r\n              // left: \"0\",\r\n              position: \"relative\",\r\n              // right: \"0\",\r\n              background: \"transparent\",\r\n              padding: \"80px 20px 0\",\r\n              zIndex: \"12\",\r\n            }}\r\n          >\r\n            <ProfileForm\r\n              user={user}\r\n              onSubmit={onSubmit}\r\n              socialMediaCategoryList={socialMediaCategoryList}\r\n            />\r\n          </div>\r\n        </FormWrapper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTheme(ProfileEditView);\r\n","import React from \"react\";\r\n// import Avatar from \"react-avatar\";\r\n// import { Flex } from \"antd-mobile\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { message } from \"antd\";\r\n\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\n// import { ApiContext, ProfileApiUrls } from \"../../api\";\r\nimport { withCurrentUser } from \"../../auth/Auth\";\r\n// import { setAccessTokene, setRefreshTokene } from \"../../store/appReducer\";\r\n\r\nimport {\r\n  withAddProfile,\r\n  withSocialMediaCategories,\r\n  withAddSocialMedia,\r\n} from \"../ProfileOperations\";\r\nimport ProfileEditView from \"../components/ProfileEditView\";\r\n\r\nconst PageHead = styled.h2`\r\n  color: ${(props) => props.theme.textColor};\r\n  text-align: center;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst FormWrapper = styled.div`\r\n  color: ${(props) => props.theme.textColor};\r\n  position: relative;\r\n  height: fit-content;\r\n  margin-top: 40px;\r\n  background-color: #211e28;\r\n`;\r\n\r\nconst ProfileEdit = (props) => {\r\n  const {\r\n    history,\r\n    currentUser,\r\n    postUserProfileMutation,\r\n    putUserProfileMutation,\r\n    socialMediaCategoryList,\r\n    postAddSocialMedia,\r\n  } = props;\r\n  // setAccessTokene('');\r\n\r\n  var profileMutation;\r\n\r\n  if (currentUser && currentUser.userProfile) {\r\n    profileMutation = putUserProfileMutation;\r\n  } else {\r\n    profileMutation = postUserProfileMutation;\r\n  }\r\n  const user = currentUser;\r\n\r\n  const handleSocialLinksSubmission = async (socialMediaLinks) => {\r\n    // var socialSending = [];\r\n\r\n    const promises = await socialMediaLinks.map(async (socia, key) => {\r\n      const responseSend = await postAddSocialMedia(socia);\r\n      console.log(\"responseSocialSEnd\", responseSend);\r\n      return (\r\n        responseSend &&\r\n        responseSend.socialMediaLink &&\r\n        responseSend.socialMediaLink._id\r\n      );\r\n    });\r\n    const socialSending = await Promise.all(promises)\r\n    return socialSending;\r\n  };\r\n\r\n  const onSubmit = async (values) => {\r\n    console.log(\"updateProfile\", values);\r\n    let profileValues = values;\r\n    const socialMediaLinks = profileValues.socialMediaLinks;\r\n    console.log(\r\n      \"onSubmitProfileValues\",\r\n      profileValues,\r\n      socialMediaLinks,\r\n      values\r\n    );\r\n    try {\r\n      message.loading({\r\n        content: \"Updating Profile Info\",\r\n        duration: 0,\r\n      });\r\n      const socialSending = await handleSocialLinksSubmission(socialMediaLinks);\r\n      console.log(\"socialSendingLoop\", socialSending);\r\n      const profileSubmissionObj = {\r\n        ...profileValues,\r\n        socialMediaLinks: socialSending,\r\n      };\r\n      // const profileSubmissionObj = {\r\n      //   bio: \"I am a web developer\",\r\n      //   firstName: \"Lokesh\",\r\n      //   lastName: \"Rana\",\r\n      //   profileImage: null,\r\n      //   socialMediaLinks: [\"5fe9cab0ebe9b40017220f90\"],\r\n      //   username: \"lokeshrana9999\",\r\n      // };\r\n      // // const sending = null;\r\n      console.log(\"profileSubmissionObj\", profileSubmissionObj);\r\n      const sending = await profileMutation(profileSubmissionObj);\r\n      message.destroy();\r\n      if (sending) {\r\n        console.log(\"sendingsending\", sending);\r\n        message.success({\r\n          duration: 2,\r\n          content: \"Profile Updated\",\r\n        });\r\n        history.push(\"/\");\r\n      } else {\r\n        console.log(\"elsesocial\", socialSending);\r\n        socialSending &&\r\n          socialSending.data &&\r\n          sending &&\r\n          sending.data &&\r\n          message.error({\r\n            duration: 2,\r\n            content: `${sending.data.message}`,\r\n          });\r\n      }\r\n      return sending;\r\n    } catch (e) {\r\n      message.destroy();\r\n      console.log(\"error\", e);\r\n      e &&\r\n        e.data &&\r\n        message.error({\r\n          duration: 2,\r\n          content: e.data.message,\r\n        });\r\n    }\r\n  };\r\n\r\n  console.log(\"currentUser\", props);\r\n  return (\r\n    <ProfileEditView\r\n      onSubmit={onSubmit}\r\n      user={currentUser}\r\n      socialMediaCategoryList={socialMediaCategoryList}\r\n    />\r\n  );\r\n};\r\n\r\n// const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n// const mapStateToProps = (state /*, ownProps*/) => {\r\n//   console.log(\"mapstatetoprops\", state);\r\n//   return {\r\n//     accessToken: state.app.accessToken,\r\n//     refreshToken: state.app.refreshToken,\r\n//   };\r\n// };\r\n\r\nexport default withCurrentUser(\r\n  withSocialMediaCategories(withAddProfile(withAddSocialMedia(ProfileEdit)))\r\n);\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useGet, useMutate } from \"restful-react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { ApiContext, ProfileApiUrls } from \"../../api\";\r\nimport { PageLoader } from \"../look/mobile\";\r\nimport { setAccessTokene, setRefreshTokene } from \"../../store/appReducer\";\r\n\r\n// import authentication from '@gqlapp/authentication-client-react';\r\n\r\n// import CURRENT_USER_QUERY from '../graphql/CurrentUserQuery.graphql';\r\nconst withCurrentUserProfile = (Component) => {\r\n  const WithUserInner = ({ ...props }) => {\r\n    const { history, refreshToken, setAccessTokene, accessToken } = props;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n    const apiUrl = defaultApiUrl + ProfileApiUrls.getCurrentUserProfile;\r\n    var currentUserProfileLoading = true;\r\n\r\n    var currentUserProfileData;\r\n    const { data, loading, error } = useGet({\r\n      path: apiUrl,\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n    currentUserProfileLoading = loading;\r\n    currentUserProfileData = data && data.userProfile;\r\n    console.log(data, loading, error);\r\n\r\n    // if (\r\n    //   !currentUserProfileLoading &&\r\n    //   !currentUserProfileData &&\r\n    //   error &&\r\n    //   error.status === 401\r\n    // ) {\r\n    // }\r\n    return currentUserProfileLoading || !currentUserProfileData ? (\r\n      <PageLoader />\r\n    ) : (\r\n      <Component\r\n        {...props}\r\n        currentUserProfile={currentUserProfileData}\r\n        currentUserProfileLoading={currentUserProfileLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithUserInner);\r\n};\r\n\r\nconst withAddProfile = (Component) => {\r\n  const WithUserInner = ({ ...props }) => {\r\n    const { accessToken, currentUser } = props;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n\r\n    const {\r\n      mutate: postUserProfileMutation,\r\n      loading: postUserProfileLoading,\r\n    } = useMutate({\r\n      verb: \"POST\",\r\n      path: defaultApiUrl + ProfileApiUrls.postUserProfile,\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n    const {\r\n      mutate: putUserProfileMutation,\r\n      loading: putUserProfileLoading,\r\n    } = useMutate({\r\n      verb: \"PUT\",\r\n      path:\r\n        defaultApiUrl +\r\n        ProfileApiUrls.putUserProfile(\r\n          currentUser.userProfile && currentUser.userProfile._id\r\n        ),\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n    // if (\r\n    //   !currentUserLoading &&\r\n    //   !currentUserData &&\r\n    //   error &&\r\n    //   error.status === 401\r\n    // ) {\r\n    // }\r\n    return (\r\n      <Component\r\n        {...props}\r\n        postUserProfileMutation={postUserProfileMutation}\r\n        putUserProfileMutation={putUserProfileMutation}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithUserInner);\r\n};\r\n\r\nconst withAddSocialMedia = (Component) => {\r\n  const WithAddSocialMediaInner = ({ ...props }) => {\r\n    const { accessToken } = props;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n\r\n    const {\r\n      mutate: postAddSocialMedia,\r\n      loading: postAddSocialMediaLoading,\r\n    } = useMutate({\r\n      verb: \"POST\",\r\n      path: defaultApiUrl + ProfileApiUrls.postSocialMediaLinks,\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n    return (\r\n      <Component\r\n        {...props}\r\n        postAddSocialMedia={postAddSocialMedia}\r\n        postAddSocialMediaLoading={postAddSocialMediaLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithAddSocialMediaInner);\r\n};\r\n\r\n\r\n\r\nconst withSocialMediaCategories = (Component) => {\r\n  const WithUserInner = ({ ...props }) => {\r\n    const { history, refreshToken, setAccessTokene, accessToken } = props;\r\n    const defaultApiUrl = useContext(ApiContext);\r\n    const apiUrl = defaultApiUrl + ProfileApiUrls.getSocialMediaCategories;\r\n    const {\r\n      data: socialMediaCategories,\r\n      loading: socialMediaCategoriesLoading,\r\n      error,\r\n    } = useGet({\r\n      path: apiUrl,\r\n      requestOptions: {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      },\r\n    });\r\n    const socialMediaCategoryList =\r\n      socialMediaCategories && socialMediaCategories.socialMediaCategoryList;\r\n    // if (\r\n    //   !currentUserProfileLoading &&\r\n    //   !currentUserProfileData &&\r\n    //   error &&\r\n    //   error.status === 401\r\n    // ) {\r\n    // }\r\n    return socialMediaCategoriesLoading || !socialMediaCategoryList ? (\r\n      <PageLoader />\r\n    ) : (\r\n      <Component\r\n        {...props}\r\n        socialMediaCategoryList={socialMediaCategoryList}\r\n        socialMediaCategoriesLoading={socialMediaCategoriesLoading}\r\n      />\r\n    );\r\n  };\r\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\r\n  const mapStateToProps = (state /*, ownProps*/) => {\r\n    console.log(\"mapstatetoprops\", state);\r\n    return {\r\n      accessToken: state.app.accessToken,\r\n      refreshToken: state.app.refreshToken,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithUserInner);\r\n};\r\n\r\n// const RefreshAccessToken = ({ children,  }) => {\r\n//   const { mutate: refreshAccessToken, loading } = useMutate({\r\n//     verb: \"POST\",\r\n//     path: defaultApiUrl + AuthApiUrls.refreshAccessToken,\r\n//   });\r\n//   const refreshAccessTokenData = refreshAccessToken(refreshToken);\r\n//   console.log(\"refreshAccessToken\", refreshAccessTokenData);\r\n//   return loading && (<PageLoader> <React.Fragment>{children}</React.Fragment></PageLoader>);\r\n// };\r\n\r\n// export default RefreshAccessToken;\r\n\r\n// const hasRole = (role, currentUser) => {\r\n//   return currentUser &&\r\n//     (!role ||\r\n//       (Array.isArray(role) ? role : [role]).indexOf(currentUser.role) >= 0)\r\n//     ? true\r\n//     : false;\r\n// };\r\n\r\n// const withLoadedUser = (Component) => {\r\n//   const WithLoadedUser = ({ currentUserLoading, ...props }) =>\r\n//     currentUserLoading ? null : <Component {...props} />;\r\n\r\n//   WithLoadedUser.propTypes = {\r\n//     currentUser: PropTypes.object,\r\n//     currentUserLoading: PropTypes.bool.isRequired,\r\n//   };\r\n\r\n//   return withCurrentUser(WithLoadedUser);\r\n// };\r\n\r\n// const IfLoggedInComponent = ({\r\n//   currentUser,\r\n//   role,\r\n//   children,\r\n//   elseComponent,\r\n//   refetchCurrentUser,\r\n//   ...restProps\r\n// }) =>\r\n//   hasRole(role, currentUser)\r\n//     ? React.cloneElement(children, {\r\n//         ...restProps,\r\n//       })\r\n//     : elseComponent || null;\r\n// IfLoggedInComponent.propTypes = {\r\n//   currentUser: PropTypes.object,\r\n//   role: PropTypes.oneOfType([\r\n//     PropTypes.arrayOf(PropTypes.string),\r\n//     PropTypes.string,\r\n//   ]),\r\n//   elseComponent: PropTypes.node,\r\n//   children: PropTypes.node,\r\n// };\r\n\r\n// const IfLoggedIn = withLoadedUser(IfLoggedInComponent);\r\n\r\n// const IfNotLoggedInComponent = ({\r\n//   currentUser,\r\n//   children,\r\n//   refetchCurrentUser,\r\n//   ...restProps\r\n// }) =>\r\n//   !currentUser\r\n//     ? React.cloneElement(children, {\r\n//         ...restProps,\r\n//       })\r\n//     : null;\r\n// IfNotLoggedInComponent.propTypes = {\r\n//   currentUser: PropTypes.object,\r\n//   children: PropTypes.node,\r\n// };\r\n\r\n// const IfNotLoggedIn = withLoadedUser(IfNotLoggedInComponent);\r\n\r\n// const withLogout = (Component) =>\r\n//   withApollo(({ client, ...props }) => {\r\n//     const newProps = {\r\n//       ...props,\r\n//       logout: () => authentication.doLogout(client),\r\n//     };\r\n//     return <Component {...newProps} />;\r\n//   });\r\n\r\nexport {\r\n  withAddProfile,\r\n  withCurrentUserProfile,\r\n  withSocialMediaCategories,\r\n  withAddSocialMedia\r\n  //   hasRole,\r\n  //   withLoadedUser,\r\n  //   IfLoggedIn,\r\n  //   IfNotLoggedIn,\r\n  //   withLogout,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Flex } from \"antd-mobile\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"react-avatar\";\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport { WhiteSpace } from \"../look/mobile\";\r\n\r\nconst BlockCardWrapper = styled.div`\r\n  padding: 20px;\r\n  background-color: #2c2c2c;\r\n  height: 107px;\r\n  margin-bottom: 20px;\r\n  border-radius: 7px;\r\n  border: solid 1px #f2f2f2;\r\n  background-color: #f8f8f8;\r\n`;\r\n\r\nconst BlockCardTitle = styled.h2`\r\n  font-family: Circular Std Medium;\r\n  font-size: 17px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.41;\r\n  letter-spacing: normal;\r\n  text-align: left;\r\n  color: #000000;\r\n`;\r\n\r\nconst BlockCardDescription = styled.p`\r\n  font-family: Circular Std Medium;\r\n  font-size: 12px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.58;\r\n  letter-spacing: normal;\r\n  text-align: left;\r\n  color: #000000;\r\n`;\r\n\r\nconst BlockCardAvatarWrapper = styled.div`\r\n  height: 55px;\r\n  width: 55px;\r\n  display: grid;\r\n  place-items: center;\r\n  background: white;\r\n  border-radius: 55px;\r\n  box-shadow: 0 5px 15px 0 rgba(0, 0, 0, 0.09);\r\n`;\r\n\r\nconst BlockCard = (props) => {\r\n  const { blockCategory, key } = props;\r\n  return (\r\n    <Link key={key} to={`/block/add/${blockCategory._id}`}>\r\n      <BlockCardWrapper key={key}>\r\n        <Flex>\r\n          <Flex.Item style={{ flex: 1 }}>\r\n            <div\r\n              style={{\r\n                height: \"100%\",\r\n                width: \"fit-content\",\r\n                display: \"grid\",\r\n                placeItems: \"center\",\r\n              }}\r\n            >\r\n              <BlockCardAvatarWrapper>\r\n                <Avatar\r\n                  size=\"30\"\r\n                  src={\r\n                    blockCategory &&\r\n                    blockCategory.image &&\r\n                    blockCategory.image.url\r\n                  }\r\n                />\r\n              </BlockCardAvatarWrapper>\r\n            </div>\r\n          </Flex.Item>\r\n          <Flex.Item style={{ flex: 3 }}>\r\n            <BlockCardTitle className=\"one-line-limiter\">\r\n              {blockCategory && blockCategory.title}\r\n            </BlockCardTitle>\r\n            <WhiteSpace size=\"sm\" />\r\n            <BlockCardDescription className=\"two-line-limiter\">\r\n              {blockCategory && blockCategory.description}\r\n            </BlockCardDescription>\r\n          </Flex.Item>\r\n        </Flex>\r\n      </BlockCardWrapper>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default withTheme(BlockCard);\r\n","import React, { useContext, useState } from \"react\";\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport { useGet } from \"restful-react\";\r\nimport { WhiteSpace, Loader } from \"../look/mobile\";\r\nimport { ApiContext, BlockApiUrls } from \"../../api\";\r\nimport BlockCard from \"./BlockCard\";\r\n\r\nconst PageHead = styled.h1`\r\n  font-family: Circular Std Black;\r\n  font-size: 22px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 0.86;\r\n  letter-spacing: normal;\r\n  text-align: center;\r\n  color: #000000;\r\n  word-spacing: -8px;\r\n`;\r\n\r\nconst ChooseBlockCategoryView = (props) => {\r\n  const defaultApiUrl = useContext(ApiContext);\r\n  const apiUrl = defaultApiUrl + BlockApiUrls.getBlockCategory;\r\n  const {\r\n    data, \r\n    loading,\r\n  } = useGet({\r\n    path: apiUrl,\r\n  });\r\n  const blockCategoryList = data && data.blockCategoryList;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        minHeight: \"100vh\",\r\n        position: \"relative\",\r\n        display: \"grid\",\r\n        placeItems: \"center\",\r\n        background: \"white\",\r\n      }}\r\n    >\r\n      {\" \"}\r\n      <div\r\n        style={{\r\n          padding: \"20px\",\r\n          maxWidth: \"500px\",\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <PageHead>Add a new card</PageHead>\r\n        <WhiteSpace size=\"xl\" />\r\n        {loading ? (\r\n          <Loader size=\"large\" />\r\n        ) : (\r\n          <div>\r\n            {blockCategoryList && blockCategoryList.length !== 0 ? (\r\n              <div>\r\n                {blockCategoryList.map((blockCat, key) => (\r\n                  <BlockCard blockCategory={blockCat} key={key} />\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <h3>No cards available</h3>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTheme(ChooseBlockCategoryView);\r\n"],"sourceRoot":""}