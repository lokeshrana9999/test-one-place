{"version":3,"sources":["components/look/web/RenderUpload.jsx","components/look/web/RenderUploadWithCrop.jsx","components/look/web/Input.jsx","components/look/web/InputArea.jsx","components/look/web/Form.jsx","components/look/web/Button.jsx","components/look/web/RenderDynamicFieldSocial.jsx","components/look/web/RenderSelect.jsx","components/look/web/Option.jsx","components/look/web/Popconfirm.jsx","components/look/web/Typography.jsx","components/look/web/Title.jsx","components/look/web/Text.jsx","components/look/web/Paragraph.jsx","components/look/web/RenderUploadWithCropUnnested.jsx","components/form/FieldAdapter.jsx","components/form/validation.js","helper/index.js"],"names":["FormItem","Form","Item","RenderUpload","props","onChangeHandler","file","fileList","arrayHelpers","status","setload","response","upload_obj","upload","console","log","input","onChange","setState","handleCancel","previewVisible","handleChange","state","previewImage","value","this","label","className","children","meta","handleBlur","fileFormat","listType","customUploadButton","uploadButton","validateStatus","touched","error","onFocus","action","process","accept","onPreview","handlePreview","length","React","Component","aspect","grid","quality","rotate","StyledADInput","styled","ADInput","withTheme","formik","setFieldValue","name","extra","onBlur","e","target","ADTextArea","Input","TextArea","StyledADTextArea","StyledADButtonWrapper","div","theme","brandSecondary","brandPrimary","type","DrawerWrapperRenderer","InputStylized","AddSocialMedia","DynamicFieldSet","showDrawer","visible","onClose","socialClickHandler","id","add","obj","link","category","push","drawerOpenState","socialMediaCategoryList","values","formItems","availableSocialMediaCategoryList","filter","item","find","vall","_id","getImageUrlById","idd","socObj","ss","image","url","map","v","indexv","required","key","style","marginBottom","component","placeholder","prefix","src","alt","width","height","marginRight","suffix","color","fontSize","onClick","remove","marginTop","align","flex","size","placement","closable","getContainer","position","overflowX","justify","socia","Select","Option","Popconfirm","Typography","ADTitle","Title","StyledADTitle","ADText","Text","StyledADText","ADParagraph","Paragraph","StyledADParagraph","defaultFileList","FieldAdapter","secondArg","fieldType","_isAMomentObject","Array","isArray","isString","isNumber","checked","parseInt","setFieldTouched","onChangeText","defaultChecked","disabled","defaultValue","getPath","errors","createElement","connect","undefined","maxLength","max","minLength","min","email","test","phoneNumber","validate","object","schema","collectedErrors","validateFormInner","innerSchema","collector","Object","keys","hasOwnProperty","forEach","s","validator","result","getValidUrl","newUrl","trim","replace","getValidPhoneNumber","numb","phoneNu"],"mappings":"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","file":"static/js/3.94d7196a.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Form, Upload, Modal } from \"antd\";\n\nconst FormItem = Form.Item;\n\nexport default class RenderUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // To Do Fix this thing\n    this.state = {\n      previewVisible: false,\n      previewImage: \"\",\n      fileList: props.value ? [props.value] : [],\n    };\n  }\n\n  onChangeHandler = ({ file, fileList }) => {\n    const arrayHelpers = this.props.arrayHelpers;\n\n    if (file.status === \"uploading\") {\n      this.props.setload(true);\n    }\n\n    if (file.status == \"done\") {\n      this.props.setload(false);\n      if (file.response) {\n        let upload_obj = file.response && file.response.upload;\n        if (upload_obj) {\n          console.log(upload_obj);\n          //set value in form\n          this.props.input.onChange(upload_obj);\n        }\n      }\n    } else if (file.status == \"removed\") {\n      this.props.setload(false);\n      // console.log(file);\n      //remove value in form\n      this.props.input.onChange(\"\");\n    }\n    this.setState({ fileList });\n  };\n\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  // handlePreview = file => {\n  //   this.setState({\n  //     previewImage: file.url || file.thumbUrl,\n  //     previewVisible: true\n  //   });\n  // };\n\n  handleChange = ({ fileList }) => this.setState({ fileList });\n\n  render() {\n    const {\n      label,\n      className,\n      children,\n      meta,\n      handleBlur,\n      fileFormat,\n      listType,\n      customUploadButton,\n    } = this.props;\n    const imageApiUrl = process.env.REACT_APP_IMAGE_API_URL;\n\n    let validateStatus = \"\";\n\n    const { previewVisible, previewImage, fileList } = this.state;\n    const uploadButton = customUploadButton || (\n      <div>\n        {/* <Icon type=\"plus\" /> */}\n        <div className=\"ant-upload-text\">{label}</div>\n      </div>\n    );\n    return (\n      <FormItem\n        validateStatus={validateStatus}\n        validateStatus={meta.touched && meta.error && \"error\"}\n        extra={meta.touched && meta.error}\n      >\n        <div className={`clearfix antd-upload-custom-wrapper ${className}`}>\n          <Upload\n            onFocus={handleBlur}\n            action={imageApiUrl}\n            listType={listType || \"picture-card\"}\n            fileList={fileList}\n            accept={fileFormat}\n            onPreview={this.handlePreview}\n            onChange={this.onChangeHandler}\n          >\n            {fileList.length >= 1 ? null : uploadButton}\n            {children}\n          </Upload>\n          {/* <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n            <img alt=\"image\" style={{ width: '100%' }} src={previewImage} />\n          </Modal> */}\n        </div>{\" \"}\n      </FormItem>\n    );\n  }\n}\nRenderUpload.propTypes = {\n  input: PropTypes.object,\n  label: PropTypes.string,\n  setload: PropTypes.func,\n  value: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Form, Upload, Modal } from \"antd\";\nimport ImgCrop from \"antd-img-crop\";\n\nconst FormItem = Form.Item;\n\nexport default class RenderUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // To Do Fix this thing\n    this.state = {\n      previewVisible: false,\n      previewImage: \"\",\n      fileList: props.value ? [props.value] : [],\n    };\n  }\n\n  onChangeHandler = ({ file, fileList }) => {\n    const arrayHelpers = this.props.arrayHelpers;\n\n    if (file.status === \"uploading\") {\n      this.props.setload(true);\n    }\n\n    if (file.status == \"done\") {\n      this.props.setload(false);\n      if (file.response) {\n        let upload_obj = file.response && file.response.upload;\n        if (upload_obj) {\n          // console.log(upload_obj);\n          //set value in form\n          this.props.input.onChange(upload_obj);\n        }\n      }\n    } else if (file.status == \"removed\") {\n      this.props.setload(false);\n      // console.log(file);\n      //remove value in form\n      this.props.input.onChange(\"\");\n    }\n    this.setState({ fileList });\n  };\n\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  // handlePreview = file => {\n  //   this.setState({\n  //     previewImage: file.url || file.thumbUrl,\n  //     previewVisible: true\n  //   });\n  // };\n\n  handleChange = ({ fileList }) => this.setState({ fileList });\n\n  render() {\n    // { input, label, meta: { touched, error }, defaultFileList }) = this.props\n    // const touched = this.props.meta.touched;\n    // const error = this.props.meta.error;\n    const { label, className, children, meta, handleBlur, aspect, fileFormat } = this.props;\n    // const input = this.props.input;\n    // console.log(input);\n    // const defaultFileList = this.props.defaultFileList;\n\n    // const cloudinary_url = 'https://api.cloudinary.com/v1_1/nodejs-starter-kit/image/upload';\n    // const cloudinary_data = { upload_preset: 'hycdtdxe' };\n\n    // const headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\n    // const cloudinary_data = { upload_preset: 'nxzf2ip6' };\n    const imageApiUrl = process.env.REACT_APP_IMAGE_API_URL;\n\n    let validateStatus = \"\";\n    // if (touched && error) {\n    //   validateStatus = 'error';\n    // }\n    // let defaultFileList = [];\n    // if (this.props.values) {\n    //   defaultFileList = this.props.values.map((img, index) => ({\n    //     uid: index,\n    //     name: 'link',\n    //     status: 'done',\n    //     url: img.imageUrl,\n    //     thumbUrl: img.imageUrl\n    //   }));\n    // }\n\n    const { previewVisible, previewImage, fileList } = this.state;\n    const uploadButton = (\n      <div>\n        {/* <Icon type=\"plus\" /> */}\n        <div className=\"ant-upload-text\">{label}</div>\n      </div>\n    );\n    return (\n      <FormItem\n        validateStatus={validateStatus}\n        validateStatus={meta.touched && meta.error && \"error\"}\n        extra={meta.touched && meta.error}\n      >\n        <div className={`clearfix antd-upload-custom-wrapper ${className}`}>\n          <ImgCrop aspect={aspect} grid={true} quality={1} rotate>\n            <Upload\n              onFocus={handleBlur}\n              action={imageApiUrl}\n              listType=\"picture-card\"\n              fileList={fileList}\n              onPreview={this.handlePreview}\n              onChange={this.onChangeHandler}\n              accept={fileFormat}\n            >\n              {fileList.length >= 1 ? null : uploadButton}\n              {children}\n            </Upload>\n          </ImgCrop>\n          {/* <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n            <img alt=\"image\" style={{ width: '100%' }} src={previewImage} />\n          </Modal> */}\n        </div>{\" \"}\n      </FormItem>\n    );\n  }\n}\nRenderUpload.propTypes = {\n  input: PropTypes.object,\n  label: PropTypes.string,\n  setload: PropTypes.func,\n  value: PropTypes.string,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input as ADInput, Form } from \"antd\";\nimport styled, { withTheme } from \"styled-components\";\n\nconst StyledADInput = styled(ADInput)`\n  /* display:block; */\n`;\n\nconst Input = ({ children, ...props }) => {\n  const {\n    formik: { setFieldValue, handleBlur },\n    name,\n    meta,\n  } = props;\n  return (\n    <Form.Item\n      validateStatus={meta.touched && meta.error && \"error\"}\n      extra={meta.touched && meta.error}\n    >\n      <StyledADInput\n        onBlur={handleBlur}\n        {...props}\n        onChange={(e) => {\n          setFieldValue(name, e.target.value);\n        }}\n      >\n        {children}\n      </StyledADInput>\n    </Form.Item>\n  );\n};\n\nInput.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default withTheme(Input);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input, Form } from \"antd\";\nimport styled, { withTheme } from \"styled-components\";\n\nconst ADTextArea = Input.TextArea;\n\nconst StyledADTextArea = styled(ADTextArea)`\n  /* display:block; */\n`;\n\nconst TextArea = ({ children, ...props }) => {\n  const {\n    formik: { setFieldValue, handleBlur },\n    name,\n    meta,\n  } = props;\n  return (\n    <Form.Item\n      validateStatus={meta.touched && meta.error && \"error\"}\n      extra={meta.touched && meta.error}\n    >\n      <StyledADTextArea\n        onBlur={handleBlur}\n        {...props}\n        onChange={(e) => {\n          setFieldValue(name, e.target.value);\n        }}\n      >\n        {children}\n      </StyledADTextArea>\n    </Form.Item>\n  );\n};\n\nTextArea.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default withTheme(TextArea);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form as ADForm } from 'antd';\n\nconst Form = ({ children, ...props }) => {\n  return <ADForm {...props}>{children}</ADForm>;\n};\n\nForm.propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string\n};\n\nexport default Form;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button as ADButton } from \"antd\";\nimport styled, { withTheme } from \"styled-components\";\n\nconst StyledADButtonWrapper = styled.div`\n  /* .am-button.am-button-primary {\n    color: ${(props) => props.theme.brandSecondary};\n    background: ${(props) => props.theme.brandPrimary};\n    border: 1px solid ${(props) => props.theme.brandPrimary};\n\n    ::before {\n      border: 1px solid ${(props) => props.theme.brandPrimary};\n    }\n  } */\n`;\n\nconst Button = ({ children, type, theme, ...props }) => {\n  return (\n    <StyledADButtonWrapper theme={theme}>\n      <ADButton type={type} {...props}>\n        {children}\n      </ADButton>\n    </StyledADButtonWrapper>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n};\n\nexport default withTheme(Button);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FieldAdapter as Field } from \"../../form\";\nimport { Form, Drawer } from \"antd\";\nimport { Flex } from \"antd-mobile\";\nimport {\n  AiOutlineMinusCircle,\n  AiOutlinePlusCircle,\n  AiOutlineCloseCircle,\n} from \"react-icons/ai\";\nimport styled, { withTheme } from \"styled-components\";\n\nimport { Input, RenderSelect, Button, Option } from \"../web\";\n\nconst FormItem = Form.Item;\n\nconst DrawerWrapperRenderer = styled.div`\n  position: relative;\n  height: 60px;\n  padding: 0px 0px 0px 10px;\n  overflow: hidden;\n  /* text-align: center; */\n  /* display: grid;\n  place-items: center; */\n\n  background: transparent;\n  border: 1px solid #ebedf0;\n  border-radius: 7px;\n  margin-bottom: 20px;\n  .ant-drawer-mask {\n    background-color: transparent !important;\n  }\n  .ant-drawer-content-wrapper {\n    width: 100% !important;\n    .ant-drawer-content {\n      background: transparent !important;\n      .ant-drawer-wrapper-body {\n        .ant-drawer-body {\n          padding: 0;\n          padding-left: 10px;\n          background: white !important;\n          .social-wrapper {\n            /* background: red; */\n            scrollbar-width: none; /* Firefox */\n            /* -ms-overflow-style: none; */\n            /* width: 0px; */\n            /* background: transparent;  */\n          }\n          /* .social-wrapper::-webkit-scrollbar {\n          } */\n        }\n        .ant-drawer-header {\n          .ant-drawer-title {\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst InputStylized = styled(Input)`\n  background: white !important;\n  border-radius: 7px;\n  border: solid 2px #d8d8d8;\n  height: 60px !important;\n  font-size: 20px;\n  padding: 0 10px;\n  caret-color: #4643d3;\n  color: #4643d3 !important;\n  font-family: Rubik;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  input {\n    background: transparent !important;\n    caret-color: white;\n    color: #4643d3 !important;\n    font-size: 15px;\n    /* word-spacing:-3px; */\n    font-family: Rubik;\n    font-weight: normal;\n    font-stretch: normal;\n    font-style: normal;\n  }\n  input:focus {\n    caret-color: #4643d3;\n    color: #4643d3;\n    background-color: transparent !important;\n  }\n  input:-webkit-autofill,\n  input:-webkit-autofill:hover,\n  input:-webkit-autofill:focus {\n    transition: background-color 5000s ease-in-out 0s;\n    -webkit-text-fill-color: #4643d3;\n    caret-color: #4643d3;\n    color: #4643d3;\n    background-color: transparent !important;\n  }\n`;\n\nconst AddSocialMedia = styled.div`\n  color: white;\n  padding-left: 20px;\n  font-size: 15px;\n  /* word-spacing:-3px; */\n  font-family: Rubik;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n`;\n\nclass DynamicFieldSet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n    };\n  }\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  socialClickHandler = (id) => {\n    this.setState({\n      visible: false,\n    });\n    this.add(id);\n  };\n  add = (id) => {\n    const arrayHelpers = this.props.arrayHelpers;\n    let obj = {};\n    obj = {\n      link: \"\",\n      category: id,\n    };\n\n    // keys.map((k) => (obj[k.key] = \"\"));\n\n    arrayHelpers.push(obj);\n  };\n\n  render() {\n    const drawerOpenState = this.state.visible;\n    const { socialMediaCategoryList, name, values, arrayHelpers } = this.props;\n    let formItems = null;\n    const availableSocialMediaCategoryList = socialMediaCategoryList.filter(\n      (item) => !values.find((vall) => vall.category === item._id)\n    );\n    const getImageUrlById = (idd) => {\n      const socObj =\n        socialMediaCategoryList &&\n        socialMediaCategoryList.find((ss) => ss._id === idd);\n      return socObj && socObj.image && socObj.image.url;\n    };\n    if (values) {\n      formItems = values.map((v, indexv) => (\n        <FormItem required={false} key={indexv} style={{ marginBottom: \"0\" }}>\n          <Field\n            name={`${name}[${indexv}].link`}\n            component={InputStylized}\n            placeholder={\"Link\"}\n            prefix={\n              <img\n                src={getImageUrlById(v[\"category\"])}\n                alt=\"\"\n                width=\"26px\"\n                height=\"26px\"\n                style={{ marginRight: \"10px\" }}\n              />\n            }\n            suffix={\n              <AiOutlineMinusCircle\n                style={{\n                  color: \"red\",\n                  fontSize: \"30px\",\n                  width: \"40px\",\n                  marginRight: \"-10px\",\n                }}\n                onClick={() => arrayHelpers.remove(indexv)}\n              />\n            }\n            type=\"text\"\n            label={`Link`}\n            value={v[\"link\"]}\n            key={indexv}\n          />\n        </FormItem>\n      ));\n    }\n    return (\n      <div>\n        <FormItem label={this.props.label}>\n          {formItems}\n          {availableSocialMediaCategoryList &&\n            availableSocialMediaCategoryList.length !== 0 && (\n              <DrawerWrapperRenderer>\n                <div\n                  style={{ width: \"100%\", marginTop: \"15px\" }}\n                  align=\"left\"\n                  onClick={this.showDrawer}\n                >\n                  {!drawerOpenState && (\n                    <Flex>\n                      <Flex.Item style={{ width: \"fit-content\", flex: 0 }}>\n                        <AiOutlinePlusCircle\n                          size={26}\n                          style={{ color: \"white\" }}\n                        />\n                      </Flex.Item>\n                      <Flex.Item style={{ flex: 4 }}>\n                        <AddSocialMedia>Add Social Media</AddSocialMedia>\n                      </Flex.Item>\n                    </Flex>\n                  )}\n                </div>\n                <Drawer\n                  placement=\"left\"\n                  closable={false}\n                  onClose={this.onClose}\n                  visible={this.state.visible}\n                  getContainer={false}\n                  style={{ position: \"absolute\" }}\n                >\n                  <div\n                    className=\"social-wrapper\"\n                    style={{ width: \"100%\", overflowX: \"scroll\" }}\n                  >\n                    <Flex\n                      justify=\"left\"\n                      style={{ width: \"fit-content\", marginTop: \"13px\" }}\n                    >\n                      <AiOutlineCloseCircle\n                        onClick={this.onClose}\n                        style={{ color: \"#4643D3\", marginRight: \"10px\" }}\n                        size={26}\n                      />\n\n                      {availableSocialMediaCategoryList.map((socia, key) => (\n                        <img\n                          src={socia && socia.image && socia.image.url}\n                          alt=\"\"\n                          width=\"26px\"\n                          height=\"26px\"\n                          style={{ marginRight: \"10px\" }}\n                          onClick={(e) => this.socialClickHandler(socia._id)}\n                        />\n                      ))}\n                    </Flex>\n                  </div>\n                </Drawer>\n              </DrawerWrapperRenderer>\n            )}\n        </FormItem>\n      </div>\n    );\n  }\n}\n\nDynamicFieldSet.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  values: PropTypes.array,\n  keys: PropTypes.array,\n  setload: PropTypes.func,\n  buttonText: PropTypes.string,\n  arrayHelpers: PropTypes.object,\n};\n\nexport default withTheme(DynamicFieldSet);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"antd\";\nimport Select from \"./Select\";\n\nconst FormItem = Form.Item;\n\nconst RenderSelect = (props) => {\n  const {\n    input,\n    label,\n    type,\n    children,\n    mode,\n    meta: { touched, error },\n  } = props;\n  let validateStatus = \"\";\n  if (touched && error) {\n    validateStatus = \"error\";\n  }\n\n  const onChange = (value) => {\n    const { formik, name } = props;\n    formik.handleChange({ target: { value, name } });\n  };\n\n  return (\n    <FormItem label={label} validateStatus={validateStatus} help={error}>\n      <div>\n        <Select\n          mode={mode}\n          showSearch\n          optionFilterProp=\"children\"\n          placeholder={label}\n          filterOption={(input, option) =>\n            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >=\n            0\n          }\n          {...input}\n          type={type}\n          onChange={onChange}\n        >\n          {children}\n        </Select>\n      </div>\n    </FormItem>\n  );\n};\n\nRenderSelect.propTypes = {\n  formik: PropTypes.object.isRequired,\n  input: PropTypes.object,\n  label: PropTypes.string,\n  type: PropTypes.string,\n  meta: PropTypes.object,\n  name: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default RenderSelect;\n","import { Select } from 'antd';\n\nconst { Option: ADOption } = Select;\n\nexport default ADOption;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Popconfirm as ADPopconfirm } from \"antd\";\n\nconst Popconfirm = ({ children, ...props }) => {\n  return (\n    <ADPopconfirm {...props}>\n      {children}\n    </ADPopconfirm>\n  );\n};\n\nPopconfirm.propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n};\n\nexport default Popconfirm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Typography } from \"antd\";\n\nexport default Typography;\n","import React, { Component } from \"react\";\nimport { Typography } from \"antd\";\nimport styled, { withTheme } from \"styled-components\";\n\nconst ADTitle = Typography.Title;\n\nconst StyledADTitle = styled(ADTitle)`\n  /* font-family: Rubik; */\n`;\n\nconst Title = ({ children, theme, ...props }) => {\n  return <StyledADTitle theme={theme}>{children}</StyledADTitle>;\n};\n\nexport default withTheme(Title);\n","import React, { Component } from \"react\";\nimport { Typography } from \"antd\";\nimport styled, { withTheme } from \"styled-components\";\n\nconst ADText = Typography.Text;\n\nconst StyledADText = styled(ADText)`\n  font-family: Rubik;\n`;\n\nconst Text = ({ children, theme, ...props }) => {\n  return <StyledADText theme={theme}>{children}</StyledADText>;\n};\n\nexport default withTheme(Text);\n","import React, { Component } from \"react\";\nimport { Typography } from \"antd\";\nimport styled, { withTheme } from \"styled-components\";\n\nconst ADParagraph = Typography.Paragraph;\n\nconst StyledADParagraph = styled(ADParagraph)`\n  font-family: Rubik;\n`;\n\nconst Paragraph = ({ children, theme, ...props }) => {\n  return <StyledADParagraph theme={theme}>{children}</StyledADParagraph>;\n};\n\nexport default withTheme(Paragraph);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Form, Upload, Modal } from \"antd\";\nimport ImgCrop from \"antd-img-crop\";\n\nconst FormItem = Form.Item;\n\nexport default class RenderUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // To Do Fix this thing\n    this.state = {\n      previewVisible: false,\n      previewImage: \"\",\n      fileList: props.value ? [{ url: props.value }] : [],\n    };\n  }\n\n  onChangeHandler = ({ file, fileList }) => {\n    const arrayHelpers = this.props.arrayHelpers;\n\n    if (file.status === \"uploading\") {\n      this.props.setload(true);\n    }\n\n    if (file.status == \"done\") {\n      this.props.setload(false);\n      if (file.response) {\n        let url = file.response.upload && file.response.upload.url;\n        if (url) {\n          // console.log(url);\n          //set value in form\n          this.props.input.onChange(url);\n        }\n      }\n    } else if (file.status == \"removed\") {\n      this.props.setload(false);\n      // console.log(file);\n      //remove value in form\n      this.props.input.onChange(\"\");\n    }\n    this.setState({ fileList });\n  };\n\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  // handlePreview = file => {\n  //   this.setState({\n  //     previewImage: file.url || file.thumbUrl,\n  //     previewVisible: true\n  //   });\n  // };\n\n  handleChange = ({ fileList }) => this.setState({ fileList });\n\n  render() {\n    // { input, label, meta: { touched, error }, defaultFileList }) = this.props\n    // const touched = this.props.meta.touched;\n    // const error = this.props.meta.error;\n    const {\n      label,\n      className,\n      children,\n      meta,\n      handleBlur,\n      aspect,\n      fileFormat,\n      value,\n    } = this.props;\n    // const input = this.props.input;\n    // console.log(input);\n    // const defaultFileList = this.props.defaultFileList;\n\n    // const cloudinary_url = 'https://api.cloudinary.com/v1_1/nodejs-starter-kit/image/upload';\n    // const cloudinary_data = { upload_preset: 'hycdtdxe' };\n\n    // const headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\n    // const cloudinary_data = { upload_preset: 'nxzf2ip6' };\n    const imageApiUrl = process.env.REACT_APP_IMAGE_API_URL;\n\n    let validateStatus = \"\";\n    // if (touched && error) {\n    //   validateStatus = 'error';\n    // }\n    // let defaultFileList = [];\n    // if (this.props.values) {\n    //   defaultFileList = this.props.values.map((img, index) => ({\n    //     uid: index,\n    //     name: 'link',\n    //     status: 'done',\n    //     url: img.imageUrl,\n    //     thumbUrl: img.imageUrl\n    //   }));\n    // }\n\n    const { previewVisible, previewImage, fileList } = this.state;\n    const uploadButton = (\n      <div>\n        {/* <Icon type=\"plus\" /> */}\n        <div className=\"ant-upload-text\">{label}</div>\n      </div>\n    );\n    console.log(\"renderunnested\", fileList, value);\n    return (\n      <FormItem\n        validateStatus={validateStatus}\n        validateStatus={meta.touched && meta.error && \"error\"}\n        extra={meta.touched && meta.error}\n      >\n        <div className={`clearfix antd-upload-custom-wrapper ${className}`}>\n          <ImgCrop aspect={aspect} grid={true} quality={1} rotate>\n            <Upload\n              onFocus={handleBlur}\n              action={imageApiUrl}\n              listType=\"picture-card\"\n              defaultFileList={[...fileList]}\n              onPreview={this.handlePreview}\n              onChange={this.onChangeHandler}\n              accept={fileFormat}\n            >\n              {fileList.length >= 1 ? null : uploadButton}\n              {children}\n            </Upload>\n          </ImgCrop>\n          {/* <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n            <img alt=\"image\" style={{ width: '100%' }} src={previewImage} />\n          </Modal> */}\n        </div>{\" \"}\n      </FormItem>\n    );\n  }\n}\nRenderUpload.propTypes = {\n  input: PropTypes.object,\n  label: PropTypes.string,\n  setload: PropTypes.func,\n  value: PropTypes.string,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"formik\";\nimport { get as getPath } from \"lodash\";\nimport { isString, isNumber } from \"util\";\n\nconst PLATFORM = \"m\";\n\nclass FieldAdapter extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n  }\n  onChange = (e, secondArg) => {\n    console.log(\"onChange\", e, secondArg, this.props);\n    const { formik, onChange, type: fieldType } = this.props;\n    if (onChange) {\n      onChange(e);\n    }\n    if (fieldType === \"image\" || fieldType === \"media\" || fieldType === \"content\") {\n      formik.setFieldValue(this.props.name, e);\n    }\n    else if (e._isAMomentObject && secondArg) {\n      this.props.formik.setFieldValue(this.props.name, secondArg);\n    } else if (\n      Array.isArray(e) &&\n      e[0]._isAMomentObject &&\n      e[1]._isAMomentObject &&\n      secondArg\n    ) {\n      this.props.formik.setFieldValue(this.props.name, secondArg);\n    } else if (isString(e)) {\n      // for Option Field\n      this.props.formik.setFieldValue(this.props.name, e);\n    } else if (isNumber(e)) {\n      this.props.formik.setFieldValue(this.props.name, e);\n    } else if (e && e.target && e.target.type == \"radio\") {\n      this.props.formik.setFieldValue(e.target.name, e.target.value);\n    } else if (e && e.target && e.target.checked) {\n      this.props.formik.setFieldValue(e.target.name, e.target.checked);\n    } else if (e && e.target && e.target.type == \"number\") {\n      this.props.formik.setFieldValue(e.target.name, parseInt(e.target.value));\n    } else {\n      formik.handleChange(e);\n    }\n  };\n\n  onBlur = (e) => {\n    const { formik, onBlur, name } = this.props;\n    if (onBlur) {\n      onBlur(e);\n    } else {\n      if (PLATFORM === \"mobile\") {\n        formik.setFieldTouched(name, true);\n      } else {\n        // console.log(name);\n        // formik.handleBlur(e);\n        formik.setFieldTouched(name, true);\n      }\n    }\n  };\n\n  onChangeText = (value) => {\n    const { formik, onChangeText, onChange, name } = this.props;\n    if (onChange && !onChangeText) {\n      onChange(value);\n    } else if (onChangeText) {\n      onChangeText(value);\n    } else {\n      formik.setFieldValue(name, value);\n    }\n  };\n\n  render() {\n    const { formik, component, name, defaultChecked, disabled } = this.props;\n    let { defaultValue } = this.props;\n    let { value, checked } = this.props;\n    value = value || \"\";\n    // const type = this.props.type;\n    // if (type == 'number') {\n    //   value = parseInt(value);\n    //   defaultValue = parseInt(defaultValue);\n    //   console.log(value);\n    // }\n\n    checked = checked || false;\n    const meta = {\n      touched: getPath(formik.touched, name),\n      error: getPath(formik.errors, name),\n    };\n    const input = {\n      onBlur: this.onBlur,\n      name,\n      value,\n      checked,\n      defaultValue,\n      defaultChecked,\n      disabled,\n    };\n\n    const changeEventHandler =\n      PLATFORM === \"mobile\" ? \"onChangeText\" : \"onChange\";\n    input[changeEventHandler] = this[changeEventHandler];\n\n    return React.createElement(component, {\n      ...this.props,\n      input,\n      meta,\n    });\n  }\n}\n\nFieldAdapter.propTypes = {\n  formik: PropTypes.object.isRequired,\n  component: PropTypes.func,\n  type: PropTypes.string,\n  onChangeText: PropTypes.func,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.any,\n  defaultValue: PropTypes.any,\n  checked: PropTypes.bool,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nexport default connect(FieldAdapter);\n","/**\n * Validates if the value is empty.\n *\n * @param value\n * @return {undefined | string}\n */\nexport const required = (value) => (value ? undefined : 'Field Required');\n\n/**\n * Validates the maximal length of the value.\n * Usage: const maxLength15 = maxLength(15)\n *\n * @param max\n * @return {undefined | string}\n */\nexport const maxLength = (max) => (value) =>\n  value && value.length > max ? `Input shouldn't be bigger than ${max} characters` : undefined;\n\n/**\n * Validates the minimal length of the value.\n * Usage: export const minLength2 = minLength(2)\n *\n * @param min\n * @return {undefined | string}\n */\nexport const minLength = (min) => (value) =>\n  value && value.length < min ? `Input should be bigger than ${min} characters` : undefined;\n\n/**\n * Validates if the value is a number.\n *\n * @param value\n * @return {undefined | string}\n */\nexport const number = (value) => (value && isNaN(Number(value)) ? 'Input is not a number' : undefined);\n\n/**\n * Validates if the value is a string.\n *\n * @param value\n * @return {undefined | string}\n */\nexport const string = (value) =>\n  value && !(typeof value === 'string' || value instanceof String) ? 'Input is not a string' : undefined;\n\n/**\n * Validates the minimal value.\n * Usage: export const minValue18 = minValue(18);\n *\n * @param min\n * @return {undefined | string}\n */\nexport const minValue = (min) => (value) =>\n  value && value < min ? `Input should be bigger than ${min}` : undefined;\n\n/**\n * Validates the email.\n *\n * @param value\n * @return {undefined | string}\n */\nexport const email = (value) =>\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Input is not an email' : undefined;\n\n/**\n * Validates if the value is alpha-numeric.\n *\n * @param value\n * @return {undefined | string}\n */\nexport const alphaNumeric = (value) =>\n  value && /[^a-zA-Z0-9 ]/i.test(value) ? 'Input is not alpha numeric' : undefined;\n\n/**\n * Validates the phone number.\n *\n * @param value\n * @return {undefined | string}\n */\nexport const phoneNumber = (value) =>\n  value && !/^(\\+)?([ 0-9]){10,16}$/i.test(value) ? 'Input is not a phone number' : undefined;\n\n\n\n/**\n * Validates the input object according to the input schema.\n *\n * @param object\n * @param schema\n * @return object with errors\n */\nexport const validate = (object, schema) => {\n  const errors = {};\n  const validateFormInner = (\n    values,\n    innerSchema,\n    collector\n  ) => {\n    Object.keys(innerSchema)\n      .filter(v => innerSchema.hasOwnProperty(v))\n      .forEach(v => {\n        const s = innerSchema[v];\n\n        if (Array.isArray(s)) {\n          s.forEach(validator => {\n            const result = validator(values[v], values);\n            if (result) {\n              collector[v] = result;\n            }\n          });\n        } else {\n          validateFormInner(values[v], innerSchema[v], collector);\n        }\n      });\n\n    return collector;\n  };\n\n  const collectedErrors = validateFormInner(object, schema, errors);\n  return Object.keys(collectedErrors).length ? collectedErrors : undefined;\n};","// import {removeArrItem} from './arrayHelpers'\n\n\nconst getValidUrl = (url) => {\n  let newUrl = url;\n  newUrl = newUrl.trim().replace(/\\s/g, \"\");\n\n  if (/^(:\\/\\/)/.test(newUrl)) {\n    return `http${newUrl}`;\n  }\n  if (!/^(f|ht)tps?:\\/\\//i.test(newUrl)) {\n    return `http://${newUrl}`;\n  }\n\n  return newUrl;\n};\n\nconst getValidPhoneNumber = (numb) => {\n  let phoneNu = numb;\n  // phoneNu = phoneNu.trim().replace(/\\s/g, \"\");\n  if (/^(0)/.test(phoneNu) && phoneNu.length === 11) {\n    return phoneNu.replace(/^(0)/, \"+91\");\n  }\n  if (/^(91)/.test(phoneNu) && phoneNu.length === 12) {\n    return phoneNu.replace(/^(91)/, \"+91\");\n  }\n  if (/^(\\+91)/.test(phoneNu) && phoneNu.length === 13) {\n    return phoneNu;\n  }\n\n  return \"+91\" + phoneNu;\n};\n\n\nexport {\n  // removeArrItem, \n  getValidUrl, getValidPhoneNumber};"],"sourceRoot":""}