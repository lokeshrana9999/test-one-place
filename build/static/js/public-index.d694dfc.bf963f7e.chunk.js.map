{"version":3,"sources":["public-index.js"],"names":["configureStore","window","__REDUX_STATE__","store","persistor","globalUsername","location","host","split","AppBundle","loading","Provider","value","appType","onload","Loadable","preloadReady","then","ReactDOM","hydrate","document","getElementById"],"mappings":"mKAAA,uH,EAc6BA,YAAeC,OAAOC,iBAAmB,IAA9DC,E,EAAAA,MAAOC,E,EAAAA,UAIXC,EAAiB,GAKfJ,QAAUA,OAAOK,WAInBD,EAHWJ,OAAOK,SAASC,KAEVC,MAAM,KACA,IAI3B,IAAMC,EACJ,kBAAC,IAAD,CAAeN,MAAOA,GACpB,kBAAC,IAAD,CAAaO,QAAS,KAAMN,UAAWA,GACrC,kBAAC,IAAD,KACE,kBAAC,IAAgBO,SAAjB,CAA0BC,MAAOP,GAC/B,kBAAC,IAAD,CAAKQ,QAAQ,eAOvBZ,OAAOa,OAAS,WACdC,IAASC,eAAeC,MAAK,WAC3BC,IAASC,QAAQV,EAAWW,SAASC,eAAe,e","file":"static/js/public-index.d694dfc.bf963f7e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Loadable from \"react-loadable\";\r\nimport { Provider as ReduxProvider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nimport \"./styles/index.less\";\r\nimport App from \"./App\";\r\nimport configureStore from \"./store/configureStore\";\r\nimport { UsernameContext } from \"./api\";\r\n\r\n// import registerServiceWorker from './registerServiceWorker';\r\n\r\nconst { store, persistor } = configureStore(window.__REDUX_STATE__ || {});\r\n\r\nconst currentEnv = process.env.NODE_ENV;\r\n\r\nvar globalUsername = \"\";\r\n\r\nif (currentEnv === \"development\") {\r\n  globalUsername = \"lokeshrana9999\";\r\n} else if (currentEnv === \"production\") {\r\n  if (window && window.location) {\r\n    var full = window.location.host;\r\n    //window.location.host is subdomain.domain.com\r\n    var parts = full.split(\".\");\r\n    globalUsername = parts[0];\r\n  }\r\n}\r\n\r\nconst AppBundle = (\r\n  <ReduxProvider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <BrowserRouter>\r\n        <UsernameContext.Provider value={globalUsername}>\r\n          <App appType=\"public\" />\r\n        </UsernameContext.Provider>\r\n      </BrowserRouter>\r\n    </PersistGate>\r\n  </ReduxProvider>\r\n);\r\n\r\nwindow.onload = () => {\r\n  Loadable.preloadReady().then(() => {\r\n    ReactDOM.hydrate(AppBundle, document.getElementById(\"root\"));\r\n  });\r\n};\r\n\r\n// registerServiceWorker();\r\n"],"sourceRoot":""}