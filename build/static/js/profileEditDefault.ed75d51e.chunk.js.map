{"version":3,"sources":["components/block/BlockForm.jsx","components/block/AddBlock.jsx","components/block/EditBlock.jsx","components/profile/components/ProfileForm.jsx","components/profile/components/ProfileEditView.jsx","components/profile/containers/ProfileEdit.jsx","components/profile/ProfileOperations.jsx","components/block/BlockCard.jsx","components/block/ChooseBlockCategory.jsx"],"names":["ProfileFormContainer","styled","div","InputStylized","h1","Input","InputAreaStylized","InputArea","RenderUploadStylized","RenderUploadWithCrop","profileFormSchema","title","required","minLength","maxLength","thumbnail","link","ProfileFormWithFormik","withFormik","enableReinitialize","mapPropsToValues","blockData","price","question","media","handleSubmit","values","onSubmit","props","modifiedValues","_id","console","log","validate","displayName","withTheme","addBlockFormRef","useRef","useState","setload","errors","name","ref","onFinish","component","type","label","placeholder","value","size","justify","Item","aspect","Fragment","block","htmlType","PageHead","theme","textColor","withAddUserBlock","postBlock","history","match","a","blockCategory","params","blockCategoryId","message","loading","content","duration","sending","destroy","status","success","push","error","data","style","position","top","left","onClick","goBack","withBlockById","withEditUserBlock","putBlock","blockByUsername","UsernameInputStylized","UsernamePrefix","p","Yup","shape","userProfile","username","matches","bio","firstName","user","profileImage","lastName","socialMediaLinks","map","socialM","category","setValues","validationSchema","socialMediaCategoryList","transform","bottom","right","zIndex","width","height","borderRadius","padding","color","flex","marginLeft","render","arrayHelpers","socialVal","ghost","h2","FormWrapper","minHeight","display","placeItems","background","overflowY","maxWidth","align","src","alt","overflow","withCurrentUser","Component","mapDispatchToProps","setAccessTokene","setRefreshTokene","connect","state","accessToken","app","refreshToken","apiUrl","useContext","ApiContext","ProfileApiUrls","getSocialMediaCategories","useGet","path","requestOptions","headers","Authorization","socialMediaCategories","socialMediaCategoriesLoading","withSocialMediaCategories","currentUser","defaultApiUrl","useMutate","verb","postUserProfile","postUserProfileMutation","mutate","putUserProfile","putUserProfileMutation","withAddProfile","postSocialMediaLinks","postAddSocialMedia","postAddSocialMediaLoading","withAddSocialMedia","profileMutation","handleSocialLinksSubmission","socia","key","responseSend","socialMediaLink","promises","Promise","all","socialSending","profileValues","profileSubmissionObj","BlockCardWrapper","BlockCardTitle","BlockCardDescription","BlockCardAvatarWrapper","to","image","url","className","description","navigation","BlockApiUrls","getBlockCategory","blockCategoryList","length","blockCat"],"mappings":"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","file":"static/js/profileEditDefault.ed75d51e.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport {\n  FieldAdapter as Field,\n  phoneNumber,\n  required,\n  minLength,\n  validate,\n  maxLength,\n} from \"../form\";\nimport { withFormik } from \"formik\";\nimport { FaImages, FaPhotoVideo } from \"react-icons/fa\";\nimport { Flex } from \"antd-mobile\";\nimport styled, { withTheme } from \"styled-components\";\nimport { WhiteSpace } from \"../look/mobile\";\nimport {\n  Input,\n  Form,\n  Alert,\n  InputArea,\n  RenderUpload,\n  Button,\n  RenderUploadWithCrop\n} from \"../look/web\";\n\nconst ProfileFormContainer = styled.div`\n  /* color: white;\n  padding: 50px 26px 32px;\n  opacity: 0.88;\n  border-radius: 20px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.89);\n  background-color: transparent; */\n`;\n\nconst Heading = styled.h1`\n  /* font-family: CircularStdMedium;\n  font-size: 30px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.33;\n  letter-spacing: normal;\n  text-align: center;\n  color: #ffffff; */\n`;\n\nconst LargeHeadingComponent = styled.div`\n  /* font-family: CircularStd;\n  font-size: 36px;\n  font-weight: 900; */\n`;\n\nconst InputStylized = styled(Input)`\n  border: solid 2px #d8d8d8;\n  border-radius: 7px;\n  font-family: Circular Std Medium;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  height: 60px !important;\n  padding: 0 20px;\n  font-size: 15px;\n  /* background: transparent;\n  caret-color: white;\n  color: white;\n   */\n`;\n\nconst InputAreaStylized = styled(InputArea)`\n  background: white !important;\n  border-radius: 7px;\n  border: solid 2px #d8d8d8;\n  height: 120px !important;\n  font-size: 15px;\n  padding: 10px 20px !important;\n  caret-color: black;\n  color: black;\n  font-family: Circular Std Medium;\n  word-spacing: -3px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  :focus {\n    caret-color: black;\n    color: black;\n    background-color: white !important;\n  }\n  :-webkit-autofill,\n  :-webkit-autofill:hover,\n  :-webkit-autofill:focus {\n    transition: background-color 5000s ease-in-out 0s;\n    -webkit-text-fill-color: black;\n    caret-color: black;\n    color: black;\n    background-color: white !important;\n  }\n`;\n\nconst RenderUploadStylized = styled(RenderUploadWithCrop)`\n  width: 140px;\n  height: 140px;\n  border-radius: 30px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  background-color: #ebebeb;\n  overflow: hidden;\n  margin: auto;\n  .ant-upload-picture-card-wrapper {\n    width: 100%;\n    height: 100%;\n    .ant-upload-list-picture-card {\n      width: 100%;\n      height: 100%;\n      .ant-upload-list-picture-card-container {\n        margin: 0;\n        width: 100%;\n        height: 100%;\n        background: #ebebeb;\n        .ant-upload-list-item-done {\n          padding: 0 !important;\n          margin: 0 !important;\n        }\n      }\n      .ant-upload-select-picture-card {\n        margin: 0;\n        width: 100%;\n        height: 100%;\n        background: #ebebeb;\n        border: 0 !important;\n\n        .ant-upload-text {\n          padding: 10px;\n          font-family: Circular Std Medium;\n          font-weight: normal;\n          font-stretch: normal;\n          font-style: normal;\n          font-size: 20px;\n        }\n      }\n    }\n  }\n`;\n\nconst profileFormSchema = {\n  title: [required, minLength(5), maxLength(50)],\n  thumbnail: [required],\n  // media: [required],\n  link: [required],\n};\n\nconst ProfileForm = (props) => {\n  const addBlockFormRef = useRef(null);\n  const [load, setload] = useState(false);\n  const { values, handleSubmit, errors } = props;\n\n  return (\n    <ProfileFormContainer>\n      <Form name=\"addBlock\" ref={addBlockFormRef} onFinish={handleSubmit}>\n        <Field\n          name=\"title\"\n          component={InputAreaStylized}\n          type=\"text\"\n          label={\"Name of The Block\"}\n          placeholder=\"Name of The Block\"\n          value={values.title}\n        />\n\n        <WhiteSpace size=\"xl\" />\n        <Field\n          name=\"link\"\n          component={InputStylized}\n          type=\"text\"\n          label={\"Paste a Link\"}\n          placeholder=\"Paste a Link\"\n          value={values.link}\n        />\n        <WhiteSpace size=\"xl\" />\n\n        <Flex justify=\"between\">\n          <Flex.Item>\n            <Field\n              name=\"thumbnail\"\n              component={RenderUploadStylized}\n              type=\"media\"\n              aspect={1}\n              setload={setload}\n              label={\n                <React.Fragment>\n                  <FaImages size={30} />\n                  <br />\n                  Upload Thumbnail\n                </React.Fragment>\n              }\n              value={values.thumbnail}\n            />\n          </Flex.Item>\n          {/* <Flex.Item>\n            <Field\n              name=\"media\"\n              component={RenderUploadStylized}\n              type=\"media\"\n              setload={setload}\n              label={\n                <React.Fragment>\n                  <FaPhotoVideo size={30} />\n                  <br />\n                  Upload Media\n                </React.Fragment>\n              }\n              value={values.media}\n            />\n          </Flex.Item> */}\n        </Flex>\n        <WhiteSpace size=\"xl\" />\n        <Button type=\"primary\" block size=\"large\" htmlType=\"submit\">\n          Go Live\n        </Button>\n      </Form>\n    </ProfileFormContainer>\n  );\n};\n\nconst ProfileFormWithFormik = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: ({ blockData }) => {\n    return {\n      thumbnail: (blockData && blockData.thumbnail) || null,\n      title: (blockData && blockData.title) || \"\",\n      link: (blockData && blockData.link) || \"\",\n      price: (blockData && blockData.price) || 0,\n      question: (blockData && blockData.question) || \"\",\n      media: (blockData && blockData.media) || null,\n    };\n  },\n\n  // handleSubmit: (values, { props: { onSubmit } }) => {\n  // },\n  handleSubmit: (values, { props: { onSubmit } }) => {\n    let modifiedValues = values;\n    modifiedValues.thumbnail = values.thumbnail && values.thumbnail._id;\n    modifiedValues.media = values.media && values.media._id;\n    console.log(\"handleSubmit\", values);\n    onSubmit(modifiedValues);\n  },\n  // validator:{() => ({})}\n  validate: (values) => validate(values, profileFormSchema),\n  displayName: \"ProfileForm\", // helps with React DevTools\n});\n\nexport default withTheme(ProfileFormWithFormik(ProfileForm));\n","import React, { Component } from \"react\";\nimport styled, { withTheme } from \"styled-components\";\nimport { message } from \"antd\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\n\nimport { WhiteSpace } from \"../look/mobile\";\nimport PageLayout from \"../look/PageLayout\";\nimport BlockForm from \"./BlockForm\";\nimport { withAddUserBlock } from \"./BlockOperations\";\n\nconst PageHead = styled.h1`\n  font-family: Circular Std Black;\n  font-size: 22px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 0.86;\n  letter-spacing: normal;\n  text-align: center;\n  color: #000000;\n  word-spacing: -8px;\n  position: relative;\n`;\n\nconst FormWrapper = styled.div`\n  color: ${(props) => props.theme.textColor};\n  position: relative;\n`;\n\nconst BlockAddView = (props) => {\n  const { postBlock, history, match } = props;\n  console.log(\"blockadd\", props);\n  const onSubmit = async (values) => {\n    let modifiedValues = values;\n    modifiedValues.blockCategory =\n      match && match.params && match.params.blockCategoryId;\n    console.log(\"addBlock\", modifiedValues);\n    try {\n      message.loading({\n        content: \"Adding Card ...\",\n        duration: 0,\n      });\n      const sending = await postBlock(modifiedValues);\n      console.log(sending);\n      message.destroy();\n      if (sending.status === true) {\n        message.success({\n          duration: 2,\n          content: \"Card Added\",\n        });\n        history.push(\"/\");\n      } else {\n        message.error({\n          duration: 2,\n          content: sending.data.message,\n        });\n      }\n      return sending;\n    } catch (e) {\n      message.destroy();\n      console.log(\"error\", e);\n      if (e && e.data && e.data.message) {\n        message.error({\n          duration: 2,\n          content: e && e.data && e.data.message,\n        });\n      }\n    }\n  };\n  return (\n    <PageLayout>\n      <WhiteSpace size=\"xl\" />\n      <PageHead>\n        <AiOutlineArrowLeft\n          style={{ position: \"absolute\", top: \"-3px\", left: 0 }}\n          onClick={history.goBack}\n        />\n        Add a new card\n      </PageHead>\n      <WhiteSpace size=\"xl\" />\n      <WhiteSpace size=\"xl\" />\n      <BlockForm onSubmit={onSubmit} />\n    </PageLayout>\n  );\n};\nexport default withAddUserBlock(withTheme(BlockAddView));\n","import React, { Component } from \"react\";\nimport styled, { withTheme } from \"styled-components\";\nimport { message } from \"antd\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\n\nimport { WhiteSpace } from \"../look/mobile\";\nimport PageLayout from \"../look/PageLayout\";\nimport BlockForm from \"./BlockForm\";\nimport { withEditUserBlock, withBlockById } from \"./BlockOperations\";\n\nconst PageHead = styled.h1`\n  font-family: Circular Std Black;\n  font-size: 22px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 0.86;\n  letter-spacing: normal;\n  text-align: center;\n  color: #000000;\n  word-spacing: -8px;\n  position: relative;\n`;\n\nconst FormWrapper = styled.div`\n  color: ${(props) => props.theme.textColor};\n  position: relative;\n`;\n\nconst BlockEditView = (props) => {\n  const { putBlock, history, match, blockByUsername } = props;\n  console.log(\"blockedit\", props);\n  const onSubmit = async (values) => {\n    let modifiedValues = values;\n    console.log(\"editBlock\", modifiedValues);\n    try {\n      message.loading({\n        content: \"Editing Card ...\",\n        duration: 0,\n      });\n      const sending = await putBlock(modifiedValues);\n      console.log(sending);\n      message.destroy();\n      if (sending.status === true) {\n        message.success({\n          duration: 2,\n          content: \"Card Updated\",\n        });\n        history.push(\"/\");\n      } else {\n        message.error({\n          duration: 2,\n          content: sending.data.message,\n        });\n      }\n      return sending;\n    } catch (e) {\n      message.destroy();\n      console.log(\"error\", e);\n      if (e && e.data && e.data.message) {\n        message.error({\n          duration: 2,\n          content: e && e.data && e.data.message,\n        });\n      }\n    }\n  };\n  return (\n    <PageLayout>\n      <WhiteSpace size=\"xl\" />\n      <PageHead>\n        <AiOutlineArrowLeft\n          style={{ position: \"absolute\", top: \"-3px\", left: 0 }}\n          onClick={history.goBack}\n        />\n        Edit card\n      </PageHead>\n      <WhiteSpace size=\"xl\" />\n      <WhiteSpace size=\"xl\" />\n      <BlockForm onSubmit={onSubmit} blockData={blockByUsername} />\n    </PageLayout>\n  );\n};\nexport default withBlockById(withEditUserBlock(withTheme(BlockEditView)));\n","import React, { useState } from \"react\";\nimport { withFormik, FieldArray } from \"formik\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { Flex } from \"antd-mobile\";\n// import { Persist } from 'formik-persist'\n\nimport styled, { withTheme } from \"styled-components\";\nimport * as Yup from \"yup\";\nimport { FieldAdapter as Field } from \"../../form\";\nimport {\n  Input,\n  Form,\n  Alert,\n  InputArea,\n  RenderUpload,\n  Button as WebButton,\n  RenderDynamicFieldSocial,\n  RenderUploadWithCrop,\n} from \"../../look/web\";\nimport { Button, WhiteSpace } from \"../../look/mobile\";\n\nconst ProfileFormContainer = styled.div`\n  color: white;\n  padding: 50px 26px 32px;\n  opacity: 1;\n  border-radius: 20px;\n  /* box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.89); */\n  background-color: transparent;\n  .ant-form-item-extra {\n    color: white !important;\n  }\n`;\n\nconst Heading = styled.h1`\n  font-family: Circular Std Medium;\n  font-size: 30px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.33;\n  letter-spacing: normal;\n  text-align: center;\n  color: #ffffff;\n`;\n\nconst LargeHeadingComponent = styled.div`\n  font-family: CircularStd;\n  font-size: 36px;\n  font-weight: 900;\n`;\n\nconst InputStylized = styled(Input)`\n  background: transparent !important;\n  border-radius: 7px;\n  border: solid 2px #d8d8d8;\n  height: 60px !important;\n  font-size: 15px;\n  padding: 0 20px;\n  caret-color: white;\n  color: white !important;\n  font-family: Circular Std Medium;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  :focus {\n    caret-color: white;\n    color: white;\n    background-color: transparent !important;\n  }\n  :-webkit-autofill,\n  :-webkit-autofill:hover,\n  :-webkit-autofill:focus {\n    transition: background-color 5000s ease-in-out 0s;\n    -webkit-text-fill-color: white;\n    caret-color: white;\n    color: white;\n    background-color: transparent !important;\n  }\n`;\n\nconst UsernameInputStylized = styled(Input)`\n  display: inline;\n  background: transparent !important;\n  border-radius: 7px;\n  border: solid 2px #d8d8d8;\n  height: 40px !important;\n  font-size: 15px;\n  padding: 0 10px;\n  caret-color: white;\n  color: white;\n  font-family: Circular Std Medium;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  :focus {\n    caret-color: white;\n    color: white;\n    background-color: transparent !important;\n  }\n  :-webkit-autofill,\n  :-webkit-autofill:hover,\n  :-webkit-autofill:focus {\n    transition: background-color 5000s ease-in-out 0s;\n    -webkit-text-fill-color: white;\n    caret-color: white;\n    color: white;\n    background-color: transparent !important;\n  }\n`;\n\nconst InputAreaStylized = styled(InputArea)`\n  background: transparent !important;\n  border-radius: 7px;\n  border: solid 2px #d8d8d8;\n  height: 120px !important;\n  font-size: 15px;\n  padding: 10px 20px !important;\n  caret-color: white;\n  color: white;\n  font-family: Circular Std Medium;\n  word-spacing: -3px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  :focus {\n    caret-color: white;\n    color: white;\n    background-color: transparent !important;\n  }\n  :-webkit-autofill,\n  :-webkit-autofill:hover,\n  :-webkit-autofill:focus {\n    transition: background-color 5000s ease-in-out 0s;\n    -webkit-text-fill-color: white;\n    caret-color: white;\n    color: white;\n    background-color: transparent !important;\n  }\n`;\n\nconst RenderUploadStylized = styled(RenderUploadWithCrop)`\n  width: 140px;\n  height: 140px;\n  border-radius: 30px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  background-color: #ffffff;\n  overflow: hidden;\n  .ant-upload-picture-card-wrapper {\n    width: 100%;\n    height: 100%;\n    .ant-upload-list-picture-card {\n      width: 100%;\n      height: 100%;\n      .ant-upload-list-picture-card-container {\n        margin: 0;\n        width: 100%;\n        height: 100%;\n        background: white;\n        .ant-upload-list-item-list-type-picture-card {\n          padding: 0 !important;\n        }\n        .ant-upload-list-item-done {\n          padding: 0 !important;\n          margin: 0 !important;\n        }\n      }\n      .ant-upload-select-picture-card {\n        margin: 0;\n        width: 100%;\n        height: 100%;\n        background: white;\n        border: 0 !important;\n\n        .ant-upload-text {\n          font-family: Circular Std Medium;\n          font-weight: normal;\n          font-stretch: normal;\n          font-style: normal;\n          font-size: 15px;\n        }\n      }\n    }\n  }\n`;\n\nconst UsernamePrefix = styled.p`\n  color: white;\n  font-family: Circular Std Medium;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  word-spacing: -3px;\n  margin-top: -4px;\n  font-size: 15px;\n  text-align: right;\n`;\nconst profileFormSchema = Yup.object().shape({\n  userProfile: Yup.object().shape({\n    username: Yup.string().required(\"Required\").matches(/^[A-Za-z0-9 ]+$/, \"Can only use alphabets and numbers\"),\n    bio: Yup.string().required(\"Required\"),\n    firstName: Yup.string().required(\"Required\"),\n  }),\n});\n\nconst ProfileForm = (props) => {\n  const [load, setload] = useState(false);\n  const { values, handleSubmit, socialMediaCategoryList } = props;\n  console.log(\"form values:\", values, socialMediaCategoryList);\n  return (\n    <ProfileFormContainer>\n      <Form name=\"profile\" onFinish={handleSubmit}>\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"-20px\",\n            left: \"50%\",\n            transform: \"translateX(-70px)\",\n          }}\n        >\n          <Field\n            name=\"userProfile.profileImage\"\n            component={RenderUploadStylized}\n            aspect={1}\n            type=\"image\"\n            setload={setload}\n            label={\"Upload Your Photo\"}\n            value={values.userProfile.profileImage}\n          >\n            <Button\n              style={{\n                position: \"absolute\",\n                bottom: \"-10px\",\n                right: \"-10px\",\n                zIndex: \"10\",\n                width: \"30px\",\n                height: \"30px\",\n                borderRadius: \"30px\",\n                padding: \"0\",\n                color: \"#4643D3\",\n              }}\n            >\n              <AiFillEdit\n                size=\"20\"\n                style={{ position: \"absolute\", top: \"4px\", left: \"4px\" }}\n              />\n            </Button>\n          </Field>\n        </div>\n        <WhiteSpace size=\"md\" />\n        <WhiteSpace size=\"md\" />\n        <Flex type=\"wrap\">\n          <Flex.Item style={{ flex: 2 }}>\n            {\" \"}\n            <UsernamePrefix> oneplace.me/</UsernamePrefix>\n          </Flex.Item>\n          <Flex.Item style={{ flex: 2, marginLeft: \"5px\" }}>\n            <Field\n              name=\"userProfile.username\"\n              component={UsernameInputStylized}\n              type=\"text\"\n              // prefix=\"www.oneplace.me/\"\n              label={\"Username\"}\n              placeholder=\"Username\"\n              value={values.userProfile.username}\n            />\n          </Flex.Item>\n        </Flex>\n\n        <Field\n          name=\"userProfile.firstName\"\n          component={InputStylized}\n          type=\"text\"\n          label={\"First Name\"}\n          placeholder=\"First Name\"\n          value={values.userProfile.firstName}\n        />\n\n        <Field\n          name=\"userProfile.lastName\"\n          component={InputStylized}\n          type=\"text\"\n          label={\"Last Name\"}\n          placeholder=\"Last Name\"\n          value={values.userProfile.lastName}\n        />\n\n        <Field\n          name=\"userProfile.bio\"\n          component={InputAreaStylized}\n          type=\"textarea\"\n          label={\"Tell a few words about yourself \"}\n          placeholder=\"Tell a few words about yourself \"\n          value={values.userProfile.bio}\n        />\n        <FieldArray\n          name=\"userProfile.socialMediaLinks\"\n          render={(arrayHelpers) => (\n            <RenderDynamicFieldSocial\n              // quizItem={values}\n              arrayHelpers={arrayHelpers}\n              values={values.userProfile.socialMediaLinks}\n              name=\"userProfile.socialMediaLinks\"\n              // quizId={values.id}\n              // addSection={addSection}\n              // deleteSection={deleteSection}\n              // submitQuestion={submitQuestion}\n              // deleteQuestion={deleteQuestion}\n              // submitSection={submitSection}\n              socialMediaCategoryList={socialMediaCategoryList}\n            />\n          )}\n          socialVal={values.userProfile.socialMediaLinks}\n        // handleSections={handleSections}\n        />\n        <WebButton ghost htmlType=\"submit\" size=\"large\" block>\n          Submit\n        </WebButton>\n        {/* <Persist name=\"profile-edit-form\" /> */}\n      </Form>\n    </ProfileFormContainer>\n  );\n};\n\nconst ProfileFormWithFormik = withFormik({\n  enableReinitialize: false,\n  mapPropsToValues: ({ user }) => {\n    function getSocialMediaLinks(socialM) {\n      return {\n        category: (socialM && socialM.category && socialM.category._id) || \"\",\n        link: socialM && socialM.link,\n      };\n    }\n\n    return {\n      userProfile: {\n        username: user && user.username,\n        profileImage:\n          (user && user.userProfile && user.userProfile.profileImage) || {},\n        firstName:\n          (user && user.userProfile && user.userProfile.firstName) || \"\",\n        lastName: (user && user.userProfile && user.userProfile.lastName) || \"\",\n        bio: (user && user.userProfile && user.userProfile.bio) || \"\",\n        socialMediaLinks:\n          (user &&\n            user.userProfile &&\n            user.userProfile.socialMediaLinks &&\n            user.userProfile.socialMediaLinks.map(getSocialMediaLinks)) ||\n          [],\n      },\n    };\n  },\n\n  handleSubmit(values, { props: { onSubmit, setValues } }) {\n    console.log(\"handleSubmit\", values);\n    let modifiedValues = values;\n    modifiedValues.userProfile.profileImage =\n      (values.userProfile &&\n        values.userProfile.profileImage &&\n        values.userProfile.profileImage._id) ||\n      null;\n    onSubmit(modifiedValues.userProfile);\n  },\n  validationSchema: profileFormSchema,\n  // validate: (values) => validate(values, profileFormSchema),\n  displayName: \"ProfileForm\", // helps with React DevTools\n});\n\nexport default withTheme(ProfileFormWithFormik(ProfileForm));\n","import React from \"react\";\n// import Avatar from \"react-avatar\";\n// import { Flex } from \"antd-mobile\";\n// import { Link } from \"react-router-dom\";\nimport { message } from \"antd\";\n\nimport styled, { withTheme } from \"styled-components\";\n\n// import Loadable from \"react-loadable\";\n// import {\n//   AiFillFacebook,\n//   AiFillInstagram,\n//   AiFillLinkedin,\n//   AiOutlineWhatsApp,\n//   AiFillEdit,\n//   AiOutlinePlusCircle,\n// } from \"react-icons/ai\";\nimport { WhiteSpace } from \"../../look/mobile\";\nimport ProfileForm from \"./ProfileForm\";\n\nconst PageHead = styled.h2`\n  color: ${(props) => props.theme.textColor};\n  text-align: center;\n  font-weight: bold;\n  font-family: Circular Std Medium;\n  word-spacing: -3px;\n  /* font-weight: normal; */\n  font-stretch: normal;\n  font-style: normal;\n  font-size: 22px;\n`;\n\nconst FormWrapper = styled.div`\n  color: ${(props) => props.theme.textColor};\n  position: relative;\n  height: fit-content;\n  margin-top: 40px;\n  background-color: #4643d3;\n  overflow: hidden;\n  padding-top: 50px;\n`;\n\nconst ProfileEditView = (props) => {\n  const { user, onSubmit, socialMediaCategoryList } = props;\n  // setAccessTokene('');\n  console.log(\"profileedit\", props);\n  return (\n    <div\n      style={{\n        padding: \"20px 0 0 0\",\n        width: \"100%\",\n        minHeight: \"100vh\",\n        position: \"relative\",\n        display: \"grid\",\n        placeItems: \"center\",\n        background: \"white\",\n        overflowY: \"scroll\",\n      }}\n    >\n      {\" \"}\n      <div\n        style={{\n          maxWidth: \"500px\",\n          minHeight: \"100%\",\n          height: \"fit-content\",\n          width: \"100%\",\n          // overflow: \"hidden\",\n        }}\n      >\n        <PageHead>OnePlace Universe</PageHead>\n        <WhiteSpace size=\"xl\" />\n        <div align=\"center\">\n          <img\n            src=\"https://onelinkie.s3.ap-south-1.amazonaws.com/45d5377d-4542-44b1-b6a5-38e8df2ef207-profile_edit.png\"\n            width=\"80%\"\n            alt=\"login_banner\"\n          />\n        </div>\n        <WhiteSpace size=\"xl\" />\n        <FormWrapper>\n          <div\n            style={{\n              height: \"390px\",\n              width: \"100%\",\n              position: \"absolute\",\n              top: \"-2px\",\n              left: \"-5px\",\n              right: 0,\n              zIndex: \"10\",\n              overflow: \"hidden\",\n            }}\n          >\n            <img\n              style={{\n                width: \"100%\",\n              }}\n              src=\"https://onelinkie.s3.ap-south-1.amazonaws.com/7b5e7196-b731-4b2c-a067-9caf4bda0d75-group-219%403x.png\"\n              alt=\"\"\n            />\n          </div>\n          <div\n            style={{\n              // top: \"0\",\n              // left: \"0\",\n              position: \"relative\",\n              // right: \"0\",\n              background: \"transparent\",\n              padding: \"80px 20px 0\",\n              zIndex: \"12\",\n            }}\n          >\n            <ProfileForm\n              user={user}\n              onSubmit={onSubmit}\n              socialMediaCategoryList={socialMediaCategoryList}\n            />\n          </div>\n        </FormWrapper>\n      </div>\n    </div>\n  );\n};\n\nexport default withTheme(ProfileEditView);\n","import React from \"react\";\n// import Avatar from \"react-avatar\";\n// import { Flex } from \"antd-mobile\";\n// import { Link } from \"react-router-dom\";\nimport { message } from \"antd\";\n\nimport styled, { withTheme } from \"styled-components\";\nimport { connect } from \"react-redux\";\n// import { ApiContext, ProfileApiUrls } from \"../../api\";\nimport { withCurrentUser } from \"../../auth/Auth\";\n// import { setAccessTokene, setRefreshTokene } from \"../../store/appReducer\";\n\nimport {\n  withAddProfile,\n  withSocialMediaCategories,\n  withAddSocialMedia,\n} from \"../ProfileOperations\";\nimport ProfileEditView from \"../components/ProfileEditView\";\n\nconst PageHead = styled.h2`\n  color: ${(props) => props.theme.textColor};\n  text-align: center;\n  font-weight: bold;\n`;\n\nconst FormWrapper = styled.div`\n  color: ${(props) => props.theme.textColor};\n  position: relative;\n  height: fit-content;\n  margin-top: 40px;\n  background-color: #211e28;\n`;\n\nconst ProfileEdit = (props) => {\n  const {\n    history,\n    currentUser,\n    postUserProfileMutation,\n    putUserProfileMutation,\n    socialMediaCategoryList,\n    postAddSocialMedia,\n  } = props;\n  // setAccessTokene('');\n\n  var profileMutation;\n\n  if (currentUser && currentUser.userProfile) {\n    profileMutation = putUserProfileMutation;\n  } else {\n    profileMutation = postUserProfileMutation;\n  }\n  const user = currentUser;\n\n  const handleSocialLinksSubmission = async (socialMediaLinks) => {\n    // var socialSending = [];\n\n    const promises = await socialMediaLinks.map(async (socia, key) => {\n      const responseSend = await postAddSocialMedia(socia);\n      console.log(\"responseSocialSEnd\", responseSend);\n      return (\n        responseSend &&\n        responseSend.socialMediaLink &&\n        responseSend.socialMediaLink._id\n      );\n    });\n    const socialSending = await Promise.all(promises)\n    return socialSending;\n  };\n\n  const onSubmit = async (values) => {\n    console.log(\"updateProfile\", values);\n    let profileValues = values;\n    const socialMediaLinks = profileValues.socialMediaLinks;\n    console.log(\n      \"onSubmitProfileValues\",\n      profileValues,\n      socialMediaLinks,\n      values\n    );\n    try {\n      message.loading({\n        content: \"Updating Profile Info\",\n        duration: 0,\n      });\n      const socialSending = await handleSocialLinksSubmission(socialMediaLinks);\n      console.log(\"socialSendingLoop\", socialSending);\n      const profileSubmissionObj = {\n        ...profileValues,\n        socialMediaLinks: socialSending,\n      };\n      // const profileSubmissionObj = {\n      //   bio: \"I am a web developer\",\n      //   firstName: \"Lokesh\",\n      //   lastName: \"Rana\",\n      //   profileImage: null,\n      //   socialMediaLinks: [\"5fe9cab0ebe9b40017220f90\"],\n      //   username: \"lokeshrana9999\",\n      // };\n      // // const sending = null;\n      console.log(\"profileSubmissionObj\", profileSubmissionObj);\n      const sending = await profileMutation(profileSubmissionObj);\n      message.destroy();\n      if (sending) {\n        console.log(\"sendingsending\", sending);\n        message.success({\n          duration: 2,\n          content: \"Profile Updated\",\n        });\n        history.push(\"/\");\n      } else {\n        console.log(\"elsesocial\", socialSending);\n        socialSending &&\n          socialSending.data &&\n          sending &&\n          sending.data &&\n          message.error({\n            duration: 2,\n            content: `${sending.data.message}`,\n          });\n      }\n      return sending;\n    } catch (e) {\n      message.destroy();\n      console.log(\"error\", e);\n      e &&\n        e.data &&\n        message.error({\n          duration: 2,\n          content: e.data.message,\n        });\n    }\n  };\n\n  console.log(\"currentUser\", props);\n  return (\n    <ProfileEditView\n      onSubmit={onSubmit}\n      user={currentUser}\n      socialMediaCategoryList={socialMediaCategoryList}\n    />\n  );\n};\n\n// const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\n// const mapStateToProps = (state /*, ownProps*/) => {\n//   console.log(\"mapstatetoprops\", state);\n//   return {\n//     accessToken: state.app.accessToken,\n//     refreshToken: state.app.refreshToken,\n//   };\n// };\n\nexport default withCurrentUser(\n  withSocialMediaCategories(withAddProfile(withAddSocialMedia(ProfileEdit)))\n);\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useGet, useMutate } from \"restful-react\";\n\nimport { connect } from \"react-redux\";\nimport { ApiContext, ProfileApiUrls } from \"../../api\";\nimport { PageLoader } from \"../look/mobile\";\nimport { setAccessTokene, setRefreshTokene } from \"../../store/appReducer\";\n\n// import authentication from '@gqlapp/authentication-client-react';\n\n// import CURRENT_USER_QUERY from '../graphql/CurrentUserQuery.graphql';\nconst withCurrentUserProfile = (Component) => {\n  const WithUserInner = ({ ...props }) => {\n    const { history, refreshToken, setAccessTokene, accessToken } = props;\n    const defaultApiUrl = useContext(ApiContext);\n    const apiUrl = defaultApiUrl + ProfileApiUrls.getCurrentUserProfile;\n    var currentUserProfileLoading = true;\n\n    var currentUserProfileData;\n    const { data, loading, error } = useGet({\n      path: apiUrl,\n      requestOptions: {\n        headers: { Authorization: `Bearer ${accessToken}` },\n      },\n    });\n    currentUserProfileLoading = loading;\n    currentUserProfileData = data && data.userProfile;\n    console.log(data, loading, error);\n\n    // if (\n    //   !currentUserProfileLoading &&\n    //   !currentUserProfileData &&\n    //   error &&\n    //   error.status === 401\n    // ) {\n    // }\n    return currentUserProfileLoading || !currentUserProfileData ? (\n      <PageLoader />\n    ) : (\n      <Component\n        {...props}\n        currentUserProfile={currentUserProfileData}\n        currentUserProfileLoading={currentUserProfileLoading}\n      />\n    );\n  };\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\n  const mapStateToProps = (state /*, ownProps*/) => {\n    console.log(\"mapstatetoprops\", state);\n    return {\n      accessToken: state.app.accessToken,\n      refreshToken: state.app.refreshToken,\n    };\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(WithUserInner);\n};\n\nconst withAddProfile = (Component) => {\n  const WithUserInner = ({ ...props }) => {\n    const { accessToken, currentUser } = props;\n    const defaultApiUrl = useContext(ApiContext);\n\n    const {\n      mutate: postUserProfileMutation,\n      loading: postUserProfileLoading,\n    } = useMutate({\n      verb: \"POST\",\n      path: defaultApiUrl + ProfileApiUrls.postUserProfile,\n      requestOptions: {\n        headers: { Authorization: `Bearer ${accessToken}` },\n      },\n    });\n    const {\n      mutate: putUserProfileMutation,\n      loading: putUserProfileLoading,\n    } = useMutate({\n      verb: \"PUT\",\n      path:\n        defaultApiUrl +\n        ProfileApiUrls.putUserProfile(\n          currentUser.userProfile && currentUser.userProfile._id\n        ),\n      requestOptions: {\n        headers: { Authorization: `Bearer ${accessToken}` },\n      },\n    });\n    // if (\n    //   !currentUserLoading &&\n    //   !currentUserData &&\n    //   error &&\n    //   error.status === 401\n    // ) {\n    // }\n    return (\n      <Component\n        {...props}\n        postUserProfileMutation={postUserProfileMutation}\n        putUserProfileMutation={putUserProfileMutation}\n      />\n    );\n  };\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\n  const mapStateToProps = (state /*, ownProps*/) => {\n    console.log(\"mapstatetoprops\", state);\n    return {\n      accessToken: state.app.accessToken,\n      refreshToken: state.app.refreshToken,\n    };\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(WithUserInner);\n};\n\nconst withAddSocialMedia = (Component) => {\n  const WithAddSocialMediaInner = ({ ...props }) => {\n    const { accessToken } = props;\n    const defaultApiUrl = useContext(ApiContext);\n\n    const {\n      mutate: postAddSocialMedia,\n      loading: postAddSocialMediaLoading,\n    } = useMutate({\n      verb: \"POST\",\n      path: defaultApiUrl + ProfileApiUrls.postSocialMediaLinks,\n      requestOptions: {\n        headers: { Authorization: `Bearer ${accessToken}` },\n      },\n    });\n    return (\n      <Component\n        {...props}\n        postAddSocialMedia={postAddSocialMedia}\n        postAddSocialMediaLoading={postAddSocialMediaLoading}\n      />\n    );\n  };\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\n  const mapStateToProps = (state /*, ownProps*/) => {\n    console.log(\"mapstatetoprops\", state);\n    return {\n      accessToken: state.app.accessToken,\n      refreshToken: state.app.refreshToken,\n    };\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(WithAddSocialMediaInner);\n};\n\n\n\nconst withSocialMediaCategories = (Component) => {\n  const WithUserInner = ({ ...props }) => {\n    const { history, refreshToken, setAccessTokene, accessToken } = props;\n    const defaultApiUrl = useContext(ApiContext);\n    const apiUrl = defaultApiUrl + ProfileApiUrls.getSocialMediaCategories;\n    const {\n      data: socialMediaCategories,\n      loading: socialMediaCategoriesLoading,\n      error,\n    } = useGet({\n      path: apiUrl,\n      requestOptions: {\n        headers: { Authorization: `Bearer ${accessToken}` },\n      },\n    });\n    const socialMediaCategoryList =\n      socialMediaCategories && socialMediaCategories.socialMediaCategoryList;\n    // if (\n    //   !currentUserProfileLoading &&\n    //   !currentUserProfileData &&\n    //   error &&\n    //   error.status === 401\n    // ) {\n    // }\n    return socialMediaCategoriesLoading || !socialMediaCategoryList ? (\n      <PageLoader />\n    ) : (\n      <Component\n        {...props}\n        socialMediaCategoryList={socialMediaCategoryList}\n        socialMediaCategoriesLoading={socialMediaCategoriesLoading}\n      />\n    );\n  };\n  const mapDispatchToProps = { setAccessTokene, setRefreshTokene };\n  const mapStateToProps = (state /*, ownProps*/) => {\n    console.log(\"mapstatetoprops\", state);\n    return {\n      accessToken: state.app.accessToken,\n      refreshToken: state.app.refreshToken,\n    };\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(WithUserInner);\n};\n\n// const RefreshAccessToken = ({ children,  }) => {\n//   const { mutate: refreshAccessToken, loading } = useMutate({\n//     verb: \"POST\",\n//     path: defaultApiUrl + AuthApiUrls.refreshAccessToken,\n//   });\n//   const refreshAccessTokenData = refreshAccessToken(refreshToken);\n//   console.log(\"refreshAccessToken\", refreshAccessTokenData);\n//   return loading && (<PageLoader> <React.Fragment>{children}</React.Fragment></PageLoader>);\n// };\n\n// export default RefreshAccessToken;\n\n// const hasRole = (role, currentUser) => {\n//   return currentUser &&\n//     (!role ||\n//       (Array.isArray(role) ? role : [role]).indexOf(currentUser.role) >= 0)\n//     ? true\n//     : false;\n// };\n\n// const withLoadedUser = (Component) => {\n//   const WithLoadedUser = ({ currentUserLoading, ...props }) =>\n//     currentUserLoading ? null : <Component {...props} />;\n\n//   WithLoadedUser.propTypes = {\n//     currentUser: PropTypes.object,\n//     currentUserLoading: PropTypes.bool.isRequired,\n//   };\n\n//   return withCurrentUser(WithLoadedUser);\n// };\n\n// const IfLoggedInComponent = ({\n//   currentUser,\n//   role,\n//   children,\n//   elseComponent,\n//   refetchCurrentUser,\n//   ...restProps\n// }) =>\n//   hasRole(role, currentUser)\n//     ? React.cloneElement(children, {\n//         ...restProps,\n//       })\n//     : elseComponent || null;\n// IfLoggedInComponent.propTypes = {\n//   currentUser: PropTypes.object,\n//   role: PropTypes.oneOfType([\n//     PropTypes.arrayOf(PropTypes.string),\n//     PropTypes.string,\n//   ]),\n//   elseComponent: PropTypes.node,\n//   children: PropTypes.node,\n// };\n\n// const IfLoggedIn = withLoadedUser(IfLoggedInComponent);\n\n// const IfNotLoggedInComponent = ({\n//   currentUser,\n//   children,\n//   refetchCurrentUser,\n//   ...restProps\n// }) =>\n//   !currentUser\n//     ? React.cloneElement(children, {\n//         ...restProps,\n//       })\n//     : null;\n// IfNotLoggedInComponent.propTypes = {\n//   currentUser: PropTypes.object,\n//   children: PropTypes.node,\n// };\n\n// const IfNotLoggedIn = withLoadedUser(IfNotLoggedInComponent);\n\n// const withLogout = (Component) =>\n//   withApollo(({ client, ...props }) => {\n//     const newProps = {\n//       ...props,\n//       logout: () => authentication.doLogout(client),\n//     };\n//     return <Component {...newProps} />;\n//   });\n\nexport {\n  withAddProfile,\n  withCurrentUserProfile,\n  withSocialMediaCategories,\n  withAddSocialMedia\n  //   hasRole,\n  //   withLoadedUser,\n  //   IfLoggedIn,\n  //   IfNotLoggedIn,\n  //   withLogout,\n};\n","import React, { Component } from \"react\";\nimport { Flex } from \"antd-mobile\";\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"react-avatar\";\nimport styled, { withTheme } from \"styled-components\";\nimport { WhiteSpace } from \"../look/mobile\";\n\nconst BlockCardWrapper = styled.div`\n  padding: 20px;\n  background-color: #2c2c2c;\n  height: 107px;\n  margin-bottom: 20px;\n  border-radius: 7px;\n  border: solid 1px #f2f2f2;\n  background-color: #f8f8f8;\n`;\n\nconst BlockCardTitle = styled.h2`\n  font-family: Circular Std Medium;\n  font-size: 17px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.41;\n  letter-spacing: normal;\n  text-align: left;\n  color: #000000;\n`;\n\nconst BlockCardDescription = styled.p`\n  font-family: Circular Std Medium;\n  font-size: 12px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.58;\n  letter-spacing: normal;\n  text-align: left;\n  color: #000000;\n`;\n\nconst BlockCardAvatarWrapper = styled.div`\n  height: 55px;\n  width: 55px;\n  display: grid;\n  place-items: center;\n  background: white;\n  border-radius: 55px;\n  box-shadow: 0 5px 15px 0 rgba(0, 0, 0, 0.09);\n`;\n\nconst BlockCard = (props) => {\n  const { blockCategory, key } = props;\n  return (\n    <Link key={key} to={`/block/add/${blockCategory._id}`}>\n      <BlockCardWrapper key={key}>\n        <Flex>\n          <Flex.Item style={{ flex: 1 }}>\n            <div\n              style={{\n                height: \"100%\",\n                width: \"fit-content\",\n                display: \"grid\",\n                placeItems: \"center\",\n              }}\n            >\n              <BlockCardAvatarWrapper>\n                <Avatar\n                  size=\"30\"\n                  src={\n                    blockCategory &&\n                    blockCategory.image &&\n                    blockCategory.image.url\n                  }\n                />\n              </BlockCardAvatarWrapper>\n            </div>\n          </Flex.Item>\n          <Flex.Item style={{ flex: 3 }}>\n            <BlockCardTitle className=\"one-line-limiter\">\n              {blockCategory && blockCategory.title}\n            </BlockCardTitle>\n            <WhiteSpace size=\"sm\" />\n            <BlockCardDescription className=\"two-line-limiter\">\n              {blockCategory && blockCategory.description}\n            </BlockCardDescription>\n          </Flex.Item>\n        </Flex>\n      </BlockCardWrapper>\n    </Link>\n  );\n};\n\nexport default withTheme(BlockCard);\n","import React, { useContext, useState } from \"react\";\nimport styled, { withTheme } from \"styled-components\";\nimport { useGet } from \"restful-react\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\n\nimport { WhiteSpace, Loader } from \"../look/mobile\";\nimport { ApiContext, BlockApiUrls } from \"../../api\";\nimport BlockCard from \"./BlockCard\";\n\nconst PageHead = styled.h1`\n  font-family: Circular Std Black;\n  font-size: 22px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 0.86;\n  letter-spacing: normal;\n  text-align: center;\n  color: #000000;\n  word-spacing: -8px;\n  position: relative;\n`;\n\nconst ChooseBlockCategoryView = (props) => {\n  const { history, navigation } = props;\n  console.log(\"history\", history);\n  const defaultApiUrl = useContext(ApiContext);\n  const apiUrl = defaultApiUrl + BlockApiUrls.getBlockCategory;\n  const { data, loading } = useGet({\n    path: apiUrl,\n  });\n  const blockCategoryList = data && data.blockCategoryList;\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        minHeight: \"100vh\",\n        position: \"relative\",\n        display: \"grid\",\n        placeItems: \"center\",\n        background: \"white\",\n      }}\n    >\n      {\" \"}\n      <div\n        style={{\n          padding: \"15px 20px\",\n          maxWidth: \"500px\",\n          height: \"100%\",\n          width: \"100%\",\n          overflow: \"hidden\",\n        }}\n      >\n        <WhiteSpace size=\"xl\" />\n        <PageHead>\n          {\" \"}\n          <AiOutlineArrowLeft\n            style={{ position: \"absolute\", top: '-3px', left: 0 }}\n            onClick={history.goBack}\n          />\n          Add a new card\n        </PageHead>\n        <WhiteSpace size=\"xl\" />\n        {loading ? (\n          <Loader size=\"large\" />\n        ) : (\n          <div>\n            {blockCategoryList && blockCategoryList.length !== 0 ? (\n              <div>\n                {blockCategoryList.map((blockCat, key) => (\n                  <BlockCard blockCategory={blockCat} key={key} />\n                ))}\n              </div>\n            ) : (\n              <h3>No cards available</h3>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default withTheme(ChooseBlockCategoryView);\n"],"sourceRoot":""}